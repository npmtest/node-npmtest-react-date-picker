{"/home/travis/build/npmtest/node-npmtest-react-date-picker/test.js":"/* istanbul instrument in package npmtest_react_date_picker */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-date-picker/lib.npmtest_react_date_picker.js":"/* istanbul instrument in package npmtest_react_date_picker */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_date_picker = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_date_picker = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-date-picker/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-date-picker && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_date_picker */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_date_picker\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_date_picker.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_date_picker.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_date_picker.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_date_picker.__dirname + '/lib.npmtest_react_date_picker.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TimeInput = exports.TimePicker = exports.Calendar = exports.DateField = exports.ClockInput = exports.Clock = exports.Footer = exports.NavBar = exports.MultiMonthView = exports.TransitionView = exports.DateFormatSpinnerInput = exports.DateFormatInput = exports.HistoryView = exports.DecadeView = exports.YearView = exports.MonthView = exports.DateEditor = exports.DatePicker = undefined;\n\nvar _MonthView = require('./MonthView');\n\nvar _MonthView2 = _interopRequireDefault(_MonthView);\n\nvar _TimePicker = require('./TimePicker');\n\nvar _TimePicker2 = _interopRequireDefault(_TimePicker);\n\nvar _TimeInput = require('./TimeInput');\n\nvar _TimeInput2 = _interopRequireDefault(_TimeInput);\n\nvar _TransitionView = require('./TransitionView');\n\nvar _TransitionView2 = _interopRequireDefault(_TransitionView);\n\nvar _MultiMonthView = require('./MultiMonthView');\n\nvar _MultiMonthView2 = _interopRequireDefault(_MultiMonthView);\n\nvar _HistoryView = require('./HistoryView');\n\nvar _HistoryView2 = _interopRequireDefault(_HistoryView);\n\nvar _YearView = require('./YearView');\n\nvar _YearView2 = _interopRequireDefault(_YearView);\n\nvar _DecadeView = require('./DecadeView');\n\nvar _DecadeView2 = _interopRequireDefault(_DecadeView);\n\nvar _NavBar = require('./NavBar');\n\nvar _NavBar2 = _interopRequireDefault(_NavBar);\n\nvar _Footer = require('./Footer');\n\nvar _Footer2 = _interopRequireDefault(_Footer);\n\nvar _Clock = require('./Clock');\n\nvar _Clock2 = _interopRequireDefault(_Clock);\n\nvar _ClockInput = require('./ClockInput');\n\nvar _ClockInput2 = _interopRequireDefault(_ClockInput);\n\nvar _DateField = require('./DateField');\n\nvar _DateField2 = _interopRequireDefault(_DateField);\n\nvar _Calendar = require('./Calendar');\n\nvar _Calendar2 = _interopRequireDefault(_Calendar);\n\nvar _DateFormatInput = require('./DateFormatInput');\n\nvar _DateFormatInput2 = _interopRequireDefault(_DateFormatInput);\n\nvar _DateFormatSpinnerInput = require('./DateFormatSpinnerInput');\n\nvar _DateFormatSpinnerInput2 = _interopRequireDefault(_DateFormatSpinnerInput);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _MonthView2.default;\n\n// allow people to import with other aliases as well\n\nvar DatePicker = exports.DatePicker = _Calendar2.default;\nvar DateEditor = exports.DateEditor = _DateField2.default;\n\nexports.MonthView = _MonthView2.default;\nexports.YearView = _YearView2.default;\nexports.DecadeView = _DecadeView2.default;\nexports.HistoryView = _HistoryView2.default;\nexports.DateFormatInput = _DateFormatInput2.default;\nexports.DateFormatSpinnerInput = _DateFormatSpinnerInput2.default;\nexports.TransitionView = _TransitionView2.default;\nexports.MultiMonthView = _MultiMonthView2.default;\nexports.NavBar = _NavBar2.default;\nexports.Footer = _Footer2.default;\nexports.Clock = _Clock2.default;\nexports.ClockInput = _ClockInput2.default;\nexports.DateField = _DateField2.default;\nexports.Calendar = _Calendar2.default;\nexports.TimePicker = _TimePicker2.default;\nexports.TimeInput = _TimeInput2.default;","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/MonthView/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderFooter = exports.NAV_KEYS = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _clampRange = require('../clampRange');\n\nvar _clampRange2 = _interopRequireDefault(_clampRange);\n\nvar _toMoment = require('../toMoment');\n\nvar _toMoment2 = _interopRequireDefault(_toMoment);\n\nvar _join = require('../join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _isInRange = require('../utils/isInRange');\n\nvar _isInRange2 = _interopRequireDefault(_isInRange);\n\nvar _NavBar = require('../NavBar');\n\nvar _NavBar2 = _interopRequireDefault(_NavBar);\n\nvar _Footer = require('../Footer');\n\nvar _Footer2 = _interopRequireDefault(_Footer);\n\nvar _bemFactory = require('../bemFactory');\n\nvar _bemFactory2 = _interopRequireDefault(_bemFactory);\n\nvar _joinFunctions = require('../joinFunctions');\n\nvar _joinFunctions2 = _interopRequireDefault(_joinFunctions);\n\nvar _assignDefined = require('../assignDefined');\n\nvar _assignDefined2 = _interopRequireDefault(_assignDefined);\n\nvar _BasicMonthView = require('../BasicMonthView');\n\nvar _BasicMonthView2 = _interopRequireDefault(_BasicMonthView);\n\nvar _onKeyDown = require('./onKeyDown');\n\nvar _onKeyDown2 = _interopRequireDefault(_onKeyDown);\n\nvar _navKeys = require('./navKeys');\n\nvar _navKeys2 = _interopRequireDefault(_navKeys);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TODAY = void 0;\n\nvar RENDER_DAY = function RENDER_DAY(props) {\n  var divProps = (0, _objectAssign2.default)({}, props);\n\n  delete divProps.date;\n  delete divProps.dateMoment;\n  delete divProps.day;\n  delete divProps.isAfterMaxDate;\n  delete divProps.isBeforeMinDate;\n  delete divProps.inRange;\n  delete divProps.timestamp;\n\n  return _react2.default.createElement('div', divProps);\n};\n\nvar isDateInMinMax = function isDateInMinMax(timestamp, props) {\n  if (props.minDate && timestamp < props.minDate) {\n    return false;\n  }\n\n  if (props.maxDate && timestamp > props.maxDate) {\n    return false;\n  }\n\n  return true;\n};\n\nvar _isValidActiveDate = function _isValidActiveDate(timestamp, props) {\n  if (!props) {\n    throw new Error('props is mandatory in isValidActiveDate');\n  }\n\n  var dayProps = props.dayPropsMap[timestamp];\n\n  if (dayProps && dayProps.disabled) {\n    return false;\n  }\n\n  return isDateInMinMax(timestamp, props);\n};\n\nvar _isInView = function _isInView(mom, props) {\n  if (!props) {\n    throw new Error('props is mandatory in isInView');\n  }\n\n  var daysInView = props.daysInView;\n\n  return (0, _isInRange2.default)(mom, { range: daysInView, inclusive: true });\n};\n\nvar prepareViewDate = function prepareViewDate(props, state) {\n  var viewDate = props.viewDate === undefined ? state.viewDate : props.viewDate;\n\n  if (!viewDate && props.moment) {\n    return (0, _toMoment2.default)(props.moment);\n  }\n\n  return viewDate;\n};\n\nvar prepareDate = function prepareDate(props, state) {\n  if (props.range) {\n    return null;\n  }\n\n  return props.date === undefined ? state.date : props.date;\n};\n\nvar prepareRange = function prepareRange(props, state) {\n  if (props.moment) {\n    return null;\n  }\n\n  return props.partialRange ? props.range || state.range : state.range || props.range;\n};\n\nvar prepareActiveDate = function prepareActiveDate(props, state) {\n  var fallbackDate = prepareDate(props, state) || (prepareRange(props, state) || [])[0];\n\n  var activeDate = props.activeDate === undefined ?\n  // only fallback to date if activeDate not specified\n  state.activeDate || fallbackDate : props.activeDate;\n\n  var daysInView = props.daysInView;\n\n  if (activeDate && daysInView && props.constrainActiveInView) {\n    var activeMoment = this.toMoment(activeDate);\n\n    if (!_isInView(activeMoment, props)) {\n      var date = fallbackDate;\n      var dateMoment = this.toMoment(date);\n\n      if (date && _isInView(dateMoment, props) && _isValidActiveDate(+dateMoment, props)) {\n        return date;\n      }\n\n      return null;\n    }\n  }\n\n  return _isValidActiveDate(+activeDate, props) ? activeDate : null;\n};\n\nvar _renderFooter = function renderFooter(props, buttonHandlers) {\n  if (!props.footer) {\n    return null;\n  }\n\n  buttonHandlers = buttonHandlers || props;\n\n  var renderFooter = props.renderFooter;\n\n  var footerFnProps = {\n    onTodayClick: buttonHandlers.onFooterTodayClick,\n    onClearClick: buttonHandlers.onFooterClearClick,\n    onOkClick: buttonHandlers.onFooterOkClick,\n    onCancelClick: buttonHandlers.onFooterCancelClick\n  };\n\n  var childFooter = _react2.default.Children.toArray(props.children).filter(function (c) {\n    return c && c.props && c.props.isDatePickerFooter;\n  })[0];\n\n  var childFooterProps = childFooter ? childFooter.props : null;\n\n  if (childFooterProps) {\n    // also take into account the props on childFooter\n    // so we merge those with the other props already built\n    Object.keys(footerFnProps).forEach(function (key) {\n      if (childFooter.props[key]) {\n        footerFnProps[key] = (0, _joinFunctions2.default)(footerFnProps[key], childFooter.props[key]);\n      }\n    });\n  }\n\n  var footerProps = (0, _assignDefined2.default)({}, footerFnProps, {\n    todayButton: props.todayButton,\n    todayButtonText: props.todayButtonText,\n    clearButton: props.clearButton,\n    clearButtonText: props.clearButtonText,\n\n    okButton: props.okButton === undefined && !props.insideField ? false : props.okButton,\n\n    okButtonText: props.okButtonText,\n\n    cancelButton: props.cancelButton === undefined && !props.insideField ? false : props.cancelButton,\n\n    cancelButtonText: props.cancelButtonText,\n\n    clearDate: props.clearDate || props.footerClearDate,\n\n    selectDate: props.selectDate\n  });\n\n  if (childFooter) {\n    if (renderFooter) {\n      return renderFooter((0, _objectAssign2.default)({}, childFooter.props, footerProps));\n    }\n\n    return _react2.default.cloneElement(childFooter, footerProps);\n  }\n\n  if (renderFooter) {\n    return renderFooter(footerProps);\n  }\n\n  return _react2.default.createElement(_Footer2.default, footerProps);\n};\n\nvar MonthView = function (_Component) {\n  _inherits(MonthView, _Component);\n\n  _createClass(MonthView, [{\n    key: 'isInView',\n    value: function isInView(mom, props) {\n      return _isInView(mom, props || this.p);\n    }\n  }]);\n\n  function MonthView(props) {\n    _classCallCheck(this, MonthView);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MonthView).call(this, props));\n\n    _this.state = {\n      range: props.defaultRange,\n      date: props.defaultDate,\n      hoverRange: props.defaultHoverRange,\n      activeDate: props.defaultActiveDate,\n      viewDate: props.defaultViewDate\n    };\n    return _this;\n  }\n\n  _createClass(MonthView, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.updateBem(this.props);\n      this.updateToMoment(this.props);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.defaultClassName != this.props.defaultClassName) {\n        this.updateBem(nextProps);\n      }\n\n      this.updateToMoment(nextProps);\n    }\n  }, {\n    key: 'updateBem',\n    value: function updateBem(props) {\n      this.bem = (0, _bemFactory2.default)(props.defaultClassName);\n    }\n  }, {\n    key: 'updateToMoment',\n    value: function updateToMoment(props) {\n      this.toMoment = function (value, dateFormat) {\n        return (0, _toMoment2.default)(value, {\n          locale: props.locale,\n          dateFormat: dateFormat || props.dateFormat\n        });\n      };\n\n      TODAY = +this.toMoment().startOf('day');\n    }\n  }, {\n    key: 'prepareClassName',\n    value: function prepareClassName(props) {\n      return (0, _join2.default)(props.className, this.bem(), this.bem(null, 'theme-' + props.theme));\n    }\n  }, {\n    key: 'prepareProps',\n    value: function prepareProps(thisProps, state) {\n      var _this2 = this;\n\n      var props = this.p = (0, _objectAssign2.default)({}, thisProps);\n\n      state = state || this.state;\n\n      props.hoverRange = props.hoverRange === undefined ? this.state.hoverRange : props.hoverRange;\n\n      props.dayPropsMap = {};\n      props.className = this.prepareClassName && this.prepareClassName(props);\n\n      var minDate = props.minDate;\n      var maxDate = props.maxDate;\n\n\n      if (minDate) {\n        props.minDateMoment = this.toMoment(props.minDate).startOf('day');\n        props.minDate = +props.minDateMoment;\n      }\n\n      if (maxDate) {\n        props.maxDateMoment = this.toMoment(props.maxDate);\n        props.maxDate = +props.maxDateMoment;\n      }\n\n      var date = prepareDate(props, state);\n\n      if (date) {\n        props.moment = props.moment || (props.range ? null : this.toMoment(date).startOf('day'));\n        props.timestamp = props.moment ? +props.moment : null;\n      }\n\n      props.viewMoment = props.viewMoment || this.toMoment(prepareViewDate(props, state));\n\n      if (props.constrainViewDate && props.minDate && props.viewMoment.isBefore(props.minDate)) {\n        props.minConstrained = true;\n        props.viewMoment = this.toMoment(props.minDate);\n      }\n\n      if (props.constrainViewDate && props.maxDate && props.viewMoment.isAfter(props.maxDate)) {\n        props.maxConstrained = true;\n        props.viewMoment = this.toMoment(props.maxDate);\n      }\n\n      props.viewMonthStart = this.toMoment(props.viewMoment).startOf('month');\n      props.viewMonthEnd = this.toMoment(props.viewMoment).endOf('month');\n\n      var range = prepareRange(props, state);\n\n      if (range) {\n        props.range = range.map(function (d) {\n          return _this2.toMoment(d).startOf('day');\n        });\n        props.rangeStart = state.rangeStart || (props.range.length == 1 ? props.range[0] : null);\n      }\n\n      props.daysInView = (0, _BasicMonthView.getDaysInMonthView)(props.viewMoment, props);\n\n      var activeDate = prepareActiveDate.call(this, props, state);\n\n      if (activeDate) {\n        props.activeDate = +this.toMoment(activeDate).startOf('day');\n      }\n\n      return props;\n    }\n  }, {\n    key: 'getViewMoment',\n    value: function getViewMoment() {\n      return this.p.viewMoment;\n    }\n  }, {\n    key: 'getViewSize',\n    value: function getViewSize() {\n      return 1;\n    }\n\n    // handleViewMouseLeave(){\n    //   this.state.range && this.setState({ range: null })\n    // }\n\n  }, {\n    key: 'preparePrevNextClassName',\n    value: function preparePrevNextClassName(timestamp, props) {\n      var viewMonthStart = props.viewMonthStart;\n      var viewMonthEnd = props.viewMonthEnd;\n\n\n      var before = timestamp < viewMonthStart;\n      var after = timestamp > viewMonthEnd;\n\n      var thisMonth = !before && !after;\n\n      return (0, _join2.default)(timestamp == TODAY && this.bem('day--today'), props.highlightToday && timestamp == TODAY && this.bem('day--today-highlight'), before && this.bem('day--prev-month'), before && !props.showDaysBeforeMonth && this.bem('day--hidden'), after && this.bem('day--next-month'), after && !props.showDaysAfterMonth && this.bem('day--hidden'), thisMonth && this.bem('day--this-month'));\n    }\n  }, {\n    key: 'prepareMinMaxProps',\n    value: function prepareMinMaxProps(timestamp, props) {\n      var classes = [];\n\n      var isBeforeMinDate = false;\n      var isAfterMaxDate = false;\n\n      var minDate = props.minDate;\n      var maxDate = props.maxDate;\n\n\n      if (minDate && timestamp < minDate) {\n        classes.push(this.bem('day--disabled-min'));\n        isBeforeMinDate = true;\n      }\n\n      if (maxDate && timestamp > maxDate) {\n        classes.push(this.bem('day--disabled-max'));\n        isAfterMaxDate = true;\n      }\n\n      return {\n        className: (0, _join2.default)(classes),\n        isBeforeMinDate: isBeforeMinDate,\n        isAfterMaxDate: isAfterMaxDate,\n        disabled: isBeforeMinDate || isAfterMaxDate\n      };\n    }\n  }, {\n    key: 'prepareWeekendClassName',\n    value: function prepareWeekendClassName(dateMoment, _ref) {\n      var highlightWeekends = _ref.highlightWeekends;\n\n      // const props = this.p\n      var weekDay = dateMoment.day();\n\n      // const weekendStartDay = getWeekendStartDay(props)\n\n      if (weekDay === 0 /* Sunday */ || weekDay === 6 /* Saturday */) {\n          // if (weekDay === weekendStartDay || weekDay === weekendStartDay + 1) {\n          return (0, _join2.default)(this.bem('day--weekend'), highlightWeekends && this.bem('day--weekend-highlight'));\n        }\n\n      return '';\n    }\n  }, {\n    key: 'prepareRangeProps',\n    value: function prepareRangeProps(dateMoment, props) {\n      var inRange = false;\n\n      var className = [];\n\n      var hoverRange = props.hoverRange;\n      var range = props.range;\n\n\n      if (range) {\n        var _range = _slicedToArray(range, 2);\n\n        var rangeStart = _range[0];\n        var rangeEnd = _range[1];\n\n\n        if (!range.length) {\n          rangeStart = props.rangeStart;\n        }\n\n        // const rangeName = !props.partialRange ? 'hover-range' : 'range'\n        var rangeName = 'range'; //hoverRange ? 'range' : 'hover-range'\n\n        if (rangeStart && dateMoment.isSame(rangeStart)) {\n          className.push(this.bem('day--' + rangeName + '-start'));\n          className.push(this.bem('day--in-' + rangeName));\n\n          if (!rangeEnd) {\n            className.push(this.bem('day--' + rangeName + '-end'));\n          }\n\n          inRange = true;\n        }\n\n        if (rangeEnd && dateMoment.isSame(rangeEnd)) {\n          className.push(this.bem('day--' + rangeName + '-end'));\n          className.push(this.bem('day--in-' + rangeName));\n\n          inRange = true;\n        }\n\n        if (!inRange && (0, _isInRange2.default)(dateMoment, range)) {\n          className.push(this.bem('day--in-' + rangeName));\n\n          inRange = true;\n        }\n      }\n\n      if (range && range.length < 2 && hoverRange && (0, _isInRange2.default)(dateMoment, hoverRange)) {\n        className.push(this.bem('day--in-hover-range'));\n\n        if (dateMoment.isSame(hoverRange[0])) {\n          className.push(this.bem('day--hover-range-start'));\n        }\n\n        if (dateMoment.isSame(hoverRange[1])) {\n          className.push(this.bem('day--hover-range-end'));\n        }\n      }\n\n      return {\n        inRange: inRange,\n        className: (0, _join2.default)(className)\n      };\n    }\n  }, {\n    key: 'prepareDayProps',\n    value: function prepareDayProps(renderDayProps, props) {\n      var timestamp = renderDayProps.timestamp;\n      var dateMoment = renderDayProps.dateMoment;\n      var className = renderDayProps.className;\n\n\n      props = props || this.p;\n      var result = {};\n\n      var minMaxProps = this.prepareMinMaxProps(timestamp, props);\n      var rangeProps = this.prepareRangeProps(dateMoment, props);\n\n      var weekendClassName = this.prepareWeekendClassName(dateMoment, props);\n      var prevNextClassName = this.preparePrevNextClassName(timestamp, props);\n\n      var currentTimestamp = props.timestamp;\n\n      (0, _objectAssign2.default)(result, minMaxProps, rangeProps, {\n        children: _react2.default.createElement(\n          'div',\n          { className: this.bem('day-text') },\n          renderDayProps.day\n        ),\n        className: (0, _join2.default)([minMaxProps.className, rangeProps.className, prevNextClassName, weekendClassName, timestamp == currentTimestamp ? this.bem('day--value') : null, timestamp == props.activeDate ? this.bem('day--active') : null, className])\n      });\n\n      if (!result.disabled && props.isDisabledDay) {\n        result.disabled = props.isDisabledDay(renderDayProps, props);\n      }\n\n      return result;\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      var domNode = (0, _reactDom.findDOMNode)(this);\n\n      if (domNode) {\n        domNode.focus();\n      }\n    }\n  }, {\n    key: 'onDayTextMouseEnter',\n    value: function onDayTextMouseEnter(_ref2) {\n      var dateMoment = _ref2.dateMoment;\n      var timestamp = _ref2.timestamp;\n\n      if (!this.state.focused) {\n        this.focus();\n      }\n\n      this.onActiveDateChange({ dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'renderDay',\n    value: function renderDay(renderProps) {\n      var _this3 = this;\n\n      var props = this.p;\n\n      var _renderProps = renderProps;\n      var dateMoment = _renderProps.dateMoment;\n      var timestamp = _renderProps.timestamp;\n\n\n      (0, _objectAssign2.default)(renderProps, this.prepareDayProps(renderProps, props));\n\n      if (props.range && props.highlightRangeOnMouseMove) {\n        renderProps.onMouseEnter = this.handleDayMouseEnter.bind(this, renderProps);\n      }\n\n      if (typeof props.onRenderDay === 'function') {\n        renderProps = props.onRenderDay(renderProps);\n      }\n\n      if (renderProps.disabled) {\n        renderProps.className = (0, _join2.default)(this.bem('day--disabled'), renderProps.className);\n      } else {\n        (function () {\n          var eventParam = { dateMoment: dateMoment, timestamp: timestamp };\n\n          var onClick = _this3.handleClick.bind(_this3, eventParam);\n          var prevOnClick = renderProps.onClick;\n\n          renderProps.onClick = prevOnClick ? function () {\n            prevOnClick.apply(undefined, arguments);\n            onClick.apply(undefined, arguments);\n          } : onClick;\n\n          if (props.activateOnHover && _this3.props.activeDate !== null) {\n            (function () {\n              var onMouseEnter = _this3.onDayTextMouseEnter.bind(_this3, eventParam);\n              var prevOnMouseEnter = renderProps.onMouseEnter;\n\n              renderProps.onMouseEnter = prevOnMouseEnter ? function () {\n                prevOnMouseEnter.apply(undefined, arguments);\n                onMouseEnter.apply(undefined, arguments);\n              } : onMouseEnter;\n            })();\n          }\n        })();\n      }\n\n      props.dayPropsMap[timestamp] = renderProps;\n\n      var renderFunction = props.renderDay || RENDER_DAY;\n\n      var result = renderFunction(renderProps);\n\n      if (result === undefined) {\n        result = RENDER_DAY(renderProps);\n      }\n\n      return result;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.p = this.prepareProps(this.props);\n\n      var basicViewProps = (0, _objectAssign2.default)({}, props);\n\n      delete basicViewProps.activeDate;\n      delete basicViewProps.activateOnHover;\n      delete basicViewProps.arrows;\n\n      delete basicViewProps.cleanup;\n      delete basicViewProps.clockTabIndex;\n      delete basicViewProps.constrainViewDate;\n      delete basicViewProps.constrainActiveInView;\n      delete basicViewProps.dayPropsMap;\n      delete basicViewProps.date;\n      delete basicViewProps.defaultActiveDate;\n      delete basicViewProps.defaultDate;\n      delete basicViewProps.defaultRange;\n      delete basicViewProps.defaultViewDate;\n\n      delete basicViewProps.enableHistoryView;\n\n      delete basicViewProps.focusOnFooterMouseDown;\n      delete basicViewProps.focusOnNavMouseDown;\n      delete basicViewProps.footer;\n      delete basicViewProps.footerClearDate;\n\n      delete basicViewProps.getTransitionTime;\n\n      delete basicViewProps.highlightRangeOnMouseMove;\n      delete basicViewProps.highlightToday;\n      delete basicViewProps.highlightWeekends;\n      delete basicViewProps.hoverRange;\n\n      delete basicViewProps.index;\n      delete basicViewProps.insideField;\n      delete basicViewProps.insideMultiView;\n      delete basicViewProps.isDatePicker;\n      delete basicViewProps.isDisabledDay;\n\n      delete basicViewProps.maxConstrained;\n      delete basicViewProps.maxDate;\n      delete basicViewProps.maxDateMoment;\n      delete basicViewProps.minConstrained;\n      delete basicViewProps.minDate;\n      delete basicViewProps.minDateMoment;\n\n      delete basicViewProps.navBarArrows;\n      delete basicViewProps.navNext;\n      delete basicViewProps.navigation;\n      delete basicViewProps.navigate;\n      delete basicViewProps.navOnDateClick;\n      delete basicViewProps.navPrev;\n      delete basicViewProps.onActiveDateChange;\n      delete basicViewProps.onChange;\n      delete basicViewProps.onHoverRangeChange;\n      delete basicViewProps.onRangeChange;\n      delete basicViewProps.onViewDateChange;\n      delete basicViewProps.onTransitionStart;\n\n      delete basicViewProps.partialRange;\n      delete basicViewProps.range;\n      delete basicViewProps.rangeStart;\n      delete basicViewProps.renderNavBar;\n\n      delete basicViewProps.select;\n      delete basicViewProps.showDaysAfterMonth;\n      delete basicViewProps.showDaysBeforeMonth;\n\n      delete basicViewProps.theme;\n\n      delete basicViewProps.viewDate;\n      delete basicViewProps.viewMonthEnd;\n      delete basicViewProps.viewMonthStart;\n\n      if (typeof props.cleanup == 'function') {\n        props.cleanup(basicViewProps);\n      }\n\n      return _react2.default.createElement(_BasicMonthView2.default, _extends({\n        tabIndex: 0\n      }, basicViewProps, {\n\n        renderChildren: this.renderChildren,\n\n        onKeyDown: this.onViewKeyDown,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n\n        renderDay: this.renderDay,\n        viewMoment: props.viewMoment,\n        onMouseLeave: props.highlightRangeOnMouseMove && this.handleViewMouseLeave\n      }));\n    }\n  }, {\n    key: 'handleViewMouseLeave',\n    value: function handleViewMouseLeave(event) {\n      if (this.props.onMouseLeave) {\n        this.props.onMouseLeave(event);\n      }\n\n      if (this.state.hoverRange) {\n        this.setHoverRange(null);\n      }\n    }\n  }, {\n    key: 'renderChildren',\n    value: function renderChildren(children) {\n      var props = this.p;\n      var navBar = this.renderNavBar(props);\n      var footer = this.renderFooter(props);\n\n      var result = [navBar, children, footer];\n\n      if (props.renderChildren) {\n        return props.renderChildren(result);\n      }\n\n      return result;\n    }\n  }, {\n    key: 'focusFromFooter',\n    value: function focusFromFooter() {\n      if (!this.isFocused() && this.props.focusOnFooterMouseDown) {\n        this.focus();\n      }\n    }\n  }, {\n    key: 'onFooterTodayClick',\n    value: function onFooterTodayClick() {\n      this.focusFromFooter();\n\n      if (this.props.onFooterTodayClick) {\n        if (this.props.onFooterTodayClick() === false) {\n          return;\n        }\n      }\n\n      this.select({ dateMoment: this.toMoment(Date.now()) });\n    }\n  }, {\n    key: 'onFooterClearClick',\n    value: function onFooterClearClick() {\n      this.focusFromFooter();\n\n      if (this.props.onFooterClearClick) {\n        if (this.props.onFooterClearClick() === false) {\n          return;\n        }\n      }\n\n      this.select({ dateMoment: null });\n    }\n  }, {\n    key: 'onFooterOkClick',\n    value: function onFooterOkClick() {\n      this.focusFromFooter();\n\n      if (this.props.onFooterOkClick) {\n        this.props.onFooterOkClick();\n      }\n    }\n  }, {\n    key: 'onFooterCancelClick',\n    value: function onFooterCancelClick() {\n      if (this.props.onFooterCancelClick) {\n        this.props.onFooterCancelClick();\n      }\n    }\n  }, {\n    key: 'renderFooter',\n    value: function renderFooter(props) {\n      return _renderFooter((0, _objectAssign2.default)({}, props, {\n        selectDate: this.select,\n        owner: this\n      }), this);\n    }\n  }, {\n    key: 'renderNavBar',\n    value: function renderNavBar(props) {\n      var _this4 = this;\n\n      var theme = props.theme;\n\n      var childNavBar = _react2.default.Children.toArray(props.children).filter(function (c) {\n        return c && c.props && c.props.isDatePickerNavBar;\n      })[0];\n\n      var ref = function ref(navBar) {\n        _this4.navBar = navBar;\n      };\n\n      if (!childNavBar) {\n        if (props.navigation || props.renderNavBar) {\n          return this.renderNavBarComponent((0, _assignDefined2.default)({\n            // prevDisabled,\n            // nextDisabled,\n            minDate: props.minDate,\n            maxDate: props.maxDate,\n            theme: theme,\n            secondary: true,\n            date: props.moment,\n            viewMoment: props.viewMoment,\n            onViewDateChange: this.onNavViewDateChange,\n            onMouseDown: this.onNavMouseDown,\n            arrows: props.navBarArrows,\n            ref: ref\n          }, {\n            enableHistoryView: props.enableHistoryView\n          }));\n        }\n\n        return null;\n      }\n\n      var navBarProps = (0, _objectAssign2.default)({}, childNavBar.props, (0, _assignDefined2.default)({\n        viewMoment: props.viewMoment,\n        date: props.moment,\n        theme: theme,\n        ref: ref,\n        minDate: props.minDate,\n        maxDate: props.maxDate\n      }, {\n        enableHistoryView: props.enableHistoryView\n      }));\n\n      var prevOnViewDateChange = navBarProps.onViewDateChange;\n      var onViewDateChange = this.onViewDateChange;\n\n      if (prevOnViewDateChange) {\n        onViewDateChange = function onViewDateChange() {\n          prevOnViewDateChange.apply(undefined, arguments);\n          _this4.onNavViewDateChange.apply(_this4, arguments);\n        };\n      }\n\n      navBarProps.onViewDateChange = onViewDateChange;\n\n      var prevOnMouseDown = navBarProps.onMouseDown;\n      var onMouseDown = this.onNavMouseDown;\n\n      if (prevOnMouseDown) {\n        onMouseDown = function onMouseDown() {\n          prevOnMouseDown.apply(undefined, arguments);\n          _this4.onNavMouseDown.apply(_this4, arguments);\n        };\n      }\n\n      navBarProps.onMouseDown = onMouseDown;\n\n      if (navBarProps) {\n        return this.renderNavBarComponent(navBarProps);\n      }\n\n      return null;\n    }\n  }, {\n    key: 'onNavMouseDown',\n    value: function onNavMouseDown(event) {\n      if (this.props.focusOnNavMouseDown && !this.isFocused()) {\n        this.focus();\n      }\n    }\n  }, {\n    key: 'renderNavBarComponent',\n    value: function renderNavBarComponent(navBarProps) {\n      if (this.props.renderNavBar) {\n        return this.props.renderNavBar(navBarProps);\n      }\n\n      return _react2.default.createElement(_NavBar2.default, navBarProps);\n    }\n  }, {\n    key: 'isFocused',\n    value: function isFocused() {\n      return this.state.focused;\n    }\n  }, {\n    key: 'onFocus',\n    value: function onFocus(event) {\n      this.setState({\n        focused: true\n      });\n\n      this.props.onFocus(event);\n    }\n  }, {\n    key: 'onBlur',\n    value: function onBlur(event) {\n      this.setState({\n        focused: false\n      });\n\n      this.hideHistoryView();\n\n      this.props.onBlur(event);\n    }\n  }, {\n    key: 'showHistoryView',\n    value: function showHistoryView() {\n      if (this.navBar) {\n        this.navBar.showHistoryView();\n      }\n    }\n  }, {\n    key: 'hideHistoryView',\n    value: function hideHistoryView() {\n      if (this.navBar) {\n        this.navBar.hideHistoryView();\n      }\n    }\n  }, {\n    key: 'isHistoryViewVisible',\n    value: function isHistoryViewVisible() {\n      if (this.navBar) {\n        return this.navBar.isHistoryViewVisible();\n      }\n\n      return false;\n    }\n  }, {\n    key: 'tryNavBarKeyDown',\n    value: function tryNavBarKeyDown(event) {\n      if (this.navBar && this.navBar.getHistoryView) {\n        var historyView = this.navBar.getHistoryView();\n\n        if (historyView && historyView.onKeyDown) {\n          historyView.onKeyDown(event);\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: 'onViewKeyDown',\n    value: function onViewKeyDown(event) {\n      if (this.tryNavBarKeyDown(event)) {\n        return;\n      }\n\n      return _onKeyDown2.default.call(this, event);\n    }\n  }, {\n    key: 'confirm',\n    value: function confirm(date, event) {\n      event.preventDefault();\n\n      if (this.props.confirm) {\n        return this.props.confirm(date, event);\n      }\n\n      var dateMoment = this.toMoment(date);\n\n      this.select({ dateMoment: dateMoment, timestamp: +dateMoment }, event);\n\n      return undefined;\n    }\n  }, {\n    key: 'navigate',\n    value: function navigate(dir, event) {\n      var _this5 = this;\n\n      var props = this.p;\n\n      var getNavigationDate = function getNavigationDate(dir, date, dateFormat) {\n        var mom = _moment2.default.isMoment(date) ? date : _this5.toMoment(date, dateFormat);\n\n        return typeof dir == 'function' ? dir(mom) : mom.add(dir, 'day');\n      };\n\n      if (props.navigate) {\n        return props.navigate(dir, event, getNavigationDate);\n      }\n\n      event.preventDefault();\n\n      if (props.activeDate) {\n        var nextMoment = getNavigationDate(dir, props.activeDate);\n\n        this.gotoViewDate({ dateMoment: nextMoment });\n      }\n\n      return undefined;\n    }\n  }, {\n    key: 'handleDayMouseEnter',\n    value: function handleDayMouseEnter(dayProps) {\n      var props = this.p;\n\n      var rangeStart = props.rangeStart;\n      var range = props.range;\n\n\n      var partial = !!(rangeStart && range.length < 2);\n\n      if (partial) {\n        this.setHoverRange((0, _clampRange2.default)([rangeStart, dayProps.dateMoment]));\n      }\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick(_ref3, event) {\n      var timestamp = _ref3.timestamp;\n      var dateMoment = _ref3.dateMoment;\n\n      var props = this.p;\n\n      if (props.minDate && timestamp < props.minDate) {\n        return;\n      }\n\n      if (props.maxDate && timestamp > props.maxDate) {\n        return;\n      }\n\n      event.target.value = timestamp;\n\n      this.select({ dateMoment: dateMoment, timestamp: timestamp }, event);\n    }\n  }, {\n    key: 'select',\n    value: function select(_ref4, event) {\n      var dateMoment = _ref4.dateMoment;\n      var timestamp = _ref4.timestamp;\n\n      if (dateMoment && timestamp === undefined) {\n        timestamp = +dateMoment;\n      }\n\n      if (this.props.select) {\n        return this.props.select({ dateMoment: dateMoment, timestamp: timestamp }, event);\n      }\n\n      if (!timestamp) {\n        timestamp = +dateMoment;\n      }\n\n      this.gotoViewDate({ dateMoment: dateMoment, timestamp: timestamp });\n\n      var props = this.p;\n      var range = props.range;\n\n      if (range) {\n        this.selectRange({ dateMoment: dateMoment, timestamp: timestamp }, event);\n      } else {\n        this.onChange({ dateMoment: dateMoment, timestamp: timestamp }, event);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: 'selectRange',\n    value: function selectRange(_ref5, event) {\n      var dateMoment = _ref5.dateMoment;\n      var timestamp = _ref5.timestamp;\n\n      var props = this.p;\n      var range = props.range;\n      var rangeStart = props.rangeStart;\n\n      if (dateMoment == null) {\n        this.setState({\n          rangeStart: null\n        });\n        this.onRangeChange([], event);\n        return;\n      }\n\n      if (!rangeStart) {\n        this.setState({\n          rangeStart: dateMoment\n        });\n\n        if (range.length == 2) {\n          this.onRangeChange([], event);\n        }\n      } else {\n        this.setState({\n          rangeStart: null\n        });\n\n        this.onRangeChange((0, _clampRange2.default)([rangeStart, dateMoment]), event);\n      }\n    }\n  }, {\n    key: 'format',\n    value: function format(mom) {\n      return mom == null ? '' : mom.format(this.props.dateFormat);\n    }\n  }, {\n    key: 'setHoverRange',\n    value: function setHoverRange(hoverRange) {\n      if (this.props.hoverRange === undefined) {\n        this.setState({\n          hoverRange: hoverRange\n        });\n      }\n\n      if (this.props.onHoverRangeChange) {\n        this.props.onHoverRangeChange(hoverRange);\n      }\n    }\n  }, {\n    key: 'onRangeChange',\n    value: function onRangeChange(range, event) {\n      var _this6 = this;\n\n      this.setState({\n        range: this.props.range === undefined ? range : null\n      });\n\n      this.setHoverRange(null);\n\n      if (this.props.onRangeChange) {\n        var newRange = range.map(function (m) {\n          var dateMoment = _this6.toMoment(m);\n\n          return {\n            dateString: dateMoment.format(_this6.props.dateFormat),\n            dateMoment: dateMoment,\n            timestamp: +dateMoment\n          };\n        });\n\n        var formatted = newRange.map(function (o) {\n          return o.dateString;\n        });\n\n        this.props.onRangeChange(formatted, newRange, event);\n      }\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(_ref6, event) {\n      var dateMoment = _ref6.dateMoment;\n      var timestamp = _ref6.timestamp;\n\n      if (this.props.date === undefined) {\n        this.setState({\n          date: timestamp\n        });\n      }\n\n      if (this.props.onChange) {\n        var dateString = this.format(dateMoment);\n        this.props.onChange(dateString, { dateMoment: dateMoment, timestamp: timestamp, dateString: dateString }, event);\n      }\n    }\n  }, {\n    key: 'onNavViewDateChange',\n    value: function onNavViewDateChange(dateString, _ref7) {\n      var dateMoment = _ref7.dateMoment;\n      var timestamp = _ref7.timestamp;\n\n      this.onViewDateChange({ dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'onViewDateChange',\n    value: function onViewDateChange(_ref8) {\n      var dateMoment = _ref8.dateMoment;\n      var timestamp = _ref8.timestamp;\n\n      var minDate = void 0;\n      var maxDate = void 0;\n\n      if (this.p.minDateMoment) {\n        minDate = +this.toMoment(this.p.minDateMoment).startOf('month');\n      }\n      if (this.p.maxDateMoment) {\n        maxDate = +this.toMoment(this.p.maxDateMoment).endOf('month');\n      }\n      if (this.props.constrainViewDate && !isDateInMinMax(timestamp, {\n        minDate: minDate,\n        maxDate: maxDate\n      })) {\n        return;\n      }\n\n      if (this.props.viewDate === undefined && this.props.navOnDateClick) {\n        this.setState({\n          viewDate: timestamp\n        });\n      }\n\n      if (this.props.onViewDateChange) {\n        var dateString = this.format(dateMoment);\n\n        this.props.onViewDateChange(dateString, { dateMoment: dateMoment, dateString: dateString, timestamp: timestamp });\n      }\n    }\n  }, {\n    key: 'isValidActiveDate',\n    value: function isValidActiveDate(date, props) {\n      return _isValidActiveDate(date, props || this.p);\n    }\n  }, {\n    key: 'onActiveDateChange',\n    value: function onActiveDateChange(_ref9) {\n      var dateMoment = _ref9.dateMoment;\n      var timestamp = _ref9.timestamp;\n\n      if (!_isValidActiveDate(timestamp, this.p)) {\n        return;\n      }\n\n      var props = this.p;\n      var range = props.range;\n\n      if (range && props.rangeStart) {\n        var newRange = (0, _clampRange2.default)([props.rangeStart, dateMoment]);\n\n        if (props.partialRange) {\n          this.onRangeChange(newRange);\n        }\n\n        this.setState({\n          rangeStart: props.rangeStart,\n          range: newRange\n        });\n      }\n\n      if (this.props.activeDate === undefined) {\n        this.setState({\n          activeDate: timestamp\n        });\n      }\n\n      if (this.props.onActiveDateChange) {\n        var dateString = this.format(dateMoment);\n        this.props.onActiveDateChange(dateString, { dateMoment: dateMoment, timestamp: timestamp, dateString: dateString });\n      }\n    }\n  }, {\n    key: 'gotoViewDate',\n    value: function gotoViewDate(_ref10) {\n      var dateMoment = _ref10.dateMoment;\n      var timestamp = _ref10.timestamp;\n\n      if (!timestamp) {\n        timestamp = dateMoment == null ? null : +dateMoment;\n      }\n\n      this.onViewDateChange({ dateMoment: dateMoment, timestamp: timestamp });\n      this.onActiveDateChange({ dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }]);\n\n  return MonthView;\n}(_reactClass2.default);\n\nexports.default = MonthView;\n\n\nMonthView.defaultProps = {\n  defaultClassName: 'react-date-picker__month-view',\n  dateFormat: 'YYYY-MM-DD',\n\n  theme: 'default',\n\n  onBlur: function onBlur() {},\n  onFocus: function onFocus() {},\n\n  footerClearDate: null,\n\n  partialRange: true,\n\n  activateOnHover: false,\n  constrainActiveInView: false,\n\n  showDaysBeforeMonth: true,\n  showDaysAfterMonth: true,\n\n  highlightWeekends: true,\n  highlightToday: true,\n\n  navOnDateClick: true,\n  navigation: true,\n\n  constrainViewDate: true,\n  highlightRangeOnMouseMove: false,\n\n  isDatePicker: true,\n\n  enableHistoryView: true,\n  focusOnNavMouseDown: true,\n  focusOnFooterMouseDown: true\n};\n\nMonthView.propTypes = {\n  navOnDateClick: _react.PropTypes.bool,\n  isDisabledDay: _react.PropTypes.func,\n\n  onChange: _react.PropTypes.func,\n  onViewDateChange: _react.PropTypes.func,\n  onActiveDateChange: _react.PropTypes.func\n};\n\nexports.NAV_KEYS = _navKeys2.default;\nexports.renderFooter = _renderFooter;","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/clampRange.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (range) {\n  if (range[1] && range[0].isAfter(range[1])) {\n    range = [range[1], range[0]];\n  }\n\n  return range;\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/toMoment.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This function will be used to convert a date to a moment.\n *\n * It accepts input as sring, date or moment\n *\n * @param  {String/Date/Moment} value\n *\n * @param  {String} [dateFormat] if value is string, it will be parsed to a moment\n * using this format.\n * You can skip this argument and only specify the config instead,\n * where you can have a dateFormat property\n *\n * @param  {Object} [config]\n * @param  {String} [config.dateFormat] a dateFormat string\n * @param  {String} [config.locale] a locale\n * @param  {Boolean} [config.strict] whether to perform strict parsing on strings\n *\n * @return {Moment}\n */\n\nexports.default = function (value, dateFormat, config) {\n  if ((typeof dateFormat === 'undefined' ? 'undefined' : _typeof(dateFormat)) === 'object') {\n    config = dateFormat;\n    dateFormat = null;\n  }\n\n  var strict = !!(config && config.strict);\n  var locale = config && config.locale;\n\n  dateFormat = dateFormat || config && config.dateFormat || 'YYYY-MM-DD';\n\n  if (typeof value == 'string') {\n    return (0, _moment2.default)(value, dateFormat, locale, strict);\n  }\n\n  value = value == null ? new Date() : value;\n\n  return (0, _moment2.default)(value, undefined, locale, strict);\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/join.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length == 1 && Array.isArray(args[0])) {\n    args = args[0];\n  }\n\n  return args.filter(function (x) {\n    return !!x;\n  }).join(' ');\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/utils/isInRange.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.default = function (moment, configOrRange) {\n\n  var range = configOrRange;\n  var inclusive = true;\n\n  if (!Array.isArray(configOrRange) && (typeof configOrRange === 'undefined' ? 'undefined' : _typeof(configOrRange)) == 'object') {\n    range = configOrRange.range;\n\n    if (configOrRange.inclusive !== undefined) {\n      inclusive = !!configOrRange.inclusive;\n    }\n  }\n\n  var start = range[0];\n  var end = range.length >= 2 && range[range.length - 1];\n\n  if (!moment) {\n    return false;\n  }\n\n  if (start && end) {\n    var insideRange = start.isBefore(moment) && end.isAfter(moment);\n\n    return inclusive ? insideRange || start.isSame(moment) || end.isSame(moment) : insideRange;\n  }\n\n  return false;\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/NavBar.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _reactFlex = require('react-flex');\n\nvar _reactInlineBlock = require('react-inline-block');\n\nvar _reactInlineBlock2 = _interopRequireDefault(_reactInlineBlock);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _assignDefined = require('./assignDefined');\n\nvar _assignDefined2 = _interopRequireDefault(_assignDefined);\n\nvar _toMoment2 = require('./toMoment');\n\nvar _toMoment3 = _interopRequireDefault(_toMoment2);\n\nvar _join = require('./join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _bemFactory = require('./bemFactory');\n\nvar _bemFactory2 = _interopRequireDefault(_bemFactory);\n\nvar _HistoryView = require('./HistoryView');\n\nvar _HistoryView2 = _interopRequireDefault(_HistoryView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ARROWS = {\n  prev: _react2.default.createElement(\n    'svg',\n    { height: '24', viewBox: '0 0 24 24', width: '24' },\n    _react2.default.createElement('path', { d: 'M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z' }),\n    _react2.default.createElement('path', { d: 'M0 0h24v24H0z', fill: 'none' })\n  ),\n\n  next: _react2.default.createElement(\n    'svg',\n    { height: '24', viewBox: '0 0 24 24', width: '24' },\n    _react2.default.createElement('path', { d: 'M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z' }),\n    _react2.default.createElement('path', { d: 'M0 0h24v24H0z', fill: 'none' })\n  )\n};\n\nvar bem = (0, _bemFactory2.default)('react-date-picker__nav-bar');\n\nvar NavBar = function (_Component) {\n  _inherits(NavBar, _Component);\n\n  function NavBar(props) {\n    _classCallCheck(this, NavBar);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(NavBar).call(this, props));\n\n    _this.state = {\n      viewDate: props.defaultViewDate\n    };\n    return _this;\n  }\n\n  _createClass(NavBar, [{\n    key: 'prepareViewDate',\n    value: function prepareViewDate(props) {\n      return props.viewDate === undefined ? this.state.viewDate : props.viewDate;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.p = (0, _objectAssign2.default)({}, this.props);\n\n      var viewMoment = props.viewMoment = props.viewMoment || this.toMoment(this.prepareViewDate(props));\n\n      props.historyViewEnabled = props.expandedHistoryView || props.enableHistoryView;\n\n      var secondary = props.secondary;\n\n      var className = (0, _join2.default)(props.className, bem(), bem(null, 'theme-' + props.theme), props.historyViewEnabled && bem(null, 'with-history-view'));\n\n      var historyView = props.historyViewEnabled ? this.renderHistoryView() : null;\n\n      var flexProps = (0, _objectAssign2.default)({}, props);\n\n      delete flexProps.arrows;\n      delete flexProps.date;\n      delete flexProps.enableHistoryView;\n      delete flexProps.historyViewEnabled;\n      delete flexProps.isDatePickerNavBar;\n      delete flexProps.minDate;\n      delete flexProps.maxDate;\n      delete flexProps.mainNavBar;\n      delete flexProps.multiView;\n      delete flexProps.navDateFormat;\n      delete flexProps.onNavClick;\n      delete flexProps.onUpdate;\n      delete flexProps.onViewDateChange;\n      delete flexProps.renderNavNext;\n      delete flexProps.renderNavPrev;\n      delete flexProps.secondary;\n      delete flexProps.theme;\n      delete flexProps.viewDate;\n      delete flexProps.viewMoment;\n\n      if (typeof props.cleanup == 'function') {\n        props.cleanup(flexProps);\n      }\n\n      return _react2.default.createElement(\n        _reactFlex.Flex,\n        _extends({ inline: true, row: true }, flexProps, { className: className }),\n        secondary && this.renderNav(-2, viewMoment),\n        this.renderNav(-1, viewMoment),\n        _react2.default.createElement(\n          _reactFlex.Item,\n          {\n            className: bem('date'),\n            style: { textAlign: 'center' },\n            onMouseDown: props.historyViewEnabled ? this.toggleHistoryView : null\n          },\n          this.renderNavDate(viewMoment)\n        ),\n        this.renderNav(1, viewMoment),\n        secondary && this.renderNav(2, viewMoment),\n        historyView\n      );\n    }\n  }, {\n    key: 'renderHistoryView',\n    value: function renderHistoryView() {\n      var _this2 = this;\n\n      if (!this.state.historyView) {\n        return null;\n      }\n\n      var className = bem('history-view');\n      var _p = this.p;\n      var viewMoment = _p.viewMoment;\n      var theme = _p.theme;\n      var minDate = _p.minDate;\n      var maxDate = _p.maxDate;\n\n\n      var historyViewProps = (0, _assignDefined2.default)({\n        defaultViewDate: viewMoment,\n        defaultDate: viewMoment,\n\n        ref: function ref(view) {\n          _this2.historyView = view;\n        },\n        focusDecadeView: false,\n\n        className: className,\n        theme: theme,\n\n        onOkClick: this.onHistoryViewOk,\n        onCancelClick: this.onHistoryViewCancel\n      }, {\n        minDate: minDate,\n        maxDate: maxDate\n      });\n\n      if (this.props.renderHistoryView) {\n        return this.props.renderHistoryView(historyViewProps);\n      }\n\n      return _react2.default.createElement(_HistoryView2.default, historyViewProps);\n    }\n  }, {\n    key: 'toggleHistoryView',\n    value: function toggleHistoryView(event) {\n      if (this.isHistoryViewVisible()) {\n        this.hideHistoryView(event);\n      } else {\n        this.showHistoryView(event);\n      }\n    }\n  }, {\n    key: 'getHistoryView',\n    value: function getHistoryView() {\n      return this.historyView;\n    }\n  }, {\n    key: 'isHistoryViewVisible',\n    value: function isHistoryViewVisible() {\n      return !!this.historyView;\n    }\n  }, {\n    key: 'onHistoryViewOk',\n    value: function onHistoryViewOk(dateString, _ref) {\n      var dateMoment = _ref.dateMoment;\n      var timestamp = _ref.timestamp;\n\n      this.hideHistoryView();\n      this.onViewDateChange({ dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'onHistoryViewCancel',\n    value: function onHistoryViewCancel() {\n      this.hideHistoryView();\n    }\n  }, {\n    key: 'showHistoryView',\n    value: function showHistoryView(event) {\n      event.preventDefault();\n\n      this.setState({\n        historyView: true\n      });\n\n      if (this.props.onShowHistoryView) {\n        this.props.onShowHistoryView();\n      }\n    }\n  }, {\n    key: 'hideHistoryView',\n    value: function hideHistoryView(event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n\n      this.setState({\n        historyView: false\n      });\n\n      if (this.props.onHideHistoryView) {\n        this.props.onHideHistoryView();\n      }\n    }\n  }, {\n    key: 'toMoment',\n    value: function toMoment(value, props) {\n      props = props || this.props;\n\n      return (0, _toMoment3.default)(value, {\n        locale: props.locale,\n        dateFormat: props.dateFormat\n      });\n    }\n  }, {\n    key: 'renderNav',\n    value: function renderNav(dir, viewMoment) {\n      var props = this.p;\n\n      var name = dir < 0 ? 'prev' : 'next';\n      var disabled = dir < 0 ? props.prevDisabled : props.nextDisabled;\n      var secondary = Math.abs(dir) == 2;\n\n      if (dir < 0 && props.minDate) {\n        var gotoMoment = this.getGotoMoment(dir, viewMoment).endOf('month');\n\n        if (gotoMoment.isBefore(this.toMoment(props.minDate))) {\n          disabled = true;\n        }\n      }\n\n      if (dir > 0 && props.maxDate) {\n        var _gotoMoment = this.getGotoMoment(dir, viewMoment).startOf('month');\n\n        if (_gotoMoment.isAfter(this.toMoment(props.maxDate))) {\n          disabled = true;\n        }\n      }\n\n      if (this.state.historyView) {\n        disabled = true;\n      }\n\n      var className = [bem('arrow'), bem('arrow--' + name), secondary && bem('secondary-arrow'), disabled && bem('arrow--disabled')];\n\n      var arrow = props.arrows[dir] || props.arrows[name] || ARROWS[name];\n\n      var children = void 0;\n\n      if (secondary) {\n        var dirArrow = props.arrows[dir];\n\n        if (dirArrow) {\n          children = dirArrow;\n        } else {\n          var secondArrow = _react2.default.createElement(\n            _reactInlineBlock2.default,\n            { style: _defineProperty({ position: 'absolute' }, dir < 0 ? 'left' : 'left', 7) },\n            arrow\n          );\n          children = dir < 0 ? [secondArrow, arrow] : [secondArrow, arrow];\n        }\n      } else {\n        children = arrow;\n      }\n\n      var navProps = {\n        dir: dir,\n        name: name,\n        disabled: disabled,\n        className: (0, _join2.default)(className),\n        onClick: !disabled && this.onNavClick.bind(this, dir, viewMoment),\n        children: children\n      };\n\n      if (props.renderNav) {\n        return props.renderNav(navProps);\n      }\n\n      if (dir < 0 && props.renderNavPrev) {\n        return props.renderNavPrev(navProps);\n      }\n\n      if (dir > 0 && props.renderNavNext) {\n        return props.renderNavNext(navProps);\n      }\n\n      return _react2.default.createElement(_reactInlineBlock2.default, _extends({}, navProps, {\n        disabled: null,\n        name: null\n      }));\n    }\n  }, {\n    key: 'getGotoMoment',\n    value: function getGotoMoment(dir, viewMoment) {\n      viewMoment = viewMoment || this.p.viewMoment;\n\n      var sign = dir < 0 ? -1 : 1;\n      var abs = Math.abs(dir);\n\n      var mom = this.toMoment(viewMoment);\n\n      mom.add(sign, abs == 1 ? 'month' : 'year');\n\n      return mom;\n    }\n  }, {\n    key: 'onNavClick',\n    value: function onNavClick(dir, viewMoment, event) {\n      var props = this.props;\n\n      var dateMoment = this.toMoment(viewMoment);\n\n      if (props.onUpdate) {\n        dateMoment = props.onUpdate(dateMoment, dir);\n      } else {\n        var sign = dir < 0 ? -1 : 1;\n        var abs = Math.abs(dir);\n\n        dateMoment.add(sign, abs == 1 ? 'month' : 'year');\n      }\n\n      var timestamp = +dateMoment;\n\n      props.onNavClick(dir, viewMoment, event);\n\n      var disabled = dir < 0 ? props.prevDisabled : props.nextDisabled;\n\n      if (disabled) {\n        return;\n      }\n\n      this.onViewDateChange({\n        dateMoment: dateMoment,\n        timestamp: timestamp\n      });\n    }\n  }, {\n    key: 'renderNavDate',\n    value: function renderNavDate(viewMoment) {\n      var props = this.props;\n      var text = viewMoment.format(props.navDateFormat);\n\n      if (props.renderNavDate) {\n        return props.renderNavDate(viewMoment, text);\n      }\n\n      return text;\n    }\n  }, {\n    key: 'onViewDateChange',\n    value: function onViewDateChange(_ref3) {\n      var dateMoment = _ref3.dateMoment;\n      var timestamp = _ref3.timestamp;\n\n      if (this.props.viewDate === undefined) {\n        this.setState({\n          viewDate: timestamp\n        });\n      }\n\n      if (this.props.onViewDateChange) {\n        var dateString = dateMoment.format(this.props.dateFormat);\n        this.props.onViewDateChange(dateString, { dateString: dateString, dateMoment: dateMoment, timestamp: timestamp });\n      }\n    }\n  }]);\n\n  return NavBar;\n}(_reactClass2.default);\n\nexports.default = NavBar;\n\n\nNavBar.defaultProps = {\n  arrows: {},\n\n  theme: 'default',\n\n  isDatePickerNavBar: true,\n\n  navDateFormat: 'MMM YYYY',\n  enableHistoryView: true,\n  onNavClick: function onNavClick(dir, viewMoment) {},\n\n  onViewDateChange: function onViewDateChange() {}\n};\n\nNavBar.propTypes = {\n  secondary: _react.PropTypes.bool,\n\n  renderNav: _react.PropTypes.func,\n  renderNavPrev: _react.PropTypes.func,\n  renderNavNext: _react.PropTypes.func,\n\n  arrows: _react.PropTypes.object,\n  navDateFormat: _react.PropTypes.string,\n\n  onUpdate: _react.PropTypes.func,\n  onNavClick: _react.PropTypes.func,\n  onViewDateChange: _react.PropTypes.func\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/assignDefined.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar filter = function filter(object) {\n  return Object.keys(object).reduce(function (acc, prop) {\n    var value = object[prop];\n\n    if (value !== undefined) {\n      acc[prop] = value;\n    }\n\n    return acc;\n  }, {});\n};\n\nexports.default = function (target) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return _objectAssign2.default.apply(undefined, [target].concat(_toConsumableArray(args.map(filter))));\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/bemFactory.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (className) {\n\n  return function (element, modifier) {\n    var el = element ? '-' + element : '';\n    var mod = modifier ? '--' + modifier : '';\n\n    return '' + className + el + mod;\n  };\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/HistoryView.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _reactFlex = require('react-flex');\n\nvar _toMoment2 = require('./toMoment');\n\nvar _toMoment3 = _interopRequireDefault(_toMoment2);\n\nvar _join = require('./join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _joinFunctions = require('./joinFunctions');\n\nvar _joinFunctions2 = _interopRequireDefault(_joinFunctions);\n\nvar _bemFactory = require('./bemFactory');\n\nvar _bemFactory2 = _interopRequireDefault(_bemFactory);\n\nvar _Footer = require('./Footer');\n\nvar _Footer2 = _interopRequireDefault(_Footer);\n\nvar _YearView = require('./YearView');\n\nvar _YearView2 = _interopRequireDefault(_YearView);\n\nvar _assignDefined = require('./assignDefined');\n\nvar _assignDefined2 = _interopRequireDefault(_assignDefined);\n\nvar _DecadeView = require('./DecadeView');\n\nvar _DecadeView2 = _interopRequireDefault(_DecadeView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar bem = (0, _bemFactory2.default)('react-date-picker__history-view');\n\nvar preventDefault = function preventDefault(e) {\n  e.preventDefault();\n};\n\nvar HistoryView = function (_Component) {\n  _inherits(HistoryView, _Component);\n\n  function HistoryView(props) {\n    _classCallCheck(this, HistoryView);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(HistoryView).call(this, props));\n\n    _this.state = (0, _DecadeView.getInitialState)(props);\n    return _this;\n  }\n\n  _createClass(HistoryView, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n    }\n  }, {\n    key: 'toMoment',\n    value: function toMoment(date, format) {\n      return (0, _toMoment3.default)(date, format, this.props);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var dateProps = (0, _DecadeView.prepareDateProps)(this.props, this.state);\n\n      var props = this.p = (0, _objectAssign2.default)({}, this.props, dateProps);\n\n      props.children = _react2.default.Children.toArray(props.children);\n\n      var className = (0, _join2.default)(props.className, bem(), props.theme && bem(null, 'theme-' + props.theme));\n\n      var commonProps = (0, _assignDefined2.default)({}, {\n        locale: props.locale,\n        theme: props.theme,\n        minDate: props.minDate,\n        maxDate: props.maxDate,\n\n        viewDate: props.viewMoment,\n        activeDate: props.activeDate,\n        date: props.date,\n\n        dateFormat: props.dateFormat\n      });\n\n      var yearViewProps = (0, _objectAssign2.default)({}, commonProps);\n\n      var decadeViewProps = (0, _objectAssign2.default)({}, commonProps, {\n        ref: function ref(view) {\n          _this2.decadeView = view;\n        }\n      });\n\n      var flexProps = (0, _objectAssign2.default)({}, this.props);\n\n      delete flexProps.activeDate;\n      delete flexProps.adjustDateStartOf;\n      delete flexProps.adjustMaxDateStartOf;\n      delete flexProps.adjustMinDateStartOf;\n\n      delete flexProps.cleanup;\n\n      delete flexProps.date;\n      delete flexProps.dateFormat;\n      delete flexProps.defaultDate;\n      delete flexProps.defaultViewDate;\n\n      delete flexProps.focusDecadeView;\n      delete flexProps.focusYearView;\n      delete flexProps.footer;\n\n      delete flexProps.locale;\n\n      delete flexProps.maxDate;\n      delete flexProps.minDate;\n\n      delete flexProps.onOkClick;\n      delete flexProps.onCancelClick;\n      delete flexProps.okOnEnter;\n\n      delete flexProps.navigation;\n\n      delete flexProps.theme;\n\n      delete flexProps.viewMoment;\n\n      if (typeof props.cleanup == 'function') {\n        props.cleanup(flexProps);\n      }\n\n      return _react2.default.createElement(\n        _reactFlex.Flex,\n        _extends({\n          inline: true,\n          column: true,\n          alignItems: 'stretch'\n        }, flexProps, {\n          className: className\n        }),\n        this.renderYearView(yearViewProps),\n        this.renderDecadeView(decadeViewProps),\n        this.renderFooter()\n      );\n    }\n  }, {\n    key: 'renderFooter',\n    value: function renderFooter() {\n      var props = this.p;\n      var children = props.children;\n\n      if (!props.footer) {\n        return null;\n      }\n\n      var footerChild = children.filter(function (c) {\n        return c && c.props && c.props.isDatePickerFooter;\n      })[0];\n\n      if (footerChild) {\n        var newFooterProps = {\n          onOkClick: (0, _joinFunctions2.default)(this.onOkClick, footerChild.props.onOkClick),\n          onCancelClick: (0, _joinFunctions2.default)(this.onCancelClick, footerChild.props.onCancelClick)\n        };\n\n        if (footerChild.props.centerButtons === undefined) {\n          newFooterProps.centerButtons = true;\n        }\n        if (footerChild.props.todayButton === undefined) {\n          newFooterProps.todayButton = false;\n        }\n        if (footerChild.props.clearButton === undefined) {\n          newFooterProps.clearButton = false;\n        }\n\n        return _react2.default.cloneElement(footerChild, newFooterProps);\n      }\n\n      return _react2.default.createElement(_Footer2.default, {\n        todayButton: false,\n        clearButton: false,\n        onOkClick: this.onOkClick,\n        onCancelClick: this.onCancelClick,\n        centerButtons: true\n      });\n    }\n  }, {\n    key: 'onOkClick',\n    value: function onOkClick() {\n      if (this.props.onOkClick) {\n        var dateMoment = this.p.activeMoment;\n        var dateString = this.format(dateMoment);\n        var timestamp = +dateMoment;\n\n        this.props.onOkClick(dateString, { dateMoment: dateMoment, timestamp: timestamp });\n      }\n    }\n  }, {\n    key: 'onCancelClick',\n    value: function onCancelClick() {\n      if (this.props.onCancelClick) {\n        this.props.onCancelClick();\n      }\n    }\n  }, {\n    key: 'renderYearView',\n    value: function renderYearView(yearViewProps) {\n      var props = this.p;\n      var children = props.children;\n\n      var yearViewChild = children.filter(function (c) {\n        return c && c.props && c.props.isYearView;\n      })[0];\n      var yearViewChildProps = yearViewChild ? yearViewChild.props : {};\n\n      var tabIndex = yearViewChildProps.tabIndex == null ? null : yearViewChildProps.tabIndex;\n\n      yearViewProps.tabIndex = tabIndex;\n\n      if (props.focusYearView === false || tabIndex == null) {\n        yearViewProps.tabIndex = null;\n        yearViewProps.onFocus = this.onYearViewFocus;\n        yearViewProps.onMouseDown = this.onYearViewMouseDown;\n      }\n\n      (0, _objectAssign2.default)(yearViewProps, {\n        // viewDate: props.moment || props.viewDate,\n        onViewDateChange: (0, _joinFunctions2.default)(this.onViewDateChange, yearViewChildProps.onViewDateChange),\n        onActiveDateChange: (0, _joinFunctions2.default)(this.onActiveDateChange, yearViewChildProps.onActiveDateChange),\n        onChange: (0, _joinFunctions2.default)(this.handleYearViewOnChange, yearViewChildProps.onChange)\n      });\n\n      if (yearViewChild) {\n        return _react2.default.cloneElement(yearViewChild, yearViewProps);\n      }\n\n      return _react2.default.createElement(_YearView2.default, yearViewProps);\n    }\n  }, {\n    key: 'renderDecadeView',\n    value: function renderDecadeView(decadeViewProps) {\n      var props = this.p;\n      var children = props.children;\n      var decadeViewChild = children.filter(function (c) {\n        return c && c.props && c.props.isDecadeView;\n      })[0];\n\n      var decadeViewChildProps = decadeViewChild ? decadeViewChild.props : {};\n\n      var tabIndex = decadeViewChildProps.tabIndex == null ? null : decadeViewChildProps.tabIndex;\n\n      decadeViewProps.tabIndex = tabIndex;\n\n      if (props.focusDecadeView === false || tabIndex == null) {\n        decadeViewProps.tabIndex = null;\n        decadeViewProps.onMouseDown = this.onDecadeViewMouseDown;\n      }\n\n      (0, _objectAssign2.default)(decadeViewProps, {\n        onConfirm: (0, _joinFunctions2.default)(this.handleDecadeViewOnConfirm, decadeViewChildProps.onConfirm),\n        onViewDateChange: (0, _joinFunctions2.default)(this.handleDecadeOnViewDateChange, decadeViewChildProps.onViewDateChange),\n        onActiveDateChange: (0, _joinFunctions2.default)(this.handleDecadeOnActiveDateChange, decadeViewChildProps.onActiveDateChange),\n        onChange: (0, _joinFunctions2.default)(this.handleDecadeOnChange, decadeViewChildProps.onChange)\n      });\n\n      if (decadeViewChild) {\n        return _react2.default.cloneElement(decadeViewChild, decadeViewProps);\n      }\n\n      return _react2.default.createElement(_DecadeView2.default, decadeViewProps);\n    }\n  }, {\n    key: 'onYearViewFocus',\n    value: function onYearViewFocus() {\n      if (this.props.focusYearView === false) {\n        this.focus();\n      }\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      if (this.decadeView && this.props.focusDecadeView) {\n        this.decadeView.focus();\n      }\n    }\n  }, {\n    key: 'onYearViewMouseDown',\n    value: function onYearViewMouseDown(e) {\n      preventDefault(e);\n\n      this.focus();\n    }\n  }, {\n    key: 'onDecadeViewMouseDown',\n    value: function onDecadeViewMouseDown(e) {\n      preventDefault(e);\n    }\n  }, {\n    key: 'format',\n    value: function format(mom, _format) {\n      _format = _format || this.props.dateFormat;\n\n      return mom.format(_format);\n    }\n  }, {\n    key: 'handleDecadeViewOnConfirm',\n    value: function handleDecadeViewOnConfirm() {\n      if (this.props.okOnEnter) {\n        this.onOkClick();\n      }\n    }\n  }, {\n    key: 'onKeyDown',\n    value: function onKeyDown(event) {\n      if (event.key == 'Escape') {\n        return this.onCancelClick();\n      }\n\n      if (this.decadeView) {\n        this.decadeView.onKeyDown(event);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: 'confirm',\n    value: function confirm(date, event) {\n      return _DecadeView.confirm.call(this, date, event);\n    }\n  }, {\n    key: 'navigate',\n    value: function navigate(direction, event) {\n      return _DecadeView.navigate.call(this, direction, event);\n    }\n  }, {\n    key: 'select',\n    value: function select(_ref, event) {\n      var dateMoment = _ref.dateMoment;\n      var timestamp = _ref.timestamp;\n\n      return _DecadeView.select.call(this, { dateMoment: dateMoment, timestamp: timestamp }, event);\n    }\n  }, {\n    key: 'handleDecadeOnViewDateChange',\n    value: function handleDecadeOnViewDateChange(dateString, _ref2) {\n      var dateMoment = _ref2.dateMoment;\n      var timestamp = _ref2.timestamp;\n\n      var props = this.p;\n      var currentViewMoment = props.viewMoment;\n\n      if (currentViewMoment) {\n        dateMoment.set('month', currentViewMoment.get('month'));\n        dateString = this.format(dateMoment);\n        timestamp = +dateMoment;\n      }\n\n      this.onViewDateChange(dateString, { dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'handleDecadeOnActiveDateChange',\n    value: function handleDecadeOnActiveDateChange(dateString, _ref3) {\n      var dateMoment = _ref3.dateMoment;\n      var timestamp = _ref3.timestamp;\n\n      var props = this.p;\n      var currentViewMoment = props.viewMoment;\n\n      if (currentViewMoment) {\n        dateMoment.set('month', currentViewMoment.get('month'));\n        dateString = this.format(dateMoment);\n        timestamp = +dateMoment;\n      }\n\n      this.onActiveDateChange(dateString, { dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'handleDecadeOnChange',\n    value: function handleDecadeOnChange(dateString, _ref4, event) {\n      var dateMoment = _ref4.dateMoment;\n      var timestamp = _ref4.timestamp;\n\n      var props = this.p;\n      var currentViewMoment = props.viewMoment;\n\n      if (currentViewMoment) {\n        dateMoment.set('month', currentViewMoment.get('month'));\n        dateString = this.format(dateMoment);\n        timestamp = +dateMoment;\n      }\n\n      this.onChange(dateString, { dateMoment: dateMoment, timestamp: timestamp }, event);\n    }\n  }, {\n    key: 'handleYearViewOnChange',\n    value: function handleYearViewOnChange(dateString, _ref5, event) {\n      var dateMoment = _ref5.dateMoment;\n      var timestamp = _ref5.timestamp;\n\n      var props = this.p;\n      var currentMoment = props.moment;\n\n      if (currentMoment) {\n        dateMoment.set('year', currentMoment.get('year'));\n        dateString = this.format(dateMoment);\n        timestamp = +dateMoment;\n      }\n\n      this.onChange(dateString, { dateMoment: dateMoment, timestamp: timestamp }, event);\n    }\n  }, {\n    key: 'onViewDateChange',\n    value: function onViewDateChange(dateString, _ref6) {\n      var dateMoment = _ref6.dateMoment;\n      var timestamp = _ref6.timestamp;\n\n      return _DecadeView.onViewDateChange.call(this, { dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'gotoViewDate',\n    value: function gotoViewDate(_ref7) {\n      var dateMoment = _ref7.dateMoment;\n      var timestamp = _ref7.timestamp;\n\n      return _DecadeView.gotoViewDate.call(this, { dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'onActiveDateChange',\n    value: function onActiveDateChange(dateString, _ref8) {\n      var dateMoment = _ref8.dateMoment;\n      var timestamp = _ref8.timestamp;\n\n      return _DecadeView.onActiveDateChange.call(this, { dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(dateString, _ref9, event) {\n      var dateMoment = _ref9.dateMoment;\n      var timestamp = _ref9.timestamp;\n\n      return _DecadeView.onChange.call(this, { dateMoment: dateMoment, timestamp: timestamp }, event);\n    }\n  }]);\n\n  return HistoryView;\n}(_reactClass2.default);\n\nexports.default = HistoryView;\n\n\nHistoryView.defaultProps = {\n  okOnEnter: true,\n\n  footer: true,\n  theme: 'default',\n  navigation: true,\n\n  focusYearView: false,\n  focusDecadeView: true,\n\n  dateFormat: 'YYYY-MM-DD',\n\n  adjustDateStartOf: 'month',\n  adjustMinDateStartOf: 'month',\n  adjustMaxDateStartOf: 'month'\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/joinFunctions.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (a, b) {\n  if (a && b) {\n    return function () {\n      a.apply(undefined, arguments);\n      b.apply(undefined, arguments);\n    };\n  }\n\n  return a || b;\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/Footer.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Button = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _reactFlex = require('react-flex');\n\nvar _reactInlineBlock = require('react-inline-block');\n\nvar _reactInlineBlock2 = _interopRequireDefault(_reactInlineBlock);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _joinFunctions = require('./joinFunctions');\n\nvar _joinFunctions2 = _interopRequireDefault(_joinFunctions);\n\nvar _join = require('./join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _bemFactory = require('./bemFactory');\n\nvar _bemFactory2 = _interopRequireDefault(_bemFactory);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar bem = (0, _bemFactory2.default)('react-date-picker__footer');\n\nvar SPACER = _react2.default.createElement(_reactFlex.Item, null);\n\nvar buttonClassName = 'react-date-picker__footer-button';\n\nvar preventDefault = function preventDefault(e) {\n  return e.preventDefault();\n};\n\nvar Button = exports.Button = function Button(props) {\n  var disabledClassName = props.disabled ? buttonClassName + '--disabled' : '';\n\n  var className = (props.className || '') + ' ' + buttonClassName + ' ' + disabledClassName;\n  return _react2.default.createElement('button', _extends({\n    tabIndex: -1\n  }, props, {\n    className: className\n  }));\n};\n\nvar Footer = function (_Component) {\n  _inherits(Footer, _Component);\n\n  function Footer() {\n    _classCallCheck(this, Footer);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Footer).apply(this, arguments));\n  }\n\n  _createClass(Footer, [{\n    key: 'render',\n    value: function render() {\n      var props = this.p = (0, _objectAssign2.default)({}, this.props);\n\n      var className = (0, _join2.default)(props.className, bem(), bem(null, 'theme-' + props.theme));\n\n      var todayButton = this.renderTodayButton();\n      var clearButton = this.renderClearButton();\n\n      var okButton = this.renderOkButton();\n      var cancelButton = this.renderCancelButton();\n\n      if (!todayButton && !clearButton && !okButton && !cancelButton) {\n        return null;\n      }\n\n      var middleSpacer = okButton || cancelButton ? SPACER : null;\n\n      var spacer = !props.centerButtons ? middleSpacer : null;\n\n      var children = [props.centerButtons && SPACER, todayButton, clearButton, spacer, okButton, cancelButton, props.centerButtons && SPACER];\n\n      if (props.renderChildren) {\n        children = props.renderChildren(children, props);\n      }\n\n      var flexProps = (0, _objectAssign2.default)({}, props);\n\n      delete flexProps.actionEvent;\n      delete flexProps.buttonFactory;\n      delete flexProps.cancelButton;\n      delete flexProps.cancelButtonText;\n      delete flexProps.centerButtons;\n      delete flexProps.clearDate;\n      delete flexProps.cleanup;\n      delete flexProps.clearButton;\n      delete flexProps.clearButtonText;\n      delete flexProps.isDatePickerFooter;\n      delete flexProps.onCancelClick;\n      delete flexProps.onClearClick;\n      delete flexProps.onOkClick;\n      delete flexProps.onTodayClick;\n      delete flexProps.okButton;\n      delete flexProps.okButtonText;\n      delete flexProps.selectDate;\n      delete flexProps.theme;\n      delete flexProps.todayButton;\n      delete flexProps.todayButtonText;\n\n      if (typeof props.cleanup == 'function') {\n        props.cleanup(flexProps);\n      }\n\n      return _react2.default.createElement(_reactFlex.Flex, _extends({\n        inline: true,\n        row: true\n      }, flexProps, {\n        justifyContent: 'center',\n        className: className,\n        children: children\n      }));\n    }\n  }, {\n    key: 'renderTodayButton',\n    value: function renderTodayButton() {\n      if (!this.props.todayButton) {\n        return null;\n      }\n      return this.renderButton(this.props.todayButtonText, this.props.onTodayClick);\n    }\n  }, {\n    key: 'renderClearButton',\n    value: function renderClearButton() {\n      if (!this.props.clearButton) {\n        return null;\n      }\n\n      return this.renderButton({\n        children: this.props.clearButtonText,\n        disabled: this.props.clearDate === undefined\n      }, this.props.onClearClick);\n    }\n  }, {\n    key: 'renderOkButton',\n    value: function renderOkButton() {\n      if (!this.props.okButton) {\n        return null;\n      }\n      return this.renderButton(this.props.okButtonText, this.props.onOkClick);\n    }\n  }, {\n    key: 'renderCancelButton',\n    value: function renderCancelButton() {\n      if (!this.props.cancelButton) {\n        return null;\n      }\n      return this.renderButton(this.props.cancelButtonText, this.props.onCancelClick);\n    }\n  }, {\n    key: 'renderButton',\n    value: function renderButton(props, fn) {\n      var text = props.children;\n      var p = props;\n\n      if (typeof props == 'string') {\n        p = {};\n        text = props;\n      }\n\n      if (typeof fn == 'function' && !p.onClick && !p.disabled) {\n        p.onClick = fn;\n      }\n\n      var Factory = this.props.buttonFactory;\n\n      var onMouseDown = p.onMouseDown ? (0, _joinFunctions2.default)(p.onMouseDown, preventDefault) : preventDefault;\n\n      return _react2.default.createElement(\n        Factory,\n        _extends({ tabIndex: 0 }, p, { onMouseDown: onMouseDown }),\n        text\n      );\n    }\n  }]);\n\n  return Footer;\n}(_reactClass2.default);\n\nexports.default = Footer;\n\n\nFooter.defaultProps = {\n  actionEvent: 'onClick',\n  theme: 'default',\n\n  buttonFactory: Button,\n\n  todayButton: true,\n  clearButton: true,\n  okButton: true,\n  cancelButton: true,\n\n  todayButtonText: 'Today',\n  clearButtonText: 'Clear',\n  okButtonText: 'OK',\n  cancelButtonText: 'Cancel',\n\n  isDatePickerFooter: true\n};\n\nFooter.propTypes = {\n  theme: _react.PropTypes.string,\n  centerButtons: _react.PropTypes.bool,\n\n  cokButtonText: _react.PropTypes.node,\n  clearButtonText: _react.PropTypes.node,\n  cancelButtonText: _react.PropTypes.node,\n  todayButtonText: _react.PropTypes.node,\n\n  onTodayClick: _react.PropTypes.func,\n  onClearClick: _react.PropTypes.func,\n  onOkClick: _react.PropTypes.func,\n  onCancelClick: _react.PropTypes.func\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/YearView.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _times = require('./utils/times');\n\nvar _times2 = _interopRequireDefault(_times);\n\nvar _join = require('./join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _toMoment2 = require('./toMoment');\n\nvar _toMoment3 = _interopRequireDefault(_toMoment2);\n\nvar _reactFlex = require('react-flex');\n\nvar _bemFactory = require('./bemFactory');\n\nvar _bemFactory2 = _interopRequireDefault(_bemFactory);\n\nvar _DecadeView = require('./DecadeView');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar bem = (0, _bemFactory2.default)('react-date-picker__year-view');\n\nvar NAV_KEYS = {\n  ArrowUp: function ArrowUp(mom) {\n    if (mom.get('month') >= 4) {\n      mom.add(-4, 'month');\n    }\n\n    return mom;\n  },\n  ArrowDown: function ArrowDown(mom) {\n    if (mom.get('month') <= 7) {\n      mom.add(4, 'month');\n    }\n\n    return mom;\n  },\n  ArrowLeft: function ArrowLeft(mom) {\n    if (mom.get('month') >= 1) {\n      mom.add(-1, 'month');\n    }\n\n    return mom;\n  },\n  ArrowRight: function ArrowRight(mom) {\n    if (mom.get('month') <= 10) {\n      mom.add(1, 'month');\n    }\n\n    return mom;\n  },\n  Home: function Home(mom) {\n    return mom.startOf('year').startOf('month');\n  },\n  End: function End(mom) {\n    return mom.endOf('year').startOf('month');\n  },\n  PageUp: function PageUp(mom) {\n    var month = mom.get('month') - 4;\n    var extra4 = month - 4;\n\n    if (month >= 0) {\n      if (extra4 >= 0) {\n        return mom.set('month', extra4);\n      }\n\n      return mom.set('month', month);\n    }\n\n    return mom;\n  },\n  PageDown: function PageDown(mom) {\n    var month = mom.get('month') + 4;\n    var extra4 = month + 4;\n\n    if (month <= 11) {\n      if (extra4 <= 11) {\n        return mom.set('month', extra4);\n      }\n\n      return mom.set('month', month);\n    }\n\n    return mom;\n  }\n};\n\nvar YearView = function (_Component) {\n  _inherits(YearView, _Component);\n\n  function YearView(props) {\n    _classCallCheck(this, YearView);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(YearView).call(this, props));\n\n    _this.state = (0, _DecadeView.getInitialState)(props);\n    return _this;\n  }\n\n  /**\n   * Returns all the days in the specified month.\n   *\n   * @param  {Moment/Date/Number} value\n   * @return {Moment[]}\n   */\n\n\n  _createClass(YearView, [{\n    key: 'getMonthsInYear',\n    value: function getMonthsInYear(value) {\n      var _this2 = this;\n\n      var start = this.toMoment(value).startOf('year');\n\n      return (0, _times2.default)(12).map(function (i) {\n        return _this2.toMoment(start).add(i, 'month');\n      });\n    }\n  }, {\n    key: 'toMoment',\n    value: function toMoment(date) {\n      return (0, _toMoment3.default)(date, this.props);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.p = (0, _objectAssign2.default)({}, this.props);\n\n      if (props.onlyCompareMonth) {\n        // props.adjustDateStartOf = null\n      }\n\n      var dateProps = (0, _DecadeView.prepareDateProps)(props, this.state);\n\n      (0, _objectAssign2.default)(props, dateProps);\n\n      var className = (0, _join2.default)(props.className, bem(), props.theme && bem(null, 'theme-' + props.theme));\n\n      var monthsInView = this.getMonthsInYear(props.viewMoment);\n\n      var flexProps = (0, _objectAssign2.default)({}, props);\n\n      delete flexProps.activeDate;\n      delete flexProps.activeMoment;\n      delete flexProps.adjustDateStartOf;\n      delete flexProps.adjustMaxDateStartOf;\n      delete flexProps.adjustMinDateStartOf;\n\n      delete flexProps.cleanup;\n      delete flexProps.constrainViewDate;\n\n      delete flexProps.date;\n      delete flexProps.dateFormat;\n\n      delete flexProps.isYearView;\n\n      delete flexProps.maxConstrained;\n      delete flexProps.maxDate;\n      delete flexProps.maxDateMoment;\n      delete flexProps.minConstrained;\n      delete flexProps.minDate;\n      delete flexProps.minDateMoment;\n      delete flexProps.moment;\n      delete flexProps.monthFormat;\n\n      delete flexProps.navKeys;\n\n      delete flexProps.onActiveDateChange;\n      delete flexProps.onViewDateChange;\n      delete flexProps.onlyCompareMonth;\n\n      delete flexProps.timestamp;\n      delete flexProps.theme;\n\n      delete flexProps.viewDate;\n      delete flexProps.viewMoment;\n\n      if (typeof props.cleanup == 'function') {\n        props.cleanup(flexProps);\n      }\n\n      return _react2.default.createElement(\n        _reactFlex.Flex,\n        _extends({\n          inline: true,\n          column: true,\n          alignItems: 'stretch',\n          tabIndex: 0\n        }, flexProps, {\n          onKeyDown: this.onKeyDown,\n          className: className\n        }),\n        this.renderMonths(props, monthsInView)\n      );\n    }\n  }, {\n    key: 'renderMonths',\n    value: function renderMonths(props, months) {\n      var _this3 = this;\n\n      var nodes = months.map(function (monthMoment) {\n        return _this3.renderMonth(props, monthMoment);\n      });\n\n      var buckets = (0, _times2.default)(Math.ceil(nodes.length / 4)).map(function (i) {\n        return nodes.slice(i * 4, (i + 1) * 4);\n      });\n\n      var className = bem('row');\n\n      return buckets.map(function (bucket, i) {\n        return _react2.default.createElement(\n          _reactFlex.Flex,\n          {\n            alignItems: 'center',\n            flex: true,\n            row: true,\n            inline: true,\n            key: 'row_' + i,\n            className: className\n          },\n          bucket\n        );\n      });\n    }\n  }, {\n    key: 'format',\n    value: function format(mom, _format) {\n      _format = _format || this.props.monthFormat;\n\n      return mom.format(_format);\n    }\n  }, {\n    key: 'renderMonth',\n    value: function renderMonth(props, dateMoment) {\n      var index = dateMoment.get('month');\n\n      var monthText = props.monthNames ? props.monthNames[index] || this.format(dateMoment) : this.format(dateMoment);\n\n      var timestamp = +dateMoment;\n\n      var isActiveDate = props.onlyCompareMonth && props.activeMoment ? dateMoment.get('month') == props.activeMoment.get('month') : timestamp === props.activeDate;\n\n      var isValue = props.onlyCompareMonth && props.moment ? dateMoment.get('month') == props.moment.get('month') : timestamp === props.timestamp;\n\n      var disabled = props.minDate != null && timestamp < props.minDate || props.maxDate != null && timestamp > props.maxDate;\n\n      var className = (0, _join2.default)(bem('month'), !disabled && isActiveDate && bem('month', 'active'), isValue && bem('month', 'value'), disabled && bem('month', 'disabled'));\n\n      var onClick = disabled ? null : this.handleClick.bind(this, {\n        dateMoment: dateMoment,\n        timestamp: timestamp\n      });\n\n      return _react2.default.createElement(\n        _reactFlex.Item,\n        {\n          key: monthText,\n          className: className,\n          onClick: onClick\n        },\n        monthText\n      );\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick(_ref, event) {\n      var timestamp = _ref.timestamp;\n      var dateMoment = _ref.dateMoment;\n\n      event.target.value = timestamp;\n\n      this.select({ dateMoment: dateMoment, timestamp: timestamp }, event);\n    }\n  }, {\n    key: 'onKeyDown',\n    value: function onKeyDown(event) {\n      return _DecadeView.onKeyDown.call(this, event);\n    }\n  }, {\n    key: 'confirm',\n    value: function confirm(date, event) {\n      return _DecadeView.confirm.call(this, date, event);\n    }\n  }, {\n    key: 'navigate',\n    value: function navigate(direction, event) {\n      return _DecadeView.navigate.call(this, direction, event);\n    }\n  }, {\n    key: 'select',\n    value: function select(_ref2, event) {\n      var dateMoment = _ref2.dateMoment;\n      var timestamp = _ref2.timestamp;\n\n      return _DecadeView.select.call(this, { dateMoment: dateMoment, timestamp: timestamp }, event);\n    }\n  }, {\n    key: 'onViewDateChange',\n    value: function onViewDateChange(_ref3) {\n      var dateMoment = _ref3.dateMoment;\n      var timestamp = _ref3.timestamp;\n\n      return _DecadeView.onViewDateChange.call(this, { dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'gotoViewDate',\n    value: function gotoViewDate(_ref4) {\n      var dateMoment = _ref4.dateMoment;\n      var timestamp = _ref4.timestamp;\n\n      return _DecadeView.gotoViewDate.call(this, { dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'onActiveDateChange',\n    value: function onActiveDateChange(_ref5) {\n      var dateMoment = _ref5.dateMoment;\n      var timestamp = _ref5.timestamp;\n\n      return _DecadeView.onActiveDateChange.call(this, { dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(_ref6, event) {\n      var dateMoment = _ref6.dateMoment;\n      var timestamp = _ref6.timestamp;\n\n      return _DecadeView.onChange.call(this, { dateMoment: dateMoment, timestamp: timestamp }, event);\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      (0, _reactDom.findDOMNode)(this).focus();\n    }\n  }]);\n\n  return YearView;\n}(_reactClass2.default);\n\nexports.default = YearView;\n\n\nYearView.defaultProps = {\n  isYearView: true,\n  navKeys: NAV_KEYS,\n  constrainViewDate: true,\n  theme: 'default',\n  monthFormat: 'MMM',\n  dateFormat: 'YYYY-MM-DD',\n\n  onlyCompareMonth: true,\n\n  adjustDateStartOf: 'month',\n  adjustMinDateStartOf: 'month',\n  adjustMaxDateStartOf: 'month'\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/utils/times.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar times = function times(count) {\n  return (count >= 0 ? [].concat(_toConsumableArray(new Array(count))) : []).map(function (v, i) {\n    return i;\n  });\n};\nexports.default = times;","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/DecadeView.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInitialState = exports.isValidActiveDate = exports.isDateInMinMax = exports.prepareDate = exports.prepareDateProps = exports.prepareMinMax = exports.prepareViewDate = exports.prepareActiveDate = exports.onKeyDown = exports.navigate = exports.gotoViewDate = exports.confirm = exports.select = exports.onActiveDateChange = exports.onViewDateChange = exports.onChange = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _reactFlex = require('react-flex');\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _times = require('./utils/times');\n\nvar _times2 = _interopRequireDefault(_times);\n\nvar _toMoment2 = require('./toMoment');\n\nvar _toMoment3 = _interopRequireDefault(_toMoment2);\n\nvar _join = require('./join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _bemFactory = require('./bemFactory');\n\nvar _bemFactory2 = _interopRequireDefault(_bemFactory);\n\nvar _onKeyDown = require('./MonthView/onKeyDown');\n\nvar _onKeyDown2 = _interopRequireDefault(_onKeyDown);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar bem = (0, _bemFactory2.default)('react-date-picker__decade-view');\n\nvar ARROWS = {\n  prev: _react2.default.createElement(\n    'svg',\n    { height: '24', viewBox: '0 0 24 24', width: '24' },\n    _react2.default.createElement('path', { d: 'M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z' }),\n    _react2.default.createElement('path', { d: 'M0 0h24v24H0z', fill: 'none' })\n  ),\n\n  next: _react2.default.createElement(\n    'svg',\n    { height: '24', viewBox: '0 0 24 24', width: '24' },\n    _react2.default.createElement('path', { d: 'M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z' }),\n    _react2.default.createElement('path', { d: 'M0 0h24v24H0z', fill: 'none' })\n  )\n};\n\nvar getDecadeStartYear = function getDecadeStartYear(mom) {\n  var year = mom.get('year');\n\n  return year - year % 10;\n};\n\nvar getDecadeEndYear = function getDecadeEndYear(mom) {\n  return getDecadeStartYear(mom) + 9;\n};\n\nvar NAV_KEYS = {\n  ArrowUp: function ArrowUp(mom) {\n    return mom.add(-5, 'year');\n  },\n  ArrowDown: function ArrowDown(mom) {\n    return mom.add(5, 'year');\n  },\n  ArrowLeft: function ArrowLeft(mom) {\n    return mom.add(-1, 'year');\n  },\n  ArrowRight: function ArrowRight(mom) {\n    return mom.add(1, 'year');\n  },\n  Home: function Home(mom) {\n    return mom.set('year', getDecadeStartYear(mom));\n  },\n  End: function End(mom) {\n    return mom.set('year', getDecadeEndYear(mom));\n  },\n  PageUp: function PageUp(mom) {\n    return mom.add(-10, 'year');\n  },\n  PageDown: function PageDown(mom) {\n    return mom.add(10, 'year');\n  }\n};\n\nvar isDateInMinMax = function isDateInMinMax(timestamp, props) {\n  if (props.minDate && timestamp < props.minDate) {\n    return false;\n  }\n\n  if (props.maxDate && timestamp > props.maxDate) {\n    return false;\n  }\n\n  return true;\n};\n\nvar isValidActiveDate = function isValidActiveDate(timestamp, props) {\n  if (!props) {\n    throw new Error('props is mandatory in isValidActiveDate');\n  }\n\n  return isDateInMinMax(timestamp, props);\n};\n\nvar _select = function _select(_ref, event) {\n  var dateMoment = _ref.dateMoment;\n  var timestamp = _ref.timestamp;\n\n  if (this.props.select) {\n    return this.props.select({ dateMoment: dateMoment, timestamp: timestamp }, event);\n  }\n\n  if (!timestamp) {\n    timestamp = +dateMoment;\n  }\n\n  this.gotoViewDate({ dateMoment: dateMoment, timestamp: timestamp });\n  this.onChange({ dateMoment: dateMoment, timestamp: timestamp }, event);\n\n  return undefined;\n};\n\nvar _confirm = function _confirm(date, event) {\n  event.preventDefault();\n\n  if (this.props.confirm) {\n    return this.props.confirm(date, event);\n  }\n\n  var dateMoment = this.toMoment(date);\n  var timestamp = +dateMoment;\n\n  this.select({ dateMoment: dateMoment, timestamp: timestamp }, event);\n\n  if (this.props.onConfirm) {\n    this.props.onConfirm({ dateMoment: dateMoment, timestamp: timestamp });\n  }\n\n  return undefined;\n};\n\nvar _onActiveDateChange = function _onActiveDateChange(_ref2) {\n  var dateMoment = _ref2.dateMoment;\n  var timestamp = _ref2.timestamp;\n\n  if (!isValidActiveDate(timestamp, this.p)) {\n    return;\n  }\n\n  if (this.props.activeDate === undefined) {\n    this.setState({\n      activeDate: timestamp\n    });\n  }\n\n  if (this.props.onActiveDateChange) {\n    var dateString = this.format(dateMoment);\n    this.props.onActiveDateChange(dateString, { dateMoment: dateMoment, timestamp: timestamp, dateString: dateString });\n  }\n};\n\nvar _onViewDateChange = function _onViewDateChange(_ref3) {\n  var dateMoment = _ref3.dateMoment;\n  var timestamp = _ref3.timestamp;\n\n  if (dateMoment && timestamp === undefined) {\n    timestamp = +dateMoment;\n  }\n\n  if (this.props.constrainViewDate && !isDateInMinMax(timestamp, this.p)) {\n    return;\n  }\n\n  if (this.props.viewDate === undefined) {\n    this.setState({\n      viewDate: timestamp\n    });\n  }\n\n  if (this.props.onViewDateChange) {\n    var dateString = this.format(dateMoment);\n    this.props.onViewDateChange(dateString, { dateMoment: dateMoment, dateString: dateString, timestamp: timestamp });\n  }\n};\n\nvar _onChange = function _onChange(_ref4, event) {\n  var dateMoment = _ref4.dateMoment;\n  var timestamp = _ref4.timestamp;\n\n  if (this.props.date === undefined) {\n    this.setState({\n      date: timestamp\n    });\n  }\n\n  if (this.props.onChange) {\n    var dateString = this.format(dateMoment);\n    this.props.onChange(dateString, { dateMoment: dateMoment, timestamp: timestamp, dateString: dateString }, event);\n  }\n};\n\nvar _navigate = function _navigate(direction, event) {\n  var _this = this;\n\n  var props = this.p;\n\n  var getNavigationDate = function getNavigationDate(dir, date, dateFormat) {\n    var mom = _moment2.default.isMoment(date) ? date : _this.toMoment(date, dateFormat);\n\n    if (typeof dir == 'function') {\n      return dir(mom);\n    }\n\n    return mom;\n  };\n\n  if (props.navigate) {\n    return props.navigate(direction, event, getNavigationDate);\n  }\n\n  event.preventDefault();\n\n  if (props.activeDate) {\n    var nextMoment = getNavigationDate(direction, props.activeDate);\n\n    this.gotoViewDate({ dateMoment: nextMoment });\n  }\n\n  return undefined;\n};\n\nvar _gotoViewDate = function _gotoViewDate(_ref5) {\n  var dateMoment = _ref5.dateMoment;\n  var timestamp = _ref5.timestamp;\n\n  if (!timestamp) {\n    timestamp = dateMoment == null ? null : +dateMoment;\n  }\n\n  this.onViewDateChange({ dateMoment: dateMoment, timestamp: timestamp });\n  this.onActiveDateChange({ dateMoment: dateMoment, timestamp: timestamp });\n};\n\nvar prepareDate = function prepareDate(props, state) {\n  return props.date === undefined ? state.date : props.date;\n};\n\nvar prepareViewDate = function prepareViewDate(props, state) {\n  var viewDate = props.viewDate === undefined ? state.viewDate : props.viewDate;\n\n  if (!viewDate && props.date) {\n    return props.date;\n  }\n\n  return viewDate;\n};\n\nvar prepareActiveDate = function prepareActiveDate(props, state) {\n  var activeDate = props.activeDate === undefined ? state.activeDate || prepareDate(props, state) : props.activeDate;\n\n  return activeDate;\n};\n\nvar prepareMinMax = function prepareMinMax(props) {\n  var minDate = props.minDate;\n  var maxDate = props.maxDate;\n\n\n  var result = {};\n\n  if (minDate != null) {\n    result.minDateMoment = (0, _toMoment3.default)(props.minDate, props).startOf(props.adjustMinDateStartOf);\n\n    result.minDate = +result.minDateMoment;\n  }\n\n  if (maxDate != null) {\n    result.maxDateMoment = (0, _toMoment3.default)(props.maxDate, props).endOf(props.adjustMaxDateStartOf);\n\n    result.maxDate = +result.maxDateMoment;\n  }\n\n  return result;\n};\n\nvar prepareDateProps = function prepareDateProps(props, state) {\n  var result = {};\n\n  (0, _objectAssign2.default)(result, prepareMinMax(props));\n\n  result.date = prepareDate(props, state);\n  result.viewDate = prepareViewDate(props, state);\n\n  var activeDate = prepareActiveDate(props, state);\n\n  if (result.date != null) {\n    result.moment = (0, _toMoment3.default)(result.date, props);\n    if (props.adjustDateStartOf) {\n      result.moment.startOf(props.adjustDateStartOf);\n    }\n    result.timestamp = +result.moment;\n  }\n\n  if (activeDate) {\n    result.activeMoment = (0, _toMoment3.default)(activeDate, props);\n    if (props.adjustDateStartOf) {\n      result.activeMoment.startOf(props.adjustDateStartOf);\n    }\n    result.activeDate = +result.activeMoment;\n  }\n\n  var viewMoment = (0, _toMoment3.default)(result.viewDate, props);\n\n  if (props.constrainViewDate && result.minDate != null && viewMoment.isBefore(result.minDate)) {\n    result.minConstrained = true;\n    viewMoment = (0, _toMoment3.default)(result.minDate, props);\n  }\n\n  if (props.constrainViewDate && result.maxDate != null && viewMoment.isAfter(result.maxDate)) {\n    result.maxConstrained = true;\n    viewMoment = (0, _toMoment3.default)(result.maxDate, props);\n  }\n\n  if (props.adjustDateStartOf) {\n    viewMoment.startOf(props.adjustDateStartOf);\n  }\n\n  result.viewMoment = viewMoment;\n\n  return result;\n};\n\nvar getInitialState = function getInitialState(props) {\n  return {\n    date: props.defaultDate,\n    activeDate: props.defaultActiveDate,\n    viewDate: props.defaultViewDate\n  };\n};\n\nvar DecadeView = function (_Component) {\n  _inherits(DecadeView, _Component);\n\n  function DecadeView(props) {\n    _classCallCheck(this, DecadeView);\n\n    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(DecadeView).call(this, props));\n\n    _this2.state = getInitialState(props);\n    return _this2;\n  }\n\n  _createClass(DecadeView, [{\n    key: 'getYearsInDecade',\n    value: function getYearsInDecade(value) {\n      var _this3 = this;\n\n      var year = getDecadeStartYear(this.toMoment(value));\n\n      var start = this.toMoment('' + year, 'YYYY').startOf('year');\n\n      return (0, _times2.default)(10).map(function (i) {\n        return _this3.toMoment(start).add(i, 'year');\n      });\n    }\n  }, {\n    key: 'toMoment',\n    value: function toMoment(date, format) {\n      return (0, _toMoment3.default)(date, format, this.props);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.p = (0, _objectAssign2.default)({}, this.props);\n\n      if (props.onlyCompareYear) {\n        // props.adjustDateStartOf = null\n      }\n\n      var dateProps = prepareDateProps(props, this.state);\n\n      (0, _objectAssign2.default)(props, dateProps);\n\n      var yearsInView = this.getYearsInDecade(props.viewMoment);\n\n      var className = (0, _join2.default)(props.className, bem(), props.theme && bem(null, 'theme-' + props.theme));\n\n      var children = this.renderYears(props, yearsInView);\n      var align = 'stretch';\n      var column = true;\n\n      if (props.navigation) {\n        column = false;\n        align = 'center';\n\n        children = [this.renderNav(-1), _react2.default.createElement(_reactFlex.Flex, { inline: true, flex: true, column: true, alignItems: 'stretch', children: children }), this.renderNav(1)];\n      }\n\n      var flexProps = (0, _objectAssign2.default)({}, this.props);\n\n      delete flexProps.activeDate;\n      delete flexProps.adjustDateStartOf;\n      delete flexProps.adjustMaxDateStartOf;\n      delete flexProps.adjustMinDateStartOf;\n      delete flexProps.arrows;\n      delete flexProps.cleanup;\n      delete flexProps.constrainViewDate;\n      delete flexProps.date;\n      delete flexProps.dateFormat;\n      delete flexProps.isDecadeView;\n      delete flexProps.maxDate;\n      delete flexProps.minDate;\n      delete flexProps.navigation;\n      delete flexProps.navKeys;\n      delete flexProps.onActiveDateChange;\n      delete flexProps.onConfirm;\n      delete flexProps.onlyCompareYear;\n      delete flexProps.onViewDateChange;\n      delete flexProps.perRow;\n      delete flexProps.theme;\n      delete flexProps.viewDate;\n      delete flexProps.yearFormat;\n\n      if (typeof props.cleanup == 'function') {\n        props.cleanup(flexProps);\n      }\n\n      return _react2.default.createElement(_reactFlex.Flex, _extends({\n        inline: true,\n        column: column,\n        alignItems: align,\n        tabIndex: 0\n      }, flexProps, {\n        onKeyDown: this.onKeyDown,\n        className: className,\n        children: children\n      }));\n    }\n  }, {\n    key: 'renderNav',\n    value: function renderNav(dir) {\n      var _this4 = this;\n\n      var props = this.p;\n\n      var name = dir == -1 ? 'prev' : 'next';\n      var navMoment = this.toMoment(props.viewMoment).add(dir * 10, 'year');\n\n      var disabled = dir == -1 ? props.minDateMoment && getDecadeEndYear(navMoment) < getDecadeEndYear(props.minDateMoment) : props.maxDateMoment && getDecadeEndYear(navMoment) > getDecadeEndYear(props.maxDateMoment);\n\n      var className = (0, _join2.default)(bem('arrow'), bem('arrow--' + name), disabled && bem('arrow--disabled'));\n\n      var arrow = props.arrows[name] || ARROWS[name];\n\n      var arrowProps = {\n        className: className,\n        onClick: !disabled ? function () {\n          return _this4.onViewDateChange({ dateMoment: navMoment });\n        } : null,\n        children: arrow,\n        disabled: disabled\n      };\n\n      if (props.renderNavigation) {\n        return props.renderNavigation(arrowProps, props);\n      }\n\n      return _react2.default.createElement('div', arrowProps);\n    }\n  }, {\n    key: 'renderYears',\n    value: function renderYears(props, years) {\n      var nodes = years.map(this.renderYear);\n\n      var perRow = props.perRow;\n      var buckets = (0, _times2.default)(Math.ceil(nodes.length / perRow)).map(function (i) {\n        return nodes.slice(i * perRow, (i + 1) * perRow);\n      });\n\n      return buckets.map(function (bucket, i) {\n        return _react2.default.createElement(\n          _reactFlex.Flex,\n          {\n            alignItems: 'center',\n            flex: true,\n            row: true,\n            inline: true,\n            key: 'row_' + i,\n            className: 'dp-row'\n          },\n          bucket\n        );\n      });\n    }\n  }, {\n    key: 'renderYear',\n    value: function renderYear(dateMoment) {\n      var props = this.p;\n      var yearText = this.format(dateMoment);\n\n      var timestamp = +dateMoment;\n\n      var isActiveDate = props.onlyCompareYear && props.activeMoment ? dateMoment.get('year') == props.activeMoment.get('year') : timestamp === props.activeDate;\n\n      var isValue = props.onlyCompareYear && props.moment ? dateMoment.get('year') == props.moment.get('year') : timestamp === props.timestamp;\n\n      var className = (0, _join2.default)(bem('year'), isActiveDate && bem('year', 'active'), isValue && bem('year', 'value'), props.minDate != null && timestamp < props.minDate && bem('year', 'disabled'), props.maxDate != null && timestamp > props.maxDate && bem('year', 'disabled'));\n\n      var onClick = this.handleClick.bind(this, {\n        dateMoment: dateMoment,\n        timestamp: timestamp\n      });\n\n      return _react2.default.createElement(\n        _reactFlex.Item,\n        {\n          key: yearText,\n          className: className,\n          onClick: onClick\n        },\n        yearText\n      );\n    }\n  }, {\n    key: 'format',\n    value: function format(mom, _format) {\n      _format = _format || this.props.yearFormat;\n\n      return mom.format(_format);\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick(_ref6, event) {\n      var timestamp = _ref6.timestamp;\n      var dateMoment = _ref6.dateMoment;\n\n      event.target.value = timestamp;\n\n      var props = this.p;\n      if (props.minDate && timestamp < props.minDate) {\n        return;\n      }\n\n      if (props.maxDate && timestamp > props.maxDate) {\n        return;\n      }\n\n      this.select({ dateMoment: dateMoment, timestamp: timestamp }, event);\n    }\n  }, {\n    key: 'onKeyDown',\n    value: function onKeyDown(event) {\n      return _onKeyDown2.default.call(this, event);\n    }\n  }, {\n    key: 'confirm',\n    value: function confirm(date, event) {\n      return _confirm.call(this, date, event);\n    }\n  }, {\n    key: 'navigate',\n    value: function navigate(direction, event) {\n      return _navigate.call(this, direction, event);\n    }\n  }, {\n    key: 'select',\n    value: function select(_ref7, event) {\n      var dateMoment = _ref7.dateMoment;\n      var timestamp = _ref7.timestamp;\n\n      return _select.call(this, { dateMoment: dateMoment, timestamp: timestamp }, event);\n    }\n  }, {\n    key: 'onViewDateChange',\n    value: function onViewDateChange(_ref8) {\n      var dateMoment = _ref8.dateMoment;\n      var timestamp = _ref8.timestamp;\n\n      return _onViewDateChange.call(this, { dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'gotoViewDate',\n    value: function gotoViewDate(_ref9) {\n      var dateMoment = _ref9.dateMoment;\n      var timestamp = _ref9.timestamp;\n\n      return _gotoViewDate.call(this, { dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'onActiveDateChange',\n    value: function onActiveDateChange(_ref10) {\n      var dateMoment = _ref10.dateMoment;\n      var timestamp = _ref10.timestamp;\n\n      return _onActiveDateChange.call(this, { dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(_ref11, event) {\n      var dateMoment = _ref11.dateMoment;\n      var timestamp = _ref11.timestamp;\n\n      return _onChange.call(this, { dateMoment: dateMoment, timestamp: timestamp }, event);\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      (0, _reactDom.findDOMNode)(this).focus();\n    }\n  }]);\n\n  return DecadeView;\n}(_reactClass2.default);\n\nexports.default = DecadeView;\n\n\nDecadeView.defaultProps = {\n  isDecadeView: true,\n  arrows: {},\n  navigation: true,\n  constrainViewDate: true,\n  navKeys: NAV_KEYS,\n  theme: 'default',\n  yearFormat: 'YYYY',\n  dateFormat: 'YYYY-MM-DD',\n  perRow: 5,\n\n  onlyCompareYear: true,\n\n  adjustDateStartOf: 'year',\n  adjustMinDateStartOf: 'year',\n  adjustMaxDateStartOf: 'year'\n};\n\nexports.onChange = _onChange;\nexports.onViewDateChange = _onViewDateChange;\nexports.onActiveDateChange = _onActiveDateChange;\nexports.select = _select;\nexports.confirm = _confirm;\nexports.gotoViewDate = _gotoViewDate;\nexports.navigate = _navigate;\nexports.onKeyDown = _onKeyDown2.default;\nexports.prepareActiveDate = prepareActiveDate;\nexports.prepareViewDate = prepareViewDate;\nexports.prepareMinMax = prepareMinMax;\nexports.prepareDateProps = prepareDateProps;\nexports.prepareDate = prepareDate;\nexports.isDateInMinMax = isDateInMinMax;\nexports.isValidActiveDate = isValidActiveDate;\nexports.getInitialState = getInitialState;","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/MonthView/onKeyDown.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (event) {\n  var key = event.key;\n\n  if (this.props.onKeyDown) {\n    if (this.props.onKeyDown(event) === false) {\n      return;\n    }\n  }\n\n  if (key == 'Enter' && this.p.activeDate) {\n    this.confirm(this.p.activeDate, event);\n  }\n\n  var navKeys = this.p.navKeys || _navKeys2.default;\n  var dir = navKeys[key];\n\n  if (!dir) {\n    return;\n  }\n\n  event.preventDefault();\n  this.navigate(dir, event);\n};\n\nvar _navKeys = require('./navKeys');\n\nvar _navKeys2 = _interopRequireDefault(_navKeys);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/MonthView/navKeys.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  ArrowUp: -7,\n  ArrowDown: 7,\n  ArrowLeft: -1,\n  ArrowRight: 1,\n\n  PageUp: function PageUp(mom) {\n    return mom.add(-1, 'month');\n  },\n  PageDown: function PageDown(mom) {\n    return mom.add(1, 'month');\n  },\n  Home: function Home(mom) {\n    return mom.startOf('month');\n  },\n  End: function End(mom) {\n    return mom.endOf('month');\n  }\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/BasicMonthView.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDaysInMonthView = exports.getWeekendStartDay = exports.getWeekStartMoment = exports.getWeekStartDay = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _reactFlex = require('react-flex');\n\nvar _format = require('./utils/format');\n\nvar _format2 = _interopRequireDefault(_format);\n\nvar _toMoment = require('./toMoment');\n\nvar _toMoment2 = _interopRequireDefault(_toMoment);\n\nvar _getWeekDayNames = require('./utils/getWeekDayNames');\n\nvar _getWeekDayNames2 = _interopRequireDefault(_getWeekDayNames);\n\nvar _join = require('./join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _bemFactory = require('./bemFactory');\n\nvar _bemFactory2 = _interopRequireDefault(_bemFactory);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar CLASS_NAME = 'react-date-picker__basic-month-view';\n\nvar RENDER_DAY = function RENDER_DAY(props) {\n  var divProps = (0, _objectAssign2.default)({}, props);\n\n  delete divProps.date;\n  delete divProps.dateMoment;\n  delete divProps.day;\n  delete divProps.timestamp;\n\n  return _react2.default.createElement('div', divProps);\n};\n\nvar getWeekStartDay = function getWeekStartDay(props) {\n  var locale = props.locale;\n  var weekStartDay = props.weekStartDay;\n\n  if (weekStartDay == null) {\n    var localeData = props.localeData || _moment2.default.localeData(locale);\n    weekStartDay = localeData._week ? localeData._week.dow : null;\n  }\n\n  return weekStartDay;\n};\n\n/**\n * Gets the number for the first day of the weekend\n *\n * @param  {Object} props\n * @param  {Number/String} props.weekStartDay\n *\n * @return {Number}\n */\nvar getWeekendStartDay = function getWeekendStartDay(props) {\n  var weekendStartDay = props.weekendStartDay;\n\n\n  if (weekendStartDay == null) {\n    return getWeekStartDay(props) + 5 % 7;\n  }\n\n  return weekendStartDay;\n};\n\n/**\n * Gets a moment that points to the first day of the week\n *\n * @param  {Moment/Date/String} value]\n * @param  {Object} props\n * @param  {String} props.dateFormat\n * @param  {String} props.locale\n * @param  {Number/String} props.weekStartDay\n *\n * @return {Moment}\n */\nvar getWeekStartMoment = function getWeekStartMoment(value, props) {\n  var locale = props.locale;\n  var dateFormat = props.dateFormat;\n\n  var weekStartDay = getWeekStartDay(props);\n\n  return (0, _toMoment2.default)(value, {\n    locale: locale,\n    dateFormat: dateFormat\n  }).day(weekStartDay);\n};\n\n/**\n * Returns an array of moments with the days in the month of the value\n *\n * @param  {Moment/Date/String} value\n *\n * @param  {Object} props\n * @param  {String} props.locale\n * @param  {String} props.dateFormat\n * @param  {String} props.weekStartDay\n * @param  {Boolean} props.alwaysShowPrevWeek\n *\n * @return {Moment[]}\n */\nvar getDaysInMonthView = function getDaysInMonthView(value, props) {\n  var locale = props.locale;\n  var dateFormat = props.dateFormat;\n\n  var toMomentParam = { locale: locale, dateFormat: dateFormat };\n\n  var first = (0, _toMoment2.default)(value, toMomentParam).startOf('month');\n  var beforeFirst = (0, _toMoment2.default)(value, toMomentParam).startOf('month').add(-1, 'days');\n\n  var start = getWeekStartMoment(first, props);\n\n  var result = [];\n\n  var i = 0;\n\n  if (beforeFirst.isBefore(start)\n  // and it doesn't start with a full week before and the\n  // week has at least 1 day from current month (default)\n   && (props.alwaysShowPrevWeek || !start.isSame(first))) {\n    start.add(-1, 'weeks');\n  }\n\n  for (; i < 42; i++) {\n    result.push((0, _toMoment2.default)(start, toMomentParam));\n    start.add(1, 'days');\n  }\n\n  return result;\n};\n\n/**\n * @param  {Object} props\n * @param  {String} props.locale\n * @param  {Number} props.weekStartDay\n * @param  {Array/Function} props.weekDayNames\n *\n * @return {String[]}\n */\nvar getWeekDayNames = function getWeekDayNames(props) {\n  var weekStartDay = props.weekStartDay;\n  var weekDayNames = props.weekDayNames;\n  var locale = props.locale;\n\n\n  var names = weekDayNames;\n\n  if (typeof names == 'function') {\n    names = names(weekStartDay, locale);\n  } else if (Array.isArray(names)) {\n    names = [].concat(_toConsumableArray(names));\n\n    var index = weekStartDay;\n\n    while (index > 0) {\n      names.push(names.shift());\n      index--;\n    }\n  }\n\n  return names;\n};\n\nvar BasicMonthView = function (_Component) {\n  _inherits(BasicMonthView, _Component);\n\n  function BasicMonthView() {\n    _classCallCheck(this, BasicMonthView);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(BasicMonthView).apply(this, arguments));\n  }\n\n  _createClass(BasicMonthView, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.updateBem(this.props);\n      this.updateToMoment(this.props);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.defaultClassName != this.props.defaultClassName) {\n        this.updateBem(nextProps);\n      }\n\n      this.updateToMoment(nextProps);\n    }\n  }, {\n    key: 'updateBem',\n    value: function updateBem(props) {\n      this.bem = (0, _bemFactory2.default)(props.defaultClassName);\n    }\n  }, {\n    key: 'updateToMoment',\n    value: function updateToMoment(props) {\n      this.toMoment = function (value, dateFormat) {\n        return (0, _toMoment2.default)(value, {\n          locale: props.locale,\n          dateFormat: dateFormat || props.dateFormat\n        });\n      };\n    }\n  }, {\n    key: 'prepareProps',\n    value: function prepareProps(thisProps) {\n      var props = (0, _objectAssign2.default)({}, thisProps);\n\n      props.viewMoment = props.viewMoment || this.toMoment(props.viewDate);\n\n      props.weekStartDay = getWeekStartDay(props);\n\n      props.className = this.prepareClassName(props);\n\n      return props;\n    }\n  }, {\n    key: 'prepareClassName',\n    value: function prepareClassName(props) {\n      return (0, _join2.default)(props.className, CLASS_NAME + ' dp-month-view');\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.p = this.prepareProps(this.props);\n\n      var viewMoment = props.viewMoment;\n\n\n      var daysInView = props.daysInView || getDaysInMonthView(viewMoment, props);\n\n      var children = [this.renderWeekDayNames(), this.renderDays(props, daysInView)];\n\n      if (props.renderChildren) {\n        children = props.renderChildren(children, props);\n      }\n\n      var flexProps = (0, _objectAssign2.default)({}, props);\n\n      delete flexProps.alwaysShowPrevWeek;\n      delete flexProps.cleanup;\n      delete flexProps.dateFormat;\n      delete flexProps.daysInView;\n      delete flexProps.defaultClassName;\n      delete flexProps.defaultDate;\n      delete flexProps.defaultValue;\n      delete flexProps.forceValidDate;\n      delete flexProps.locale;\n      delete flexProps.moment;\n      delete flexProps.onClockEnterKey;\n      delete flexProps.onClockEscapeKey;\n      delete flexProps.onClockInputBlur;\n      delete flexProps.onClockInputFocus;\n      delete flexProps.onClockInputMouseDown;\n      delete flexProps.onFooterCancelClick;\n      delete flexProps.onFooterClearClick;\n      delete flexProps.onFooterOkClick;\n      delete flexProps.onFooterTodayClick;\n      delete flexProps.onRenderDay;\n      delete flexProps.renderChildren;\n      delete flexProps.renderDay;\n      delete flexProps.timestamp;\n      delete flexProps.value;\n      delete flexProps.viewDate;\n      delete flexProps.viewMoment;\n      delete flexProps.weekDayNames;\n      delete flexProps.weekNumbers;\n      delete flexProps.weekNumberName;\n      delete flexProps.weekStartDay;\n\n      if (typeof props.cleanup == 'function') {\n        props.cleanup(flexProps);\n      }\n\n      return _react2.default.createElement(_reactFlex.Flex, _extends({\n        column: true,\n        wrap: false,\n        inline: true,\n        alignItems: 'stretch'\n      }, flexProps, {\n\n        children: children\n      }));\n    }\n\n    /**\n     * Render the week number cell\n     * @param  {Moment[]} days The days in a week\n     * @return {React.DOM}\n     */\n\n  }, {\n    key: 'renderWeekNumber',\n    value: function renderWeekNumber(props, days) {\n      var firstDayOfWeek = days[0];\n      var week = firstDayOfWeek.weeks();\n\n      var weekNumberProps = {\n        key: 'week',\n\n        className: this.bem('cell') + ' ' + this.bem('week-number') + ' dp-cell dp-weeknumber',\n\n        // week number\n        week: week,\n\n        // the days in this week\n        days: days,\n\n        date: firstDayOfWeek,\n\n        children: week\n      };\n\n      var renderWeekNumber = props.renderWeekNumber;\n\n      var result = void 0;\n\n      if (renderWeekNumber) {\n        result = renderWeekNumber(weekNumberProps);\n      }\n\n      if (result === undefined) {\n        var divProps = (0, _objectAssign2.default)({}, weekNumberProps);\n\n        delete divProps.date;\n        delete divProps.days;\n        delete divProps.week;\n\n        result = _react2.default.createElement('div', divProps);\n      }\n\n      return result;\n    }\n\n    /**\n     * Render the given array of days\n     * @param  {Moment[]} days\n     *\n     * @return {React.DOM}\n     */\n\n  }, {\n    key: 'renderDays',\n    value: function renderDays(props, days) {\n      var _this2 = this;\n\n      var nodes = days.map(function (date) {\n        return _this2.renderDay(props, date);\n      });\n\n      var len = days.length;\n      var buckets = [];\n      var bucketsLen = Math.ceil(len / 7);\n\n      var i = 0;\n      var weekStart = void 0;\n      var weekEnd = void 0;\n\n      for (; i < bucketsLen; i++) {\n        weekStart = i * 7;\n        weekEnd = (i + 1) * 7;\n\n        buckets.push([props.weekNumbers && this.renderWeekNumber(props, days.slice(weekStart, weekEnd))].concat(nodes.slice(weekStart, weekEnd)));\n      }\n\n      return buckets.map(function (bucket, index) {\n        return _react2.default.createElement('div', {\n          key: 'row_' + index,\n          className: _this2.bem('row') + ' dp-week dp-row',\n          children: bucket\n        });\n      });\n    }\n  }, {\n    key: 'renderDay',\n    value: function renderDay(props, dateMoment) {\n      var dayText = _format2.default.day(dateMoment, props.dayFormat);\n\n      var classes = [this.bem('cell'), this.bem('day'), 'dp-cell dp-day'];\n\n      var renderDayProps = {\n        day: dayText,\n        dateMoment: dateMoment,\n        timestamp: +dateMoment,\n\n        key: dayText,\n        className: classes.join(' '),\n        children: dayText\n      };\n\n      if (typeof props.onRenderDay === 'function') {\n        renderDayProps = props.onRenderDay(renderDayProps);\n      }\n\n      var renderFunction = props.renderDay || RENDER_DAY;\n\n      var result = renderFunction(renderDayProps);\n\n      if (result === undefined) {\n        result = RENDER_DAY(renderDayProps);\n      }\n\n      return result;\n    }\n  }, {\n    key: 'renderWeekDayNames',\n    value: function renderWeekDayNames() {\n      var _this3 = this;\n\n      var props = this.p;\n      var weekNumbers = props.weekNumbers;\n      var weekNumberName = props.weekNumberName;\n      var weekDayNames = props.weekDayNames;\n      var renderWeekDayNames = props.renderWeekDayNames;\n      var renderWeekDayName = props.renderWeekDayName;\n      var weekStartDay = props.weekStartDay;\n\n\n      if (weekDayNames === false) {\n        return null;\n      }\n\n      var names = weekNumbers ? [weekNumberName].concat(getWeekDayNames(props)) : getWeekDayNames(props);\n\n      var className = this.bem('row') + ' ' + this.bem('week-day-names') + ' dp-row dp-week-day-names';\n\n      var renderProps = {\n        className: className,\n        names: names\n      };\n\n      if (renderWeekDayNames) {\n        return renderWeekDayNames(renderProps);\n      }\n\n      return _react2.default.createElement(\n        'div',\n        { className: className },\n        names.map(function (name, index) {\n          var props = {\n            weekStartDay: weekStartDay,\n            index: index,\n            name: name,\n\n            key: index,\n            className: _this3.bem('cell') + ' ' + _this3.bem('week-day-name') + ' dp-week-day-name',\n            children: name\n          };\n\n          if (renderWeekDayName) {\n            return renderWeekDayName(props);\n          }\n\n          var divProps = (0, _objectAssign2.default)({}, props);\n\n          delete divProps.index;\n          delete divProps.weekStartDay;\n          delete divProps.name;\n\n          return _react2.default.createElement('div', divProps);\n        })\n      );\n    }\n  }]);\n\n  return BasicMonthView;\n}(_reactClass2.default);\n\nBasicMonthView.propTypes = {\n  viewDate: _react.PropTypes.any,\n  viewMoment: _react.PropTypes.any,\n\n  locale: _react.PropTypes.string,\n  weekStartDay: _react.PropTypes.number, // 0 is Sunday in the English locale\n\n  // boolean prop to show/hide week numbers\n  weekNumbers: _react.PropTypes.bool,\n\n  // the name to give to the week number column\n  weekNumberName: _react.PropTypes.string,\n\n  weekDayNames: function weekDayNames(props, propName) {\n    var value = props[propName];\n\n    if (typeof value != 'function' && value !== false && !Array.isArray(value)) {\n      return new Error('\"weekDayNames\" should be a function, an array or the boolean \"false\"');\n    }\n\n    return undefined;\n  },\n\n\n  renderWeekDayNames: _react.PropTypes.func,\n  renderWeekDayName: _react.PropTypes.func,\n\n  renderWeekNumber: _react.PropTypes.func,\n  renderDay: _react.PropTypes.func,\n  onRenderDay: _react.PropTypes.func,\n\n  alwaysShowPrevWeek: _react.PropTypes.bool\n};\n\nBasicMonthView.defaultProps = {\n\n  defaultClassName: CLASS_NAME,\n\n  dateFormat: 'YYYY-MM-DD',\n  alwaysShowPrevWeek: false,\n  weekNumbers: true,\n  weekNumberName: null,\n\n  weekDayNames: _getWeekDayNames2.default\n};\n\nexports.default = BasicMonthView;\nexports.getWeekStartDay = getWeekStartDay;\nexports.getWeekStartMoment = getWeekStartMoment;\nexports.getWeekendStartDay = getWeekendStartDay;\nexports.getDaysInMonthView = getDaysInMonthView;","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/utils/format.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toMoment = require('../toMoment');\n\nvar _toMoment2 = _interopRequireDefault(_toMoment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CONFIG = {\n  // the format in which days should be displayed in month view\n  dayFormat: 'D',\n\n  // the format in which months should be displayed in year view\n  monthFormat: 'MMMM',\n\n  // the format in which years should be displayed in decade view\n  yearFormat: 'YYYY'\n};\n\nvar f = function f(mom, format) {\n  return (0, _toMoment2.default)(mom).format(format);\n};\n\nexports.default = {\n  day: function day(mom, format) {\n    return f(mom, format || CONFIG.dayFormat);\n  },\n  month: function month(mom, format) {\n    return f(mom, format || CONFIG.monthFormat);\n  },\n  year: function year(mom, format) {\n    return f(mom, format || CONFIG.yearFormat);\n  }\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/utils/getWeekDayNames.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getWeekDayNames;\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_WEEK_START_DAY = (0, _moment2.default)().startOf('week').format('d') * 1;\n\nfunction getWeekDayNames(startDay, locale) {\n  var weekDays = void 0;\n\n  if (locale) {\n    var data = _moment2.default.localeData(locale);\n\n    weekDays = data && data._weekdaysShort ? data._weekdaysShort : weekDays;\n  }\n\n  weekDays = (weekDays || _moment2.default.weekdaysShort()).concat();\n\n  var names = weekDays;\n  var index = startDay == null ? DEFAULT_WEEK_START_DAY : startDay;\n\n  while (index > 0) {\n    names.push(names.shift());\n    index--;\n  }\n\n  return names;\n}","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/TimePicker.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _TimeInput = require('./TimeInput');\n\nvar _TimeInput2 = _interopRequireDefault(_TimeInput);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _toMoment = require('./toMoment');\n\nvar _toMoment2 = _interopRequireDefault(_toMoment);\n\nvar _join = require('./join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _Clock = require('./Clock');\n\nvar _Clock2 = _interopRequireDefault(_Clock);\n\nvar _reactFlex = require('react-flex');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TimePicker = function (_Component) {\n  _inherits(TimePicker, _Component);\n\n  function TimePicker(props) {\n    _classCallCheck(this, TimePicker);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TimePicker).call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  // prepareDate(props){\n  //   return toMoment(props.date, props)\n  // }\n\n  _createClass(TimePicker, [{\n    key: 'render',\n    value: function render() {\n\n      var props = this.p = (0, _objectAssign2.default)({}, this.props);\n      props.children = _react2.default.Children.toArray(props.children);\n\n      var timeFormat = props.timeFormat.toLowerCase();\n\n      // props.date = this.prepareDate(props)\n      props.hasTime = props.hasTime || timeFormat.indexOf('k') != -1 || timeFormat.indexOf('h') != -1;\n\n      var className = (0, _join2.default)(props.className, 'react-date-picker__time-picker', props.theme && 'react-date-picker__time-picker--theme-' + props.theme);\n\n      return _react2.default.createElement(\n        _reactFlex.Flex,\n        _extends({\n          inline: true,\n          column: true,\n          wrap: false\n        }, this.props, {\n          className: className }),\n        this.renderClock(),\n        this.renderInput()\n      );\n    }\n  }, {\n    key: 'renderInput',\n    value: function renderInput() {\n      return _react2.default.createElement(_TimeInput2.default, {\n        className: 'react-date-picker__time-picker-input',\n        format: this.props.timeFormat || this.props.format,\n        defaultValue: this.props.value || this.props.defaultValue,\n        onChange: this.onTimeChange\n      });\n    }\n  }, {\n    key: 'onTimeChange',\n    value: function onTimeChange(value) {\n      var time = value.split(':');\n\n      var seconds = time[0] * 3600 + parseInt(time[1], 10) * 60;\n\n      if (time[2]) {\n        seconds += parseInt(time[2], 10);\n      }\n\n      this.setState({\n        seconds: seconds\n      });\n\n      if (this.props.onChange) {\n        this.props.onChange(value);\n      }\n    }\n  }, {\n    key: 'renderClock',\n    value: function renderClock() {\n\n      var props = this.p;\n      var clock = props.children.filter(function (child) {\n        return child && child.props && child.props.isTimePickerClock;\n      })[0];\n\n      var clockProps = {\n        seconds: this.state.seconds,\n        showSecondsHand: true\n      };\n\n      if (clock) {\n        return _react2.default.cloneElement(clock, clockProps);\n      }\n\n      return _react2.default.createElement(_Clock2.default, clockProps);\n    }\n  }]);\n\n  return TimePicker;\n}(_reactClass2.default);\n\nexports.default = TimePicker;\n\n\nTimePicker.defaultProps = {\n  format: 'HH:mm:ss a',\n  theme: 'default',\n  isTimePicker: true\n};\n\nTimePicker.propTypes = {};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/TimeInput/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toTimeValue = exports.setCaretPosition = exports.getNewValue = exports.getSelectionEnd = exports.getSelectionStart = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _toMoment = require('../toMoment');\n\nvar _toMoment2 = _interopRequireDefault(_toMoment);\n\nvar _join = require('../join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _Clock = require('../Clock');\n\nvar _Clock2 = _interopRequireDefault(_Clock);\n\nvar _reactFlex = require('react-flex');\n\nvar _getSelectionStart = require('./getSelectionStart');\n\nvar _getSelectionStart2 = _interopRequireDefault(_getSelectionStart);\n\nvar _getSelectionEnd = require('./getSelectionEnd');\n\nvar _getSelectionEnd2 = _interopRequireDefault(_getSelectionEnd);\n\nvar _setCaretPosition2 = require('./setCaretPosition');\n\nvar _setCaretPosition3 = _interopRequireDefault(_setCaretPosition2);\n\nvar _getNewValue2 = require('./getNewValue');\n\nvar _getNewValue3 = _interopRequireDefault(_getNewValue2);\n\nvar _toTimeValue = require('./toTimeValue');\n\nvar _toTimeValue2 = _interopRequireDefault(_toTimeValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nexports.getSelectionStart = _getSelectionStart2.default;\nexports.getSelectionEnd = _getSelectionEnd2.default;\nexports.getNewValue = _getNewValue3.default;\nexports.setCaretPosition = _setCaretPosition3.default;\nexports.toTimeValue = _toTimeValue2.default;\n\nvar TimeInput = function (_Component) {\n  _inherits(TimeInput, _Component);\n\n  function TimeInput(props) {\n    _classCallCheck(this, TimeInput);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TimeInput).call(this, props));\n\n    var format = props.format || props.timeFormat;\n\n    if (format.indexOf('hh') != 0 && format.indexOf('HH') != 0) {\n      console.warn('Please start your time format with 2 digit hours.');\n    }\n\n    var hours24 = true;\n    var meridiem = format.indexOf('a') != -1 || format.indexOf('A') != -1;\n\n    if (format.indexOf('hh') == 0) {\n      hours24 = false;\n    }\n\n    var separator = props.separator || format && format.length > 2 ? format.charAt(2) : ':';\n    var hasSeconds = format.indexOf('ss') != -1;\n\n    if (hasSeconds && format.charAt(5) != separator) {\n      console.warn('Expected minutes-seconds separator to be same as hours-minutes separator. (at position 5)');\n    }\n\n    var defaultValue = '00' + separator + '00';\n\n    if (hasSeconds) {\n      defaultValue += separator + '00';\n    }\n    if (meridiem) {\n      defaultValue += ' am';\n    }\n\n    _this.state = {\n      valueRange: props.valueRange || 0,\n      separator: separator,\n      hours24: hours24,\n      meridiem: meridiem,\n      value: props.defaultValue || defaultValue\n    };\n    return _this;\n  }\n\n  _createClass(TimeInput, [{\n    key: 'render',\n    value: function render() {\n\n      var props = this.p = (0, _objectAssign2.default)({}, this.props);\n\n      props.value = this.state.value; //props.value !== undefined?\n      // props.value:\n      // this.state.value\n\n      return _react2.default.createElement('input', _extends({}, props, {\n        defaultValue: undefined,\n        value: props.value,\n        onKeyDown: this.onKeyDown,\n        onChange: this.onChange\n      }));\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(event) {\n      event.stopPropagation();\n    }\n  }, {\n    key: 'onKeyDown',\n    value: function onKeyDown(event) {\n      var _this2 = this;\n\n      var value = this.p.value;\n\n      var valueRange = this.state.valueRange;\n\n      if (this.props.onKeyDown) {\n        this.props.onKeyDown(event);\n      }\n\n      var range = this.getSelectedRange();\n      var separator = this.props.separator || this.state.separator || ':';\n\n      var _getNewValue = (0, _getNewValue3.default)({\n        range: range,\n        event: event,\n\n        circular: this.props.circular,\n        propagate: this.props.propagate,\n\n        oldValue: value,\n        separator: separator,\n        meridiem: this.state.meridiem,\n        hours24: this.state.hours24,\n        incrementNext: this.props.incrementNext\n\n      });\n\n      var newValue = _getNewValue.value;\n      var update = _getNewValue.update;\n      var caretPos = _getNewValue.caretPos;\n\n\n      var updateCaretPos = function updateCaretPos() {\n        if (caretPos != undefined) {\n          _this2.setCaretPosition(caretPos);\n        }\n      };\n\n      if (update || caretPos) {\n        event.preventDefault();\n      }\n\n      if (update) {\n        this.setValue(newValue, updateCaretPos);\n      } else {\n        (0, _raf2.default)(updateCaretPos);\n      }\n    }\n  }, {\n    key: 'getInput',\n    value: function getInput() {\n      return (0, _reactDom.findDOMNode)(this);\n    }\n  }, {\n    key: 'setCaretPosition',\n    value: function setCaretPosition(pos) {\n      var dom = this.getInput();\n      dom && (0, _setCaretPosition3.default)(dom, pos);\n    }\n  }, {\n    key: 'setValue',\n    value: function setValue(value, callback) {\n      // if (this.props.value === undefined){\n      this.setState({\n        now: Date.now(),\n        value: value\n      }, typeof callback == 'function' && callback);\n      // } else {\n      //   this.updateCallback = callback\n      // }\n\n      if (this.props.onChange) {\n        this.props.onChange(value);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (this.updateCallback) {\n        this.updateCallback();\n        this.updateCallback = null;\n      }\n    }\n  }, {\n    key: 'getSelectedRange',\n    value: function getSelectedRange() {\n      var dom = this.getInput();\n\n      return {\n        start: (0, _getSelectionStart2.default)(dom),\n        end: (0, _getSelectionEnd2.default)(dom)\n      };\n    }\n  }, {\n    key: 'getSelectedValue',\n    value: function getSelectedValue() {\n      var range = this.getSelectedRange();\n      var value = this.p.value;\n\n      return value.substring(range.start, range.end);\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(event) {\n      var value = event.target.value;\n    }\n  }, {\n    key: 'onTimeChange',\n    value: function onTimeChange(value) {\n      var time = value.split(':');\n\n      this.setState({\n        minutes: time[0] * 60 + time[1]\n      });\n    }\n  }, {\n    key: 'renderClock',\n    value: function renderClock() {\n\n      var props = this.p;\n      var clock = props.children.filter(function (child) {\n        return child && child.props && child.props.isTimePickerClock;\n      })[0];\n\n      var clockProps = {\n        time: this.state.minutes || props.date,\n        showSecondsHand: true\n      };\n\n      if (clock) {\n        return _react2.default.cloneElement(clock, clockProps);\n      }\n\n      return _react2.default.createElement(_Clock2.default, clockProps);\n    }\n  }]);\n\n  return TimeInput;\n}(_reactClass2.default);\n\nexports.default = TimeInput;\n\n\nTimeInput.defaultProps = {\n  theme: 'default',\n\n  circular: true,\n  propagate: true,\n  incrementNext: true\n};\n\nTimeInput.propTypes = {\n  format: _react.PropTypes.string,\n  value: function value(props, propName) {\n    if (props[propName] !== undefined) {\n      console.warn('Due to performance considerations, TimeInput will only be uncontrolled.');\n    }\n  }\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/Clock.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _reactNotifyResize = require('react-notify-resize');\n\nvar _join = require('./join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _toMoment = require('./toMoment');\n\nvar _toMoment2 = _interopRequireDefault(_toMoment);\n\nvar _reactStyleNormalizer = require('react-style-normalizer');\n\nvar _reactStyleNormalizer2 = _interopRequireDefault(_reactStyleNormalizer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MINUTES = Array.apply(null, new Array(60)).map(function (_, index) {\n  return index;\n});\n\nvar toUpperFirst = function toUpperFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : '';\n};\n\nvar transformStyle = (0, _reactStyleNormalizer2.default)({ transform: '' });\n\nvar rotateTickStyle = function rotateTickStyle(tick, _ref, totalSize, offset) {\n  var width = _ref.width;\n  var height = _ref.height;\n\n  var result = (0, _objectAssign2.default)({}, transformStyle);\n  var deg = tick * 6;\n\n  var transform = 'translate3d(' + -width / 2 + 'px, ' + -height / 2 + 'px, 0px) ' + ('rotate(' + deg + 'deg) translate3d(0px, -' + offset + 'px, 0px)');\n\n  Object.keys(result).forEach(function (name) {\n    result[name] = transform;\n  });\n\n  return result;\n};\n\nvar Clock = function (_Component) {\n  _inherits(Clock, _Component);\n\n  function Clock(props) {\n    _classCallCheck(this, Clock);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Clock).call(this, props));\n\n    var time = void 0;\n    var seconds = void 0;\n\n    if (props.defaultSeconds) {\n      seconds = props.defaultSeconds == true ? Date.now() / 1000 : +props.defaultSeconds;\n    }\n\n    if (props.defaultTime) {\n      time = props.defaultTime == true ? Date.now() : +props.defaultTime;\n    }\n\n    // if (time === undefined) {\n    //   seconds = 0\n    // }\n\n    _this.state = {};\n\n    if (seconds !== undefined) {\n      _this.state.seconds = seconds;\n      _this.state.defaultSeconds = seconds;\n    }\n\n    if (time !== undefined) {\n      _this.state.time = time;\n      _this.state.defaultTime = time;\n    }\n    return _this;\n  }\n\n  _createClass(Clock, [{\n    key: 'shouldRun',\n    value: function shouldRun(props) {\n      props = props || this.props;\n\n      if (props.run === false) {\n        return false;\n      }\n\n      return !!(props.defaultSeconds || props.defaultTime);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.shouldRun(this.props)) {\n        this.start();\n      }\n\n      if (this.props.size == 'auto') {\n        this.setState({\n          rendered: true\n        });\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var currentRun = this.shouldRun(this.props);\n      var nextRun = this.shouldRun(nextProps);\n\n      if (!currentRun && nextRun) {\n        this.start();\n      } else if (currentRun && !nextRun) {\n        this.stop();\n      }\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      this.startTime = Date.now ? Date.now() : +new Date();\n\n      this.run();\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n      }\n    }\n  }, {\n    key: 'run',\n    value: function run() {\n      var _this2 = this;\n\n      this.timeoutId = setTimeout(function () {\n        _this2.update();\n        _this2.run();\n      }, this.props.updateInterval || 1000);\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      var now = Date.now ? Date.now() : +new Date();\n      var diff = now - this.startTime;\n\n      var seconds = this.getPropsSeconds();\n\n      if (seconds !== undefined) {\n        this.setSeconds(seconds + diff / 1000);\n        return;\n      }\n\n      var time = this.getPropsTime();\n\n      this.setTime(time + diff);\n    }\n  }, {\n    key: 'setSeconds',\n    value: function setSeconds(seconds) {\n      this.setState({\n        seconds: seconds\n      });\n\n      if (this.props.onSecondsChange) {\n        this.props.onSecondsChange(seconds);\n      }\n    }\n  }, {\n    key: 'setTime',\n    value: function setTime(time) {\n      this.setState({\n        time: time\n      });\n\n      if (this.props.onTimeChange) {\n        this.props.onTimeChange(time);\n      }\n    }\n  }, {\n    key: 'getPropsTime',\n    value: function getPropsTime() {\n      return this.props.time || this.state.defaultTime || 0;\n    }\n  }, {\n    key: 'getPropsSeconds',\n    value: function getPropsSeconds() {\n      return this.props.seconds || this.state.defaultSeconds;\n    }\n  }, {\n    key: 'getSeconds',\n    value: function getSeconds() {\n      return this.state.seconds || this.getPropsSeconds();\n    }\n  }, {\n    key: 'getTime',\n    value: function getTime() {\n      return this.state.time || this.getPropsTime();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.p = (0, _objectAssign2.default)({}, this.props);\n      var size = props.size;\n\n      if (size == 'auto') {\n        this.ignoreRender = false;\n        if (!this.state.rendered) {\n          this.ignoreRender = true;\n        }\n\n        size = props.size = this.state.size;\n      }\n\n      var valueSeconds = this.getSeconds();\n      var valueTime = this.getTime();\n\n      var width = size;\n      var height = size;\n\n      var className = (0, _join2.default)(props.className, 'react-date-picker__clock', 'react-date-picker__clock--theme-' + props.theme);\n\n      var seconds = void 0;\n      var minutes = void 0;\n      var hours = void 0;\n\n      if (valueSeconds != undefined) {\n        seconds = Math.floor(valueSeconds % 60);\n        minutes = valueSeconds / 60 % 60;\n        hours = valueSeconds / 3600 % 24;\n      } else {\n        var mom = (0, _toMoment2.default)(valueTime);\n\n        seconds = mom.seconds();\n        minutes = mom.minutes() + seconds / 60;\n        hours = mom.hours() + minutes / 60;\n      }\n\n      hours *= 5;\n\n      var defaultStyle = {};\n\n      if (props.color) {\n        defaultStyle.borderColor = props.color;\n      }\n\n      var style = (0, _objectAssign2.default)(defaultStyle, props.style, {\n        width: width, height: height, borderWidth: props.borderWidth\n      });\n\n      var divProps = (0, _objectAssign2.default)({}, props);\n\n      delete divProps.bigTickHeight;\n      delete divProps.bigTickOffset;\n      delete divProps.bigTickWidth;\n      delete divProps.borderColor;\n      delete divProps.borderWidth;\n      delete divProps.centerOverlaySize;\n      delete divProps.centerSize;\n      delete divProps.cleanup;\n      delete divProps.defaultSeconds;\n      delete divProps.defaultTime;\n      delete divProps.handHeight;\n      delete divProps.handOffset;\n      delete divProps.handWidth;\n      delete divProps.hourHandDiff;\n      delete divProps.isDatePickerClock;\n      delete divProps.minuteHandDiff;\n      delete divProps.seconds;\n      delete divProps.secondHandDiff;\n      delete divProps.secondHandWidth;\n      delete divProps.showHoursHand;\n      delete divProps.showMinutesHand;\n      delete divProps.showSecondsHand;\n      delete divProps.showSmallTicks;\n      delete divProps.smallTickHeight;\n      delete divProps.smallTickOffset;\n      delete divProps.smallTickWidth;\n      delete divProps.theme;\n      delete divProps.time;\n      delete divProps.tickHeight;\n      delete divProps.tickOffset;\n      delete divProps.tickWidth;\n\n      if (typeof props.cleanup == 'function') {\n        props.cleanup(divProps);\n      }\n\n      return _react2.default.createElement(\n        'div',\n        _extends({}, divProps, {\n          className: className,\n          style: style\n        }),\n        this.renderCenter(),\n        this.renderHourHand(hours),\n        this.renderMinuteHand(minutes),\n        this.renderSecondHand(seconds),\n        this.renderCenterOverlay(),\n        MINUTES.map(this.renderTick),\n        this.props.size == 'auto' && _react2.default.createElement(_reactNotifyResize.NotifyResize, { notifyOnMount: true, onResize: this.onResize })\n      );\n    }\n  }, {\n    key: 'renderCenter',\n    value: function renderCenter() {\n      var props = this.props;\n      var centerSize = props.centerSize || (props.bigTickHeight || props.tickHeight) * 3;\n\n      return _react2.default.createElement('div', {\n        className: 'react-date-picker__clock-center',\n        style: { width: centerSize, height: centerSize }\n      });\n    }\n  }, {\n    key: 'renderCenterOverlay',\n    value: function renderCenterOverlay() {\n      var props = this.props;\n      var centerOverlaySize = props.centerOverlaySize || props.handWidth * 4;\n\n      return _react2.default.createElement('div', {\n        className: 'react-date-picker__clock-overlay',\n        style: {\n          width: centerOverlaySize,\n          height: centerOverlaySize,\n          borderWidth: props.handWidth\n        }\n      });\n    }\n  }, {\n    key: 'onResize',\n    value: function onResize(_ref2) {\n      var width = _ref2.width;\n      var height = _ref2.height;\n\n      if (width != height) {\n        console.warn('Clock width != height. Please make sure it\\'s a square.');\n      }\n\n      this.setState({\n        size: width\n      });\n    }\n  }, {\n    key: 'renderSecondHand',\n    value: function renderSecondHand(value) {\n      return this.props.showSecondsHand && this.renderHand('second', value);\n    }\n  }, {\n    key: 'renderMinuteHand',\n    value: function renderMinuteHand(value) {\n      return this.props.showMinutesHand && this.renderHand('minute', value);\n    }\n  }, {\n    key: 'renderHourHand',\n    value: function renderHourHand(value) {\n      return this.props.showHoursHand && this.renderHand('hour', value);\n    }\n  }, {\n    key: 'renderHand',\n    value: function renderHand(name, value) {\n      if (this.ignoreRender) {\n        return null;\n      }\n\n      var props = this.p;\n      var size = props.size;\n      var borderWidth = props.borderWidth;\n\n\n      var height = props[name + 'HandHeight'] || props.handHeight || size / 2 - props[name + 'HandDiff'];\n\n      var width = props[name + 'HandWidth'] || props.handWidth || props.tickWidth;\n      var offset = props[name + 'HandOffset'] || props.handOffset;\n\n      if (!offset && offset != 0) {\n        offset = 5;\n      }\n\n      var style = rotateTickStyle(value, { width: width, height: height }, size - borderWidth, height / 2 - offset);\n      style.width = width;\n      style.height = height;\n\n      if (props.color) {\n        style.background = props.color;\n      }\n\n      var className = (0, _join2.default)('react-date-picker__clock-hand', 'react-date-picker__clock-hand-' + name);\n\n      var renderName = 'render' + toUpperFirst(name) + 'Hand';\n\n      if (props[renderName]) {\n        return props[renderName]({\n          key: name,\n          className: className,\n          style: style\n        });\n      }\n\n      return _react2.default.createElement('div', { key: name, className: className, style: style });\n    }\n  }, {\n    key: 'renderTick',\n    value: function renderTick(tick) {\n      if (this.ignoreRender) {\n        return null;\n      }\n\n      var _p = this.p;\n      var size = _p.size;\n      var borderWidth = _p.borderWidth;\n      var tickWidth = _p.tickWidth;\n      var smallTickWidth = _p.smallTickWidth;\n      var bigTickWidth = _p.bigTickWidth;\n      var tickHeight = _p.tickHeight;\n      var smallTickHeight = _p.smallTickHeight;\n      var bigTickHeight = _p.bigTickHeight;\n      var tickOffset = _p.tickOffset;\n      var smallTickOffset = _p.smallTickOffset;\n      var bigTickOffset = _p.bigTickOffset;\n\n\n      var small = !!(tick % 5);\n      var sizeName = small ? 'small' : 'big';\n\n      if (small && !this.props.showSmallTicks) {\n        return false;\n      }\n\n      var className = (0, _join2.default)('react-date-picker__clock-tick', 'react-date-picker__clock-tick--' + sizeName);\n\n      var offset = small ? smallTickOffset || tickOffset : bigTickOffset || tickOffset;\n\n      var tWidth = small ? smallTickWidth || tickWidth : bigTickWidth || tickWidth;\n\n      var tHeight = small ? smallTickHeight || tickHeight : bigTickHeight || tickHeight;\n\n      var totalSize = size - borderWidth;\n      var style = rotateTickStyle(tick, {\n        width: tWidth,\n        height: tHeight\n      }, totalSize, totalSize / 2 - (tHeight / 2 + offset));\n\n      style.height = tHeight;\n      style.width = tWidth;\n\n      if (this.props.color) {\n        style.background = this.props.color;\n      }\n\n      if (this.props.renderTick) {\n        return this.props.renderTick({\n          tick: tick,\n          className: className,\n          style: style\n        });\n      }\n\n      return _react2.default.createElement('div', { key: tick, className: className, style: style });\n    }\n  }]);\n\n  return Clock;\n}(_reactClass2.default);\n\nexports.default = Clock;\n\n\nClock.defaultProps = {\n\n  centerSize: null,\n  centerOverlaySize: null,\n\n  size: 150,\n  theme: 'default',\n\n  showSecondsHand: true,\n  showHoursHand: true,\n  showMinutesHand: true,\n\n  handWidth: 2,\n  secondHandWidth: 1,\n  handOffset: 10,\n\n  hourHandDiff: 35,\n  minuteHandDiff: 25,\n  secondHandDiff: 10,\n\n  tickWidth: 1,\n  bigTickWidth: 2,\n  tickOffset: 2,\n\n  smallTickHeight: 6,\n  bigTickHeight: 10,\n\n  color: '',\n  borderWidth: 0,\n  showSmallTicks: true,\n  isDatePickerClock: true\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/TimeInput/getSelectionStart.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = getSelectionStart;\nvar document = global.document;\n\n//from http://javascript.nwbox.com/cursor_position/, but added the !window.getSelection check, which\n//is needed for newer versions of IE, which adhere to standards\nfunction getSelectionStart(o) {\n    if (o.createTextRange && !global.getSelection) {\n        var r = document.selection.createRange().duplicate();\n        r.moveEnd('character', o.value.length);\n        if (r.text == '') return o.value.length;\n        return o.value.lastIndexOf(r.text);\n    } else return o.selectionStart;\n}","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/TimeInput/getSelectionEnd.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = getSelectionEnd;\nvar document = global.document;\n\nfunction getSelectionEnd(o) {\n    if (o.createTextRange && !global.getSelection) {\n        var r = document.selection.createRange().duplicate();\n        r.moveStart('character', -o.value.length);\n        return r.text.length;\n    } else return o.selectionEnd;\n}","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/TimeInput/setCaretPosition.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setCaretPosition;\nfunction setCaretPosition(elem, caretPos) {\n  var start = caretPos;\n  var end = caretPos;\n\n  if (caretPos && (caretPos.start != undefined || caretPos.end != undefined)) {\n    start = caretPos.start || 0;\n    end = caretPos.end || start;\n  }\n\n  if (elem != null) {\n    if (elem.createTextRange) {\n      var range = elem.createTextRange();\n      range.moveStart('character', start);\n      range.moveEnd('character', end);\n      range.select();\n    } else {\n      elem.focus();\n      elem.setSelectionRange(start, end);\n    }\n  }\n}","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/TimeInput/getNewValue.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (_ref10) {\n  var oldValue = _ref10.oldValue;\n  var range = _ref10.range;\n  var event = _ref10.event;\n  var _ref10$separator = _ref10.separator;\n  var separator = _ref10$separator === undefined ? ':' : _ref10$separator;\n  var incrementNext = _ref10.incrementNext;\n  var circular = _ref10.circular;\n  var propagate = _ref10.propagate;\n  var hours24 = _ref10.hours24;\n  var meridiem = _ref10.meridiem;\n\n\n  var newChar = String.fromCharCode(event.which);\n  var start = range.start;\n  var end = range.end;\n  var key = event.key;\n\n\n  if (key == 'Delete' || key == 'Backspace') {\n    return getValueOnDelete({\n      key: key,\n      oldValue: oldValue,\n      range: range,\n      separator: separator,\n      meridiem: meridiem\n    });\n  }\n\n  var dir = ARROWS[key];\n\n  if (dir) {\n    return getValueOnDirection({\n      hours24: hours24,\n      meridiem: meridiem,\n      dir: dir,\n      oldValue: oldValue,\n      range: range,\n      circular: circular,\n      propagate: propagate,\n      separator: separator,\n      incrementNext: incrementNext\n    });\n  }\n\n  if (key == 'Unidentified' && newChar * 1 == newChar) {\n    return getValueOnNumber({\n      num: newChar * 1,\n      circular: circular,\n      separator: separator,\n      oldValue: oldValue,\n      range: range,\n      meridiem: meridiem\n    });\n  }\n\n  return {\n    value: oldValue\n  };\n};\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _toTimeValue = require('./toTimeValue');\n\nvar _toTimeValue2 = _interopRequireDefault(_toTimeValue);\n\nvar _leftPad = require('../utils/leftPad');\n\nvar _leftPad2 = _interopRequireDefault(_leftPad);\n\nvar _clamp = require('../utils/clamp');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar removeAt = function removeAt(_ref) {\n  var value = _ref.value;\n  var index = _ref.index;\n  var _ref$len = _ref.len;\n  var len = _ref$len === undefined ? 1 : _ref$len;\n\n  return value.substring(0, index) + value.substring(index + len);\n};\n\nvar replaceAt = function replaceAt(_ref2) {\n  var value = _ref2.value;\n  var index = _ref2.index;\n  var _ref2$len = _ref2.len;\n  var len = _ref2$len === undefined ? 1 : _ref2$len;\n  var str = _ref2.str;\n\n  return value.substring(0, index) + str + value.substring(index + len);\n};\n\nvar replaceBetween = function replaceBetween(_ref3) {\n  var value = _ref3.value;\n  var start = _ref3.start;\n  var end = _ref3.end;\n  var str = _ref3.str;\n\n  return (value.substring(0, start) || '') + str + (value.substring(end) || '');\n};\n\nvar toggleMeridiem = function toggleMeridiem(meridiem) {\n  return {\n    am: 'pm',\n    AM: 'PM',\n    pm: 'am',\n    PM: 'pm'\n  }[meridiem];\n};\n\nvar getValueOnDelete = function getValueOnDelete(_ref4) {\n  var oldValue = _ref4.oldValue;\n  var range = _ref4.range;\n  var key = _ref4.key;\n  var separator = _ref4.separator;\n  var meridiem = _ref4.meridiem;\n  var start = range.start;\n  var end = range.end;\n\n\n  var selectedValue = oldValue.substring(start, end);\n\n  var value = void 0;\n\n  if (selectedValue) {\n\n    var replacement = selectedValue.split('').map(function (c) {\n      if (c == separator || c == ' ') {\n        return c;\n      }\n\n      if (meridiem && c * 1 != c) {\n        return c == 'p' ? 'a' : c == 'P' ? 'A' : c;\n      }\n\n      return 0;\n    }).join('');\n\n    value = replaceBetween({ value: oldValue, start: start, end: end, str: replacement });\n\n    return {\n      value: value,\n      update: value != oldValue,\n      caretPos: key == 'Backspace' ? start : end\n    };\n  } else {\n\n    var back = key == 'Backspace';\n    var index = start + (back ? -1 : 0);\n    var caretPos = start + (back ? -1 : 1);\n\n    if (index < 0) {\n      return {\n        value: oldValue,\n        update: false\n      };\n    }\n\n    var char = oldValue[index];\n\n    value = oldValue;\n\n    var _replacement = char == separator || char == ' ' ? char : 0;\n\n    if (char && char * 1 != char && _replacement === 0 && meridiem) {\n      if (char == 'p') {\n        _replacement = 'a';\n      } else if (char == 'P') {\n        _replacement = 'A';\n      } else if (char == 'M' || char == 'm' || char == 'a' || char == 'A') {\n        _replacement = char;\n      }\n    }\n\n    value = replaceAt({ value: oldValue, index: index, str: _replacement });\n\n    return {\n      update: value != oldValue,\n      value: value,\n      caretPos: caretPos\n    };\n  }\n};\n\nvar ARROWS = {\n  ArrowUp: 1,\n  ArrowDown: -1,\n  PageUp: 10,\n  PageDown: -10\n};\n\nvar TIME_PARTS = {\n  24: [{ start: 0, end: 2, name: 'hours', max: 23 }, { start: 3, end: 5, name: 'minutes', max: 59 }, { start: 6, end: 8, name: 'seconds', max: 59 }],\n  12: [{ start: 0, end: 2, name: 'hours', max: 12, min: 1 }, { start: 3, end: 5, name: 'minutes', max: 59 }, { start: 6, end: 8, name: 'seconds', max: 59 }]\n};\n\nvar getActiveTimePartIndex = function getActiveTimePartIndex(_ref5) {\n  var value = _ref5.value;\n  var timeValue = _ref5.timeValue;\n  var separator = _ref5.separator;\n  var range = _ref5.range;\n  var hours24 = _ref5.hours24;\n  var meridiem = _ref5.meridiem;\n  var start = range.start;\n\n  var timeParts = TIME_PARTS[hours24 ? 24 : 12];\n\n  var partIndex = 0;\n  var currentPart = void 0;\n\n  while (currentPart = timeParts[partIndex]) {\n\n    if (currentPart.name == 'seconds' && timeValue && !timeValue.seconds) {\n      return 4; //the index of the meridiem\n    }\n    if (start >= currentPart.start && start <= currentPart.end) {\n      return partIndex;\n    }\n\n    partIndex++;\n  }\n\n  return 4;\n};\n\nvar getTimePartAt = function getTimePartAt(index, _ref6) {\n  var hours24 = _ref6.hours24;\n\n  return (0, _objectAssign2.default)({}, TIME_PARTS[hours24 ? 24 : 12][index]);\n};\n\nvar getActiveTimePart = function getActiveTimePart(_ref7) {\n  var value = _ref7.value;\n  var timeValue = _ref7.timeValue;\n  var separator = _ref7.separator;\n  var range = _ref7.range;\n  var hours24 = _ref7.hours24;\n  var meridiem = _ref7.meridiem;\n\n\n  var index = getActiveTimePartIndex({ value: value, timeValue: timeValue, separator: separator, range: range, hours24: hours24 });\n\n  if (index == 4 && meridiem) {\n    var timePart = {\n      start: 6, end: 8, name: 'meridiem'\n    };\n\n    if (timeValue.seconds) {\n      timePart.start += 3;\n      timePart.end += 3;\n    }\n\n    return timePart;\n  }\n\n  return getTimePartAt(index, { hours24: hours24 });\n};\n\nvar getValueOnDirection = function getValueOnDirection(_ref8) {\n  var oldValue = _ref8.oldValue;\n  var range = _ref8.range;\n  var separator = _ref8.separator;\n  var dir = _ref8.dir;\n  var incrementNext = _ref8.incrementNext;\n  var circular = _ref8.circular;\n  var propagate = _ref8.propagate;\n  var hours24 = _ref8.hours24;\n  var meridiem = _ref8.meridiem;\n  var start = range.start;\n  var end = range.end;\n\n\n  var value = void 0;\n\n  var timeValue = (0, _toTimeValue2.default)({ value: oldValue, separator: separator, meridiem: meridiem });\n  var activeTimePart = getActiveTimePart({ value: oldValue, timeValue: timeValue, separator: separator, range: range, hours24: hours24, meridiem: meridiem });\n\n  if (activeTimePart.name != 'meridiem') {\n    timeValue[activeTimePart.name] = dir + timeValue[activeTimePart.name] * 1;\n  }\n\n  var hours = timeValue.hours;\n  var minutes = timeValue.minutes;\n  var seconds = timeValue.seconds;\n\n\n  var toggleMeridiemValue = false;\n\n  hours *= 1;\n  minutes *= 1;\n\n  if (seconds) {\n    seconds *= 1;\n  }\n\n  if (activeTimePart.name != 'meridiem') {\n\n    if (seconds && (seconds > 59 || seconds < 0)) {\n\n      if (propagate) {\n        minutes += seconds > 59 ? 1 : -1;\n      }\n\n      if (circular) {\n        seconds %= 60;\n\n        if (seconds < 0) {\n          seconds = 60 + seconds;\n        }\n      }\n    }\n\n    if (minutes && (minutes > 59 || minutes < 0)) {\n      if (propagate) {\n        hours += minutes > 59 ? 1 : -1;\n      }\n\n      if (circular) {\n        minutes %= 60;\n\n        if (minutes < 0) {\n          minutes = 60 + minutes;\n        }\n      }\n    }\n\n    if (meridiem && circular && (hours > 12 || hours < 1)) {\n      toggleMeridiemValue = true;\n    }\n  }\n\n  hours = (0, _leftPad2.default)((0, _clamp.clampHour)(hours * 1, { circular: circular, max: activeTimePart.max, min: activeTimePart.min }));\n  minutes = (0, _leftPad2.default)((0, _clamp.clampMinute)(minutes * 1, { circular: circular }));\n\n  if (seconds != undefined) {\n    seconds = (0, _leftPad2.default)((0, _clamp.clampSecond)(seconds * 1, { circular: circular }));\n  }\n\n  value = hours + separator + minutes;\n\n  if (seconds) {\n    value += separator + seconds;\n  }\n\n  if (activeTimePart.name == 'meridiem') {\n    toggleMeridiemValue = true;\n  }\n\n  if (meridiem) {\n    value += ' ' + (toggleMeridiemValue ? toggleMeridiem(timeValue.meridiem) : timeValue.meridiem);\n  }\n\n  return {\n    value: value,\n    caretPos: activeTimePart || range.start,\n    update: oldValue != value\n  };\n};\n\nvar getValueOnNumber = function getValueOnNumber(_ref9) {\n  var oldValue = _ref9.oldValue;\n  var num = _ref9.num;\n  var range = _ref9.range;\n  var separator = _ref9.separator;\n  var circular = _ref9.circular;\n  var hours24 = _ref9.hours24;\n  var meridiem = _ref9.meridiem;\n\n  var activeTimePartIndex = getActiveTimePartIndex({ value: oldValue, separator: separator, range: range, hours24: hours24 });\n  var activeTimePart = getTimePartAt(activeTimePartIndex, { hours24: hours24 });\n\n  if (activeTimePart && range.start == range.end && activeTimePart.end == range.end) {\n    activeTimePart = getTimePartAt(activeTimePartIndex + 1, { hours24: hours24 });\n  }\n\n  if (!activeTimePart) {\n    return {\n      value: value,\n      update: false\n    };\n  }\n\n  var name = activeTimePart.name;\n  var timeParts = (0, _toTimeValue2.default)({ value: oldValue, separator: separator, meridiem: meridiem });\n\n  var timePartValue = timeParts[name] + '';\n\n  var caretPos = void 0;\n\n  if (range.start <= activeTimePart.start) {\n    var maxFirstChar = (activeTimePart.max + '').charAt(0) * 1;\n\n    caretPos = range.start + (num > maxFirstChar ? 3 : range.start < activeTimePart.start ? 2 : 1);\n    timeParts[name] = num > maxFirstChar ? '0' + num : num + timeParts[name].charAt(1);\n  } else {\n    caretPos = range.start + 2;\n    timeParts[name] = (0, _clamp.clampNamed)(name, replaceAt({ value: timePartValue, index: 1, str: num }) * 1, { circular: circular });\n  }\n\n  var hours = timeParts.hours;\n  var minutes = timeParts.minutes;\n  var seconds = timeParts.seconds;\n\n\n  var value = hours + separator + minutes;\n\n  if (seconds) {\n    value += separator + seconds;\n  }\n\n  if (meridiem) {\n    value += ' ' + timeParts.meridiem;\n  }\n\n  return {\n    value: value,\n    caretPos: caretPos,\n    update: true\n  };\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/TimeInput/toTimeValue.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _leftPad = require('../utils/leftPad');\n\nvar _leftPad2 = _interopRequireDefault(_leftPad);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (_ref) {\n  var value = _ref.value;\n  var _ref$separator = _ref.separator;\n  var separator = _ref$separator === undefined ? ':' : _ref$separator;\n  var meridiem = _ref.meridiem;\n\n  var parts = value.split(separator);\n\n  var hours = parts[0];\n  var minutes = parts[1];\n  var seconds = parts[2];\n\n  var result = { hours: hours, minutes: minutes };\n\n  if (typeof seconds == 'string' && seconds.length) {\n    result.seconds = seconds;\n  }\n\n  if (meridiem && seconds !== undefined && seconds * 1 != seconds) {\n    result.seconds = (0, _leftPad2.default)(parseInt(seconds, 10));\n  }\n\n  if (meridiem && seconds === undefined && minutes * 1 != minutes) {\n    result.minutes = (0, _leftPad2.default)(parseInt(minutes, 10));\n  }\n\n  if (meridiem) {\n    (function () {\n      var meridiems = ['am', 'AM', 'pm', 'PM'];\n      var indexes = meridiems.map(function (m) {\n        return (seconds || minutes).indexOf(m);\n      });\n\n      indexes.forEach(function (indexOf, i) {\n        if (indexOf != -1) {\n          result.meridiem = meridiems[i];\n        }\n      });\n    })();\n  }\n\n  return result;\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/utils/leftPad.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (str) {\n\n  if (typeof str == 'string' && str.length < 2) {\n    return str.length ? '0' + str : '00';\n  }\n\n  if (typeof str == 'number') {\n    return str < 10 ? '0' + str : str + '';\n  }\n\n  return str;\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/utils/clamp.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar clamp = function clamp(value, _ref) {\n  var min = _ref.min;\n  var max = _ref.max;\n  var _ref$circular = _ref.circular;\n  var circular = _ref$circular === undefined ? true : _ref$circular;\n\n  return value < min ? circular ? max : min : value > max ? circular ? min : max : value;\n};\n\nvar clampHour = exports.clampHour = function clampHour(value, _ref2) {\n  var max = _ref2.max;\n  var min = _ref2.min;\n  var circular = _ref2.circular;\n\n  return clamp(value, { min: min || 0, max: max || 23, circular: circular });\n};\n\nvar clampMinute = exports.clampMinute = function clampMinute(value, _ref3) {\n  var circular = _ref3.circular;\n\n  return clamp(value, { min: 0, max: 59, circular: circular });\n};\n\nvar clampSecond = exports.clampSecond = function clampSecond(value, _ref4) {\n  var circular = _ref4.circular;\n\n  return clamp(value, { min: 0, max: 59, circular: circular });\n};\n\nvar MAP = {\n  second: clampSecond,\n  seconds: clampSecond,\n  minute: clampMinute,\n  minutes: clampMinute,\n  hour: clampHour,\n  hours: clampHour\n};\n\nvar clampNamed = exports.clampNamed = function clampNamed(name, value, _ref5) {\n  var circular = _ref5.circular;\n  var max = _ref5.max;\n  var min = _ref5.min;\n\n  return MAP[name](value, { circular: circular, max: max, min: min });\n};\n\nexports.default = clamp;","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/TransitionView.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _join = require('./join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _toMoment2 = require('./toMoment');\n\nvar _toMoment3 = _interopRequireDefault(_toMoment2);\n\nvar _forwardTime = require('./utils/forwardTime');\n\nvar _forwardTime2 = _interopRequireDefault(_forwardTime);\n\nvar _getTransitionEnd = require('./getTransitionEnd');\n\nvar _getTransitionEnd2 = _interopRequireDefault(_getTransitionEnd);\n\nvar _assignDefined = require('./assignDefined');\n\nvar _assignDefined2 = _interopRequireDefault(_assignDefined);\n\nvar _MonthView = require('./MonthView');\n\nvar _NavBar = require('./NavBar');\n\nvar _NavBar2 = _interopRequireDefault(_NavBar);\n\nvar _reactFlex = require('react-flex');\n\nvar _times = require('./utils/times');\n\nvar _times2 = _interopRequireDefault(_times);\n\nvar _reactInlineBlock = require('react-inline-block');\n\nvar _reactInlineBlock2 = _interopRequireDefault(_reactInlineBlock);\n\nvar _reactStyleNormalizer = require('react-style-normalizer');\n\nvar _reactStyleNormalizer2 = _interopRequireDefault(_reactStyleNormalizer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar renderHiddenNav = function renderHiddenNav(props) {\n  return _react2.default.createElement(_reactInlineBlock2.default, _extends({}, props, { style: { visibility: 'hidden' } }));\n};\n\nvar joinFunctions = function joinFunctions(a, b) {\n  if (a && b) {\n    return function () {\n      a.apply(undefined, arguments);\n      b.apply(undefined, arguments);\n    };\n  }\n\n  return a || b;\n};\n\nvar TRANSITION_DURATION = '0.4s';\n\nvar TransitionView = function (_Component) {\n  _inherits(TransitionView, _Component);\n\n  function TransitionView(props) {\n    _classCallCheck(this, TransitionView);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TransitionView).call(this, props));\n\n    var child = _react2.default.Children.toArray(_this.props.children)[0];\n    var childProps = child.props;\n\n    var viewDate = props.viewDate || props.defaultViewDate || props.defaultDate || props.date || childProps.viewDate || childProps.defaultViewDate || childProps.defaultDate || childProps.date;\n\n    var dateFormat = props.dateFormat || childProps.dateFormat;\n    var locale = props.locale || childProps.locale;\n\n    _this.state = {\n      rendered: false,\n      viewDate: _this.toMoment(viewDate, { dateFormat: dateFormat, locale: locale })\n    };\n    return _this;\n  }\n\n  _createClass(TransitionView, [{\n    key: 'toMoment',\n    value: function toMoment(value, props) {\n      props = props || this.props;\n\n      return (0, _toMoment3.default)(value, {\n        locale: props.locale,\n        dateFormat: props.dateFormat\n      });\n    }\n  }, {\n    key: 'format',\n    value: function format(mom, props) {\n      props = props || this.props;\n      return mom.format(props.dateFormat);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setState({\n        rendered: true\n      });\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.viewDate) {\n        // this is in order to transition when the prop changes\n        // if we were to simply do setState({ viewDate }) it wouldn't have had a transition\n        this.transitionTo(nextProps.viewDate, nextProps);\n      }\n    }\n  }, {\n    key: 'transitionTo',\n    value: function transitionTo(date, props) {\n      props = props || this.props;\n\n      var dateMoment = this.toMoment(date, props);\n\n      this.doTransition(dateMoment);\n    }\n  }, {\n    key: 'getViewChild',\n    value: function getViewChild() {\n      return _react2.default.Children.toArray(this.props.children).filter(function (c) {\n        return c && c.props && c.props.isDatePicker;\n      })[0];\n    }\n  }, {\n    key: 'prepareChildProps',\n    value: function prepareChildProps(child, extraProps) {\n      if (this.view) {\n        return this.view.p;\n      }\n\n      child = child || this.getViewChild();\n\n      return (0, _objectAssign2.default)({}, child.props, extraProps);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props;\n\n      var child = this.child = this.getViewChild();\n\n      var viewDate = this.state.viewDate || props.viewMoment || props.viewDate;\n\n      var renderedChildProps = this.renderedChildProps = this.prepareChildProps(child, (0, _assignDefined2.default)({\n        viewDate: viewDate\n      }));\n\n      viewDate = this.state.viewDate || renderedChildProps.viewMoment || renderedChildProps.viewDate;\n\n      if (!this.state.transition) {\n        this.viewDate = viewDate;\n      }\n\n      var multiView = !!(child.props.size && child.props.size >= 2);\n\n      var onViewDateChange = joinFunctions(this.onViewDateChange, props.onViewDateChange);\n\n      // TODO make transition view pass all props, as is to child component\n      var newProps = {\n        key: 'picker',\n        ref: function ref(v) {\n          _this2.view = v;\n        },\n\n        viewDate: this.viewDate,\n        onViewDateChange: onViewDateChange,\n        navigation: multiView,\n        constrainActiveInView: props.constrainActiveInView,\n\n        className: (0, _join2.default)(child.props.className, 'react-date-picker__center')\n      };\n\n      // only pass those down if they have been specified\n      // as props on this TransitionView\n      (0, _assignDefined2.default)(newProps, {\n        // tabIndex: -1,\n        range: props.range,\n        date: props.date,\n        activeDate: props.activeDate,\n        footer: false,\n        insideField: props.insideField,\n\n        defaultRange: props.defaultRange,\n        defaultDate: props.defaultDate,\n        defaultActiveDate: props.defaultActiveDate,\n\n        // this is here in order to ensure time changes are reflected\n        // when using a TransitionView inside a DateField\n        onTimeChange: props.onTimeChange,\n        onClockInputBlur: props.onClockInputBlur,\n        onClockInputFocus: props.onClockInputFocus,\n        onClockEnterKey: props.onClockEnterKey,\n        onClockEscapeKey: props.onClockEscapeKey,\n        showClock: props.showClock,\n\n        tabIndex: props.tabIndex,\n\n        dateFormat: props.dateFormat,\n        locale: props.locale,\n        theme: props.theme,\n\n        minDate: props.minDate,\n        maxDate: props.maxDate,\n        onKeyDown: this.onKeyDown,\n        onBlur: this.onBlur\n      });\n\n      if (props.onChange) {\n        newProps.onChange = joinFunctions(props.onChange, renderedChildProps.onChange);\n      }\n      if (props.onRangeChange) {\n        newProps.onRangeChange = joinFunctions(props.onRangeChange, renderedChildProps.onRangeChange);\n      }\n\n      if (props.onActiveDateChange) {\n        newProps.onActiveDateChange = joinFunctions(props.onActiveDateChange, renderedChildProps.onActiveDateChange);\n      }\n\n      if (this.state.transition) {\n        this.transitionDurationStyle = (0, _reactStyleNormalizer2.default)({\n          transitionDuration: props.transitionDuration || TRANSITION_DURATION\n        });\n\n        newProps.style = (0, _objectAssign2.default)({}, child.props.style, this.transitionDurationStyle);\n\n        newProps.className = (0, _join2.default)(newProps.className, 'react-date-picker--transition', 'react-date-picker--transition-' + (this.state.transition == -1 ? 'left' : 'right'));\n      }\n\n      var navBar = void 0;\n\n      var navBarProps = {\n        minDate: props.minDate || renderedChildProps.minDate,\n        maxDate: props.maxDate || renderedChildProps.maxDate,\n        enableHistoryView: props.enableHistoryView === undefined ? renderedChildProps.enableHistoryView : props.enableHistoryView,\n        secondary: true,\n        viewDate: this.nextViewDate || this.viewDate,\n        onViewDateChange: onViewDateChange,\n        multiView: multiView\n      };\n\n      if (props.navigation) {\n        navBar = this.renderNavBar((0, _objectAssign2.default)({}, navBarProps, { mainNavBar: true }));\n      }\n\n      var footer = void 0;\n\n      if (props.footer) {\n        footer = (0, _MonthView.renderFooter)(props, props.insideField ? props : this.view);\n      }\n\n      if (multiView) {\n        newProps.renderNavBar = this.renderMultiViewNavBar.bind(this, navBarProps);\n      }\n\n      var clone = _react2.default.cloneElement(child, newProps);\n\n      var flexProps = (0, _objectAssign2.default)({}, props);\n\n      delete flexProps.constrainActiveInView;\n      delete flexProps.enableHistoryView;\n      delete flexProps.focusOnNavMouseDown;\n      delete flexProps.focusOnTransitionEnd;\n      delete flexProps.footerClearDate;\n      delete flexProps.isDatePicker;\n      delete flexProps.navigation;\n      delete flexProps.onTransitionEnd;\n      delete flexProps.onTransitionStart;\n      delete flexProps.theme;\n\n      return _react2.default.createElement(\n        _reactFlex.Flex,\n        _extends({\n          column: true,\n          inline: true,\n          wrap: false,\n          alignItems: 'stretch'\n        }, flexProps, {\n          className: (0, _join2.default)(props.className, 'react-date-picker__transition-month-view', props.theme && 'react-date-picker__transition-month-view--theme-' + props.theme)\n        }),\n        navBar,\n        _react2.default.createElement(\n          _reactFlex.Flex,\n          { inline: true, row: true, style: { position: 'relative' } },\n          this.renderAt(-1, { multiView: multiView, navBarProps: navBarProps }),\n          clone,\n          this.renderAt(1, { multiView: multiView, navBarProps: navBarProps })\n        ),\n        footer\n      );\n    }\n  }, {\n    key: 'tryNavBarKeyDown',\n    value: function tryNavBarKeyDown(event) {\n      if (this.navBar && this.navBar.getHistoryView) {\n        var historyView = this.navBar.getHistoryView();\n\n        if (historyView && historyView.onKeyDown) {\n          historyView.onKeyDown(event);\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: 'onKeyDown',\n    value: function onKeyDown(event) {\n      var initialKeyDown = this.child.onKeyDown;\n\n      if (this.tryNavBarKeyDown(event)) {\n        return false;\n      }\n\n      if (initialKeyDown) {\n        return initialKeyDown(event);\n      }\n    }\n  }, {\n    key: 'isHistoryViewVisible',\n    value: function isHistoryViewVisible() {\n      if (this.navBar && this.navBar.isHistoryViewVisible) {\n        return this.navBar.isHistoryViewVisible();\n      }\n\n      return false;\n    }\n  }, {\n    key: 'showHistoryView',\n    value: function showHistoryView() {\n      if (this.navBar) {\n        this.navBar.showHistoryView();\n      }\n    }\n  }, {\n    key: 'hideHistoryView',\n    value: function hideHistoryView() {\n      if (this.navBar) {\n        this.navBar.hideHistoryView();\n      }\n    }\n  }, {\n    key: 'onBlur',\n    value: function onBlur(event) {\n      var initialBlur = this.child.onBlur;\n\n      this.hideHistoryView();\n\n      if (initialBlur) {\n        initialBlur(event);\n      }\n\n      return true;\n    }\n\n    /**\n     * This method is only called when rendering the NavBar of the MonthViews\n     * that are not on the first row of the MultiMonthView\n     *\n     * @param  {Object} navBarProps\n     * @param  {Object} config\n     * @return {ReactNode}\n     */\n\n  }, {\n    key: 'renderMultiViewNavBar',\n    value: function renderMultiViewNavBar(navBarProps, config) {\n      var index = config.index;\n\n      var count = this.child.props.perRow;\n\n      if (index >= count) {\n        var viewDate = this.toMoment(navBarProps.viewDate).add(index, 'month');\n\n        return _react2.default.createElement(_NavBar2.default, _extends({}, navBarProps, {\n          renderNavNext: renderHiddenNav,\n          renderNavPrev: renderHiddenNav,\n          onViewDateChange: null,\n          viewDate: this.toMoment(viewDate)\n        }));\n      }\n\n      return null;\n    }\n  }, {\n    key: 'renderNavBar',\n    value: function renderNavBar(navBarProps) {\n      var _this3 = this;\n\n      navBarProps = (0, _objectAssign2.default)({}, navBarProps);\n\n      if (navBarProps.mainNavBar) {\n        navBarProps.ref = function (navBar) {\n          _this3.navBar = navBar;\n        };\n        navBarProps.onMouseDown = this.onNavMouseDown;\n      }\n\n      var props = this.props;\n      var _navBarProps = navBarProps;\n      var multiView = _navBarProps.multiView;\n\n\n      var navBar = _react2.default.Children.toArray(props.children).filter(function (c) {\n        return c && c.props && c.props.isDatePickerNavBar;\n      })[0];\n\n      var newProps = navBarProps;\n\n      if (navBar) {\n        newProps = (0, _objectAssign2.default)({}, navBarProps, navBar.props);\n\n        // have viewDate & onViewDateChange win over initial navBar.props\n        newProps.viewDate = navBarProps.viewDate;\n        newProps.onViewDateChange = navBarProps.onViewDateChange;\n      }\n\n      if (multiView) {\n        var _ret = function () {\n          var count = _this3.child.props.perRow;\n          var viewSize = _this3.getViewSize();\n\n          var bars = (0, _times2.default)(count).map(function (index) {\n            var onUpdate = function onUpdate(dateMoment, dir) {\n              var mom = _this3.toMoment(newProps.viewDate);\n\n              if (Math.abs(dir) == 1) {\n                mom.add(dir * viewSize, 'month');\n              } else {\n                var sign = dir > 0 ? 1 : -1;\n\n                mom.add(sign, 'year');\n              }\n\n              return mom;\n            };\n\n            var barProps = (0, _objectAssign2.default)({}, newProps, {\n              onUpdate: onUpdate,\n              renderNavNext: renderHiddenNav,\n              renderNavPrev: renderHiddenNav,\n              viewDate: _this3.toMoment(newProps.viewDate).add(index, 'month')\n            });\n\n            if (index == 0) {\n              delete barProps.renderNavPrev;\n            }\n            if (index == count - 1) {\n              delete barProps.renderNavNext;\n            }\n\n            return _react2.default.createElement(_NavBar2.default, _extends({ flex: true }, barProps));\n          });\n\n          return {\n            v: _react2.default.createElement(_reactFlex.Flex, { row: true, children: bars })\n          };\n        }();\n\n        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n      }\n\n      return navBar ? _react2.default.cloneElement(navBar, newProps) : _react2.default.createElement(_NavBar2.default, newProps);\n    }\n  }, {\n    key: 'getViewSize',\n    value: function getViewSize() {\n      return this.view && this.view.getViewSize ? this.view.getViewSize() || 1 : 1;\n    }\n  }, {\n    key: 'renderAt',\n    value: function renderAt(index, _ref) {\n      var multiView = _ref.multiView;\n      var navBarProps = _ref.navBarProps;\n\n      if (!this.state.rendered || !this.view) {\n        // || this.state.prepareTransition != -index ) {\n        return null;\n      }\n\n      var viewSize = this.getViewSize();\n      var viewDiff = viewSize * index;\n\n      var childProps = this.child.props;\n      var renderedProps = this.renderedChildProps;\n\n      var viewDate = this.toMoment(this.viewDate).add(viewDiff, 'month');\n\n      if (this.nextViewDate && this.state.prepareTransition == -index) {\n        // we're transitioning to this viewDate, so make sure\n        // it renders the date we'll need at the end of the transition\n        viewDate = this.nextViewDate;\n      }\n\n      var date = renderedProps.date || renderedProps.moment;\n\n      if (this.state.transitionTime) {\n        date = (0, _forwardTime2.default)(this.state.transitionTime, this.toMoment(date));\n        // console.log('date.format', date.format('HH:mm'));\n      }\n\n      var newProps = (0, _objectAssign2.default)({\n        date: date,\n        readOnly: true,\n        range: renderedProps.range,\n        activeDate: renderedProps.activeDate,\n        dateFormat: renderedProps.dateFormat,\n        locale: renderedProps.locale,\n        tabIndex: -1,\n        clockTabIndex: -1,\n        navigation: multiView,\n        viewDate: viewDate,\n        key: index,\n        footer: false,\n        className: (0, _join2.default)(childProps.className, 'react-date-picker__' + (index == -1 ? 'prev' : 'next'))\n      });\n\n      (0, _assignDefined2.default)(newProps, {\n        showClock: renderedProps.showClock,\n        minDate: renderedProps.minDate,\n        maxDate: renderedProps.maxDate\n      });\n\n      if (this.state.transition && this.state.transition != index) {\n        newProps.style = (0, _objectAssign2.default)({}, childProps.style, this.transitionDurationStyle);\n        newProps.className = (0, _join2.default)(newProps.className, 'react-date-picker--transition', 'react-date-picker--transition-' + (this.state.transition == -1 ? 'left' : 'right'));\n      }\n\n      if (multiView) {\n        newProps.renderNavBar = this.renderMultiViewNavBar.bind(this, (0, _objectAssign2.default)({}, navBarProps, { viewDate: viewDate, onViewDateChange: null }));\n      }\n\n      return _react2.default.cloneElement(this.child, newProps);\n    }\n  }, {\n    key: 'getView',\n    value: function getView() {\n      return this.view;\n    }\n  }, {\n    key: 'isInView',\n    value: function isInView() {\n      var _view;\n\n      return (_view = this.view).isInView.apply(_view, arguments);\n    }\n  }, {\n    key: 'onViewDateChange',\n    value: function onViewDateChange(dateString, _ref2) {\n      var dateMoment = _ref2.dateMoment;\n\n      this.doTransition(dateMoment);\n    }\n  }, {\n    key: 'doTransition',\n    value: function doTransition(dateMoment) {\n      var _this4 = this;\n\n      if (this.state.transition) {\n        // this.nextViewDate = dateMoment\n        return;\n      }\n      // to protect of null, which will default to current date\n      dateMoment = this.toMoment(dateMoment);\n\n      var newMoment = this.toMoment(dateMoment).startOf('month');\n      var viewMoment = this.toMoment(this.viewDate).startOf('month');\n\n      if (newMoment.format('YYYY-MM') == viewMoment.format('YYYY-MM')) {\n        return;\n      }\n\n      var navNext = newMoment.isAfter(viewMoment);\n      var transition = navNext ? -1 : 1;\n      var viewSize = this.getViewSize();\n\n      if (Math.abs(viewSize) > 1) {\n        var temp = this.toMoment(viewMoment).add(viewSize * -transition, 'month');\n\n        if (navNext) {\n          dateMoment = dateMoment.isAfter(temp) ? dateMoment : temp;\n        } else {\n          dateMoment = dateMoment.isBefore(temp) ? dateMoment : temp;\n        }\n      }\n\n      var transitionTime = this.props.getTransitionTime ? this.props.getTransitionTime() : null;\n\n      this.setState({\n        transitionTime: transitionTime,\n        prepareTransition: transition\n      }, function () {\n        setTimeout(function () {\n          // in order to allow this.view.p to update\n          if (!(0, _reactDom.findDOMNode)(_this4.view)) {\n            return;\n          }\n\n          _this4.nextViewDate = dateMoment;\n\n          _this4.addTransitionEnd();\n\n          _this4.setState({\n            transition: transition\n          });\n        });\n      });\n    }\n  }, {\n    key: 'addTransitionEnd',\n    value: function addTransitionEnd() {\n      var dom = (0, _reactDom.findDOMNode)(this.view);\n\n      if (dom) {\n        dom.addEventListener((0, _getTransitionEnd2.default)(), this.onTransitionEnd, false);\n      }\n    }\n  }, {\n    key: 'removeTransitionEnd',\n    value: function removeTransitionEnd(dom) {\n      dom = dom || (0, _reactDom.findDOMNode)(this.view);\n\n      if (dom) {\n        dom.removeEventListener((0, _getTransitionEnd2.default)(), this.onTransitionEnd);\n      }\n    }\n  }, {\n    key: 'onTransitionEnd',\n    value: function onTransitionEnd() {\n      this.removeTransitionEnd();\n\n      if (!this.nextViewDate) {\n        return;\n      }\n\n      this.setState({\n        viewDate: this.nextViewDate,\n        transition: 0,\n        prepareTransition: 0\n      });\n\n      if (this.props.focusOnTransitionEnd) {\n        this.focus();\n      }\n\n      delete this.nextViewDate;\n    }\n  }, {\n    key: 'onNavMouseDown',\n    value: function onNavMouseDown() {\n      if (this.props.focusOnNavMouseDown && !this.isFocused()) {\n        this.focus();\n      }\n    }\n  }, {\n    key: 'isFocused',\n    value: function isFocused() {\n      var view = this.getView();\n\n      if (view) {\n        return view.isFocused();\n      }\n\n      return false;\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      this.getView().focus();\n    }\n  }]);\n\n  return TransitionView;\n}(_reactClass2.default);\n\nexports.default = TransitionView;\n\n\nTransitionView.propTypes = {\n  children: _react2.default.PropTypes.node.isRequired\n};\n\nTransitionView.defaultProps = {\n  focusOnNavMouseDown: true,\n\n  onTransitionStart: function onTransitionStart() {},\n  onTransitionEnd: function onTransitionEnd() {},\n\n  footerClearDate: null,\n  enableHistoryView: true,\n  constrainActiveInView: false,\n  focusOnTransitionEnd: false,\n  navigation: true,\n  theme: 'default',\n  isDatePicker: true\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/utils/forwardTime.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (from, to) {\n  if (from) {\n    ['hour', 'minute', 'second', 'millisecond'].forEach(function (part) {\n      to.set(part, from.get ? from.get(part) : from[part]);\n    });\n  }\n\n  return to;\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/getTransitionEnd.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Transition-end mapping\n */\n\nvar map = {\n  'WebkitTransition': 'webkitTransitionEnd',\n  'MozTransition': 'transitionend',\n  'OTransition': 'oTransitionEnd',\n  'msTransition': 'MSTransitionEnd',\n  'transition': 'transitionend'\n};\n\nvar EL = void 0;\nvar RESULT = void 0;\n\nexports.default = function () {\n  if (!EL) {\n    EL = document.createElement('p');\n  }\n\n  if (RESULT) {\n    return RESULT;\n  }\n\n  for (var transition in map) {\n    if (null != EL.style[transition]) {\n      RESULT = map[transition];\n      break;\n    }\n  }\n\n  return RESULT;\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/MultiMonthView.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderNavBar = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _reactFlex = require('react-flex');\n\nvar _reactInlineBlock = require('react-inline-block');\n\nvar _reactInlineBlock2 = _interopRequireDefault(_reactInlineBlock);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _clampRange = require('./clampRange');\n\nvar _clampRange2 = _interopRequireDefault(_clampRange);\n\nvar _NavBar = require('./NavBar');\n\nvar _NavBar2 = _interopRequireDefault(_NavBar);\n\nvar _toMoment = require('./toMoment');\n\nvar _toMoment2 = _interopRequireDefault(_toMoment);\n\nvar _join = require('./join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _isInRange2 = require('./utils/isInRange');\n\nvar _isInRange3 = _interopRequireDefault(_isInRange2);\n\nvar _BasicMonthView = require('./BasicMonthView');\n\nvar _MonthView = require('./MonthView');\n\nvar _MonthView2 = _interopRequireDefault(_MonthView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar times = function times(count) {\n  return [].concat(_toConsumableArray(new Array(count))).map(function (v, i) {\n    return i;\n  });\n};\n\nvar prepareDate = function prepareDate(props, state) {\n  if (props.range) {\n    return null;\n  }\n\n  return props.date === undefined ? state.date : props.date;\n};\n\nvar prepareViewDate = function prepareViewDate(props, state) {\n  return props.viewDate === undefined ? state.viewDate : state.propViewDate || props.viewDate;\n};\n\nvar prepareRange = function prepareRange(props, state) {\n  return props.range && props.range.length ? props.range : state.range;\n};\n\nvar prepareActiveDate = function prepareActiveDate(props, state) {\n  var fallbackDate = prepareDate(props, state) || (prepareRange(props, state) || [])[0];\n\n  var activeDate = props.activeDate === undefined ?\n  // only fallback to date if activeDate not specified\n  state.activeDate || fallbackDate : props.activeDate;\n\n  if (activeDate && props.inViewStart && props.inViewEnd && props.constrainActiveInView) {\n    var activeMoment = this.toMoment(activeDate);\n\n    if (!(0, _isInRange3.default)(activeMoment, [props.inViewStart, props.inViewEnd])) {\n      var date = fallbackDate;\n      var dateMoment = this.toMoment(date);\n\n      if (date && (0, _isInRange3.default)(dateMoment, [props.inViewStart, props.inViewEnd])) {\n        return date;\n      }\n\n      return null;\n    }\n  }\n\n  return activeDate;\n};\n\nvar prepareViews = function prepareViews(props) {\n  var daysInView = [];\n\n  var viewMoments = [];\n\n  var viewMoment = props.viewMoment;\n\n  var index = 0;\n  var size = props.size;\n\n  while (index < size) {\n    var mom = this.toMoment(viewMoment).startOf('day').add(index, 'month');\n    var days = (0, _BasicMonthView.getDaysInMonthView)(mom, props);\n\n    viewMoments.push(mom);\n    daysInView.push(days);\n\n    index++;\n  }\n\n  props.daysInView = daysInView;\n  props.viewMoments = viewMoments;\n\n  var lastViewDays = daysInView[size - 1];\n\n  props.inViewStart = daysInView[0][0];\n  props.inViewEnd = lastViewDays[lastViewDays.length - 1];\n};\n\nvar _renderNavBar = function _renderNavBar(config, navBarProps) {\n  var props = this.props;\n  var index = config.index;\n  var viewMoment = config.viewMoment;\n\n\n  navBarProps = (0, _objectAssign2.default)({}, navBarProps, {\n    secondary: true,\n\n    minDate: config.minDate || props.minDate,\n    maxDate: config.maxDate || props.maxDate,\n\n    renderNavNext: config.renderHiddenNav || this.renderHiddenNav,\n    renderNavPrev: config.renderHiddenNav || this.renderHiddenNav,\n\n    viewMoment: viewMoment,\n\n    onViewDateChange: config.onViewDateChange || this.onNavViewDateChange,\n    onUpdate: config.onUpdate || this.updateViewMoment,\n\n    enableHistoryView: props.enableHistoryView\n  });\n\n  if (index == 0) {\n    delete navBarProps.renderNavPrev;\n  }\n\n  if (index == props.perRow - 1) {\n    delete navBarProps.renderNavNext;\n  }\n\n  return _react2.default.createElement(_NavBar2.default, navBarProps);\n};\n\nexports.renderNavBar = _renderNavBar;\n\nvar MultiMonthView = function (_Component) {\n  _inherits(MultiMonthView, _Component);\n\n  function MultiMonthView(props) {\n    _classCallCheck(this, MultiMonthView);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MultiMonthView).call(this, props));\n\n    _this.state = {\n      hoverRange: null,\n      range: props.defaultRange,\n      date: props.defaultDate,\n      activeDate: props.defaultActiveDate,\n      viewDate: props.defaultViewDate\n    };\n    return _this;\n  }\n\n  _createClass(MultiMonthView, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.updateToMoment(this.props);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.locale != this.props.locale || nextProps.dateFormat != this.props.dateFormat) {\n        this.updateToMoment(nextProps);\n      }\n\n      // if (nextProps.viewDate && !nextProps.forceViewUpdate){\n\n      //   //this is here in order not to change view if already in view\n      //   const viewMoment = this.toMoment(nextProps.viewDate)\n\n      //   if (this.isInRange(viewMoment) && !nextProps.forceViewUpdate){\n      //     console.log(this.format(viewMoment), this.format(this.p.viewStart),\n      // this.format(this.p.viewEnd))\n      //     this.setState({\n      //       propViewDate: this.p.viewMoment\n      //     })\n      //   } else {\n      //     debugger\n      //     this.setState({\n      //       propViewDate: null\n      //     })\n      //   }\n      // }\n    }\n  }, {\n    key: 'updateToMoment',\n    value: function updateToMoment(props) {\n      this.toMoment = function (value, dateFormat) {\n        return (0, _toMoment2.default)(value, {\n          locale: props.locale,\n          dateFormat: dateFormat || props.dateFormat\n        });\n      };\n    }\n  }, {\n    key: 'prepareProps',\n    value: function prepareProps(thisProps, state) {\n      var _this2 = this;\n\n      var props = (0, _objectAssign2.default)({}, thisProps);\n      state = state || this.state;\n\n      props.viewMoment = this.toMoment(prepareViewDate(props, state));\n\n      // viewStart is the first day of the first month displayed\n      // viewEnd is the last day of the last month displayed\n      props.viewStart = this.toMoment(props.viewMoment).startOf('month');\n      props.viewEnd = this.toMoment(props.viewStart).add(props.size - 1, 'month').endOf('month');\n\n      // but we also have inViewStart, which can be a day before viewStart\n      // which is in displayed as belonging to the prev month\n      // but is displayed in the current view since it's on the same week\n      // as viewStart\n      //\n      // same for inViewEnd, which is a day after viewEnd - the last day in the same week\n      prepareViews.call(this, props);\n\n      var activeDate = prepareActiveDate.call(this, props, state);\n\n      if (activeDate) {\n        props.activeDate = +this.toMoment(activeDate);\n      }\n\n      props.date = prepareDate(props, state);\n\n      if (!props.date) {\n        var range = prepareRange(props, state);\n\n        if (range) {\n          props.range = range.map(function (d) {\n            return _this2.toMoment(d).startOf('day');\n          });\n          props.rangeStart = state.rangeStart || (props.range.length == 1 ? props.range[0] : null);\n        }\n      }\n\n      return props;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      this.views = [];\n      var props = this.p = this.prepareProps(this.props, this.state);\n      var size = props.size;\n\n      var rowCount = Math.ceil(size / props.perRow);\n      var children = times(rowCount).map(this.renderRow).filter(function (x) {\n        return !!x;\n      });\n\n      var className = (0, _join2.default)(props.className, 'react-date-picker__multi-month-view', props.theme && 'react-date-picker__multi-month-view--theme-' + props.theme);\n\n      var footer = (0, _MonthView.renderFooter)(props, this);\n\n      if (footer) {\n        children.push(footer);\n      }\n\n      var flexProps = (0, _objectAssign2.default)({}, props);\n\n      delete flexProps.activeDate;\n      delete flexProps.clockTabIndex;\n      delete flexProps.constrainActiveInView;\n      delete flexProps.constrainViewDate;\n      delete flexProps.date;\n      delete flexProps.dateFormat;\n      delete flexProps.daysInView;\n      delete flexProps.defaultRange;\n      delete flexProps.enableHistoryView;\n      delete flexProps.footer;\n      delete flexProps.footerClearDate;\n      delete flexProps.forceViewUpdate;\n      delete flexProps.highlightRangeOnMouseMove;\n      delete flexProps.inViewEnd;\n      delete flexProps.inViewStart;\n      delete flexProps.isDatePicker;\n      delete flexProps.locale;\n      delete flexProps.navigation;\n      delete flexProps.onViewDateChange;\n      delete flexProps.perRow;\n      delete flexProps.range;\n      delete flexProps.rangeStart;\n      delete flexProps.renderNavBar;\n      delete flexProps.theme;\n      delete flexProps.viewDate;\n      delete flexProps.viewEnd;\n      delete flexProps.viewMoment;\n      delete flexProps.viewMoments;\n      delete flexProps.viewStart;\n\n      return _react2.default.createElement(_reactFlex.Flex, _extends({\n        column: true,\n        inline: true,\n        alignItems: 'stretch',\n        wrap: false\n      }, flexProps, {\n        className: className,\n        children: children\n      }));\n    }\n  }, {\n    key: 'renderRow',\n    value: function renderRow(rowIndex) {\n      var _this3 = this;\n\n      var props = this.p;\n      var viewProps = (0, _objectAssign2.default)({}, this.p);\n\n      delete viewProps.forceViewUpdate;\n      delete viewProps.index;\n      delete viewProps.inViewEnd;\n      delete viewProps.inViewStart;\n      delete viewProps.navigate;\n      delete viewProps.perRow;\n      delete viewProps.viewEnd;\n      delete viewProps.viewMoments;\n      delete viewProps.viewStart;\n\n      var children = times(props.perRow).map(function (i) {\n        var index = rowIndex * props.perRow + i;\n\n        if (index >= props.size) {\n          return null;\n        }\n\n        return _this3.renderView(viewProps, index, props.size);\n      });\n\n      return _react2.default.createElement(_reactFlex.Flex, { inline: true, row: true, wrap: false, children: children });\n    }\n  }, {\n    key: 'renderView',\n    value: function renderView(viewProps, index, size) {\n      var _this4 = this;\n\n      var props = this.p;\n      var viewMoment = props.viewMoments[index];\n\n      var range = void 0;\n\n      if (props.range) {\n        range = props.rangeStart && props.range.length == 0 ? [props.rangeStart] : props.range;\n      }\n\n      return _react2.default.createElement(_MonthView2.default, _extends({\n        ref: function ref(view) {\n          _this4.views[index] = view;\n        },\n        constrainViewDate: false\n      }, viewProps, {\n\n        className: null,\n\n        index: index,\n\n        footer: false,\n        constrainActiveInView: false,\n\n        navigate: this.onMonthNavigate.bind(this, index),\n        hoverRange: this.state.hoverRange,\n        onHoverRangeChange: this.setHoverRange,\n\n        activeDate: props.activeDate,\n\n        onActiveDateChange: this.onActiveDateChange,\n        onViewDateChange: this.onAdjustViewDateChange,\n\n        date: props.date,\n        defaultDate: null,\n        onChange: this.onChange,\n\n        range: range,\n        defaultRange: null,\n        onRangeChange: this.onRangeChange,\n\n        viewMoment: viewMoment,\n\n        insideMultiView: true,\n\n        daysInView: props.daysInView[index],\n\n        showDaysBeforeMonth: index == 0,\n        showDaysAfterMonth: index == size - 1,\n\n        select: this.select,\n\n        renderNavBar: this.props.navigation && (this.props.renderNavBar || this.renderNavBar).bind(this, { index: index, viewMoment: viewMoment })\n      }));\n    }\n  }, {\n    key: 'onFooterTodayClick',\n    value: function onFooterTodayClick() {\n      this.views[0].onFooterTodayClick();\n    }\n  }, {\n    key: 'onFooterClearClick',\n    value: function onFooterClearClick() {\n      this.views[0].onFooterClearClick();\n    }\n  }, {\n    key: 'onFooterOkClick',\n    value: function onFooterOkClick() {\n      this.views[0].onFooterOkClick();\n    }\n  }, {\n    key: 'onFooterCancelClick',\n    value: function onFooterCancelClick() {\n      this.views[0].onFooterCancelClick();\n    }\n  }, {\n    key: 'isFocused',\n    value: function isFocused() {\n      var firstView = this.views[0];\n\n      if (firstView) {\n        return firstView.isFocused();\n      }\n\n      return false;\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      var firstView = this.views[0];\n\n      if (firstView) {\n        firstView.focus();\n      }\n    }\n  }, {\n    key: 'setHoverRange',\n    value: function setHoverRange(hoverRange) {\n      this.setState({\n        hoverRange: hoverRange\n      });\n    }\n  }, {\n    key: 'select',\n    value: function select(_ref) {\n      var dateMoment = _ref.dateMoment;\n      var timestamp = _ref.timestamp;\n\n      // if (!dateMoment) {\n      //   return\n      // }\n\n      var props = this.p;\n\n      var visibleRange = [props.inViewStart, props.inViewEnd];\n\n      // TODO check why this was needed\n      // if (!isInRange(dateMoment, { range: visibleRange, inclusive: true })) {\n      //   return\n      // }\n\n      this.onAdjustViewDateChange({ dateMoment: dateMoment, timestamp: timestamp });\n      this.onActiveDateChange({ dateMoment: dateMoment, timestamp: timestamp });\n\n      var range = props.range;\n\n      if (range) {\n        this.selectRange({ dateMoment: dateMoment, timestamp: timestamp });\n      } else {\n        this.onChange({ dateMoment: dateMoment, timestamp: timestamp }, event);\n      }\n    }\n  }, {\n    key: 'selectRange',\n    value: function selectRange(_ref2) {\n      var dateMoment = _ref2.dateMoment;\n      var timestamp = _ref2.timestamp;\n\n      return _MonthView2.default.prototype.selectRange.call(this, { dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'onRangeChange',\n    value: function onRangeChange(range) {\n      return _MonthView2.default.prototype.onRangeChange.call(this, range);\n    }\n  }, {\n    key: 'onViewKeyDown',\n    value: function onViewKeyDown() {\n      var view = this.views[0];\n      if (view) {\n        view.onViewKeyDown.apply(view, arguments);\n      }\n    }\n  }, {\n    key: 'renderNavBar',\n    value: function renderNavBar(config, navBarProps) {\n      return _renderNavBar.call(this, config, navBarProps);\n    }\n  }, {\n    key: 'onMonthNavigate',\n    value: function onMonthNavigate(index, dir, event, getNavigationDate) {\n      var props = this.p;\n\n      event.preventDefault();\n\n      if (!props.activeDate) {\n        return;\n      }\n\n      var key = event.key;\n\n      var homeEndDate = key == 'Home' ? props.viewStart : props.viewEnd;\n\n      var mom = key == 'Home' || key == 'End' ? homeEndDate : props.activeDate;\n\n      var nextMoment = getNavigationDate(dir, this.toMoment(mom));\n\n      var viewMoment = this.toMoment(nextMoment);\n\n      this.onActiveDateChange({\n        dateMoment: nextMoment,\n        timestamp: +nextMoment\n      });\n\n      if (this.isInRange(viewMoment)) {\n        return;\n      }\n\n      if (viewMoment.isAfter(props.viewEnd)) {\n        viewMoment.add(-props.size + 1, 'month');\n      }\n\n      this.onViewDateChange({\n        dateMoment: viewMoment,\n        timestamp: +viewMoment\n      });\n    }\n  }, {\n    key: 'onAdjustViewDateChange',\n    value: function onAdjustViewDateChange(_ref3) {\n      var dateMoment = _ref3.dateMoment;\n      var timestamp = _ref3.timestamp;\n\n      var props = this.p;\n\n      var update = dateMoment == null;\n\n      if (dateMoment && dateMoment.isAfter(props.viewEnd)) {\n        dateMoment = this.toMoment(dateMoment).add(-props.size + 1, 'month');\n        timestamp = +dateMoment;\n        update = true;\n      } else if (dateMoment && dateMoment.isBefore(props.viewStart)) {\n        update = true;\n      }\n\n      if (update) {\n        this.onViewDateChange({ dateMoment: dateMoment, timestamp: timestamp });\n      }\n    }\n  }, {\n    key: 'updateViewMoment',\n    value: function updateViewMoment(dateMoment, dir) {\n      var sign = dir < 0 ? -1 : 1;\n      var abs = Math.abs(dir);\n\n      var newMoment = this.toMoment(this.p.viewStart);\n\n      newMoment.add(sign, abs == 1 ? 'month' : 'year');\n\n      return newMoment;\n    }\n  }, {\n    key: 'renderHiddenNav',\n    value: function renderHiddenNav(props) {\n      return _react2.default.createElement(_reactInlineBlock2.default, _extends({}, props, { style: { visibility: 'hidden' } }));\n    }\n  }, {\n    key: 'isInRange',\n    value: function isInRange(moment) {\n      return (0, _isInRange3.default)(moment, [this.p.viewStart, this.p.viewEnd]);\n    }\n  }, {\n    key: 'isInView',\n    value: function isInView(moment) {\n      return this.isInRange(moment);\n    }\n  }, {\n    key: 'onNavViewDateChange',\n    value: function onNavViewDateChange(dateString, _ref4) {\n      var dateMoment = _ref4.dateMoment;\n      var timestamp = _ref4.timestamp;\n\n      this.onViewDateChange({ dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'onViewDateChange',\n    value: function onViewDateChange(_ref5) {\n      var dateMoment = _ref5.dateMoment;\n      var timestamp = _ref5.timestamp;\n\n      if (this.props.viewDate === undefined) {\n        this.setState({\n          viewDate: timestamp\n        });\n      }\n\n      if (this.props.onViewDateChange) {\n        var dateString = this.format(dateMoment);\n        this.props.onViewDateChange(dateString, { dateMoment: dateMoment, dateString: dateString, timestamp: timestamp });\n      }\n    }\n  }, {\n    key: 'onActiveDateChange',\n    value: function onActiveDateChange(_ref6) {\n      var dateMoment = _ref6.dateMoment;\n      var timestamp = _ref6.timestamp;\n\n      var valid = this.views.reduce(function (isValid, view) {\n        return isValid && view.isValidActiveDate(timestamp);\n      }, true);\n\n      if (!valid) {\n        return;\n      }\n\n      var props = this.p;\n      var range = props.range;\n\n      if (range && props.rangeStart) {\n        this.setState({\n          rangeStart: props.rangeStart,\n          range: (0, _clampRange2.default)([props.rangeStart, dateMoment])\n        });\n      }\n\n      if (this.props.activeDate === undefined) {\n        this.setState({\n          activeDate: timestamp\n        });\n      }\n\n      if (this.props.onActiveDateChange) {\n        var dateString = this.format(dateMoment);\n        this.props.onActiveDateChange(dateString, { dateMoment: dateMoment, dateString: dateString, timestamp: timestamp });\n      }\n    }\n  }, {\n    key: 'gotoViewDate',\n    value: function gotoViewDate(_ref7) {\n      var dateMoment = _ref7.dateMoment;\n      var timestamp = _ref7.timestamp;\n\n      if (!timestamp) {\n        timestamp = +dateMoment;\n      }\n\n      this.onViewDateChange({ dateMoment: dateMoment, timestamp: timestamp });\n      this.onActiveDateChange({ dateMoment: dateMoment, timestamp: timestamp });\n    }\n  }, {\n    key: 'format',\n    value: function format(mom) {\n      return mom == null ? '' : mom.format(this.props.dateFormat);\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(_ref8, event) {\n      var dateMoment = _ref8.dateMoment;\n      var timestamp = _ref8.timestamp;\n\n      if (this.props.date === undefined) {\n        this.setState({\n          date: timestamp\n        });\n      }\n\n      if (this.props.onChange) {\n        var dateString = this.format(dateMoment);\n        this.props.onChange(dateString, { dateMoment: dateMoment, dateString: dateString, timestamp: timestamp }, event);\n      }\n    }\n  }, {\n    key: 'getViewSize',\n    value: function getViewSize() {\n      return this.props.size;\n    }\n  }]);\n\n  return MultiMonthView;\n}(_reactClass2.default);\n\nexports.default = MultiMonthView;\n\n\nMultiMonthView.defaultProps = {\n  perRow: 2,\n  size: 2,\n\n  enableHistoryView: true,\n\n  footerClearDate: null,\n\n  isDatePicker: true,\n  forceViewUpdate: false,\n\n  navigation: true,\n  theme: 'default',\n\n  constrainActiveInView: true,\n\n  dateFormat: 'YYYY-MM-DD'\n};\n\nMultiMonthView.propTypes = {};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/ClockInput.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _lodash = require('lodash.throttle');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _reactFlex = require('react-flex');\n\nvar _join = require('./join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _toMoment = require('./toMoment');\n\nvar _toMoment2 = _interopRequireDefault(_toMoment);\n\nvar _Clock = require('./Clock');\n\nvar _Clock2 = _interopRequireDefault(_Clock);\n\nvar _DateFormatSpinnerInput = require('./DateFormatSpinnerInput');\n\nvar _DateFormatSpinnerInput2 = _interopRequireDefault(_DateFormatSpinnerInput);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ClockInput = function (_Component) {\n  _inherits(ClockInput, _Component);\n\n  function ClockInput(props) {\n    _classCallCheck(this, ClockInput);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ClockInput).call(this, props));\n\n    var delay = props.changeDelay;\n    _this.throttleSetValue = delay == -1 ? _this.setValue : (0, _lodash2.default)(_this.setValue, delay);\n\n    _this.state = {\n      value: props.defaultValue || Date.now()\n    };\n    return _this;\n  }\n\n  _createClass(ClockInput, [{\n    key: 'getValue',\n    value: function getValue() {\n      return this.value;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.props;\n      var format = props.dateFormat || props.format;\n\n      var dateFormat = format.substring(format.toLowerCase().indexOf('hh'));\n\n      this.dateFormat = dateFormat;\n\n      this.value = props.value !== undefined ? props.value : this.state.value;\n\n      var className = (0, _join2.default)(props.className, 'react-date-picker__clock-input', props.theme && 'react-date-picker__clock-input--theme-' + props.theme);\n\n      var flexProps = (0, _objectAssign2.default)({}, this.props);\n\n      delete flexProps.changeDelay;\n      delete flexProps.cleanup;\n      delete flexProps.dateFormat;\n      delete flexProps.isClockInput;\n      delete flexProps.onEnterKey;\n      delete flexProps.onEscapeKey;\n      delete flexProps.onTimeChange;\n      delete flexProps.updateOnWheel;\n      delete flexProps.theme;\n      delete flexProps.viewIndex;\n      delete flexProps.wrapTime;\n\n      if (typeof this.props.cleanup == 'function') {\n        this.props.cleanup(flexProps);\n      }\n\n      return _react2.default.createElement(\n        _reactFlex.Flex,\n        _extends({\n          column: true\n        }, flexProps, {\n          value: null,\n          defaultValue: null,\n          className: className\n        }),\n        this.renderClock(),\n        this.renderTimeInput()\n      );\n    }\n  }, {\n    key: 'renderTimeInput',\n    value: function renderTimeInput() {\n      var _this2 = this;\n\n      var props = this.props;\n      var dateInput = _react2.default.Children.toArray(props.children).filter(function (child) {\n        return child && child.props && child.props.isDateInput;\n      })[0];\n\n      var dateInputProps = (0, _objectAssign2.default)({}, this.props, {\n        ref: function ref(field) {\n          _this2.field = field;\n        },\n        tabIndex: props.readOnly ? -1 : props.tabIndex || 0,\n        readOnly: props.readOnly,\n        value: this.value,\n        dateFormat: this.dateFormat,\n        onChange: this.onChange,\n        onKeyDown: this.onKeyDown,\n        size: props.size || this.dateFormat.length + 2\n      });\n\n      if (dateInput) {\n        return _react2.default.cloneElement(dateInput, dateInputProps);\n      }\n\n      return _react2.default.createElement(_DateFormatSpinnerInput2.default, _extends({}, dateInputProps, { style: null }));\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      if (this.field) {\n        this.field.focus();\n      }\n    }\n  }, {\n    key: 'onKeyDown',\n    value: function onKeyDown(event) {\n      if (this.props.onEnterKey && event.key == 'Enter') {\n        this.props.onEnterKey(event);\n      }\n\n      if (this.props.onEscapeKey && event.key == 'Escape') {\n        this.props.onEscapeKey(event);\n      }\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(value) {\n      if (this.props.value === undefined) {\n        this.setState({\n          value: value\n        });\n      }\n\n      if (this.props.onChange) {\n        this.throttleSetValue(value);\n      }\n    }\n  }, {\n    key: 'setValue',\n    value: function setValue(value) {\n      if (this.props.value === undefined) {\n        this.setState({\n          value: value\n        });\n      }\n\n      if (this.props.onChange) {\n        this.props.onChange(value, this.dateFormat);\n      }\n    }\n  }, {\n    key: 'renderClock',\n    value: function renderClock() {\n      var props = this.props;\n      var clock = _react2.default.Children.toArray(props.children).filter(function (child) {\n        return child && child.props && child.props.isDatePickerClock;\n      })[0];\n\n      var dateFormat = this.dateFormat;\n      var time = (0, _toMoment2.default)(this.value, { dateFormat: dateFormat });\n\n      var clockProps = {\n        time: time,\n        theme: props.theme,\n        showMinutesHand: dateFormat.indexOf('mm') != -1,\n        showSecondsHand: dateFormat.indexOf('ss') != -1\n      };\n\n      if (clock) {\n        return _react2.default.cloneElement(clock, clockProps);\n      }\n\n      return _react2.default.createElement(_Clock2.default, clockProps);\n    }\n  }]);\n\n  return ClockInput;\n}(_reactClass2.default);\n\nexports.default = ClockInput;\n\n\nClockInput.defaultProps = {\n  changeDelay: 50,\n\n  dateFormat: 'YYYY-MM-DD',\n  updateOnWheel: true,\n\n  theme: 'default',\n\n  wrapTime: false,\n  isClockInput: true,\n\n  onTimeChange: function onTimeChange() {}\n};\n\nClockInput.propTypes = {};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/DateFormatSpinnerInput/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _reactFlex = require('react-flex');\n\nvar _DateFormatInput = require('../DateFormatInput');\n\nvar _DateFormatInput2 = _interopRequireDefault(_DateFormatInput);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _joinFunctions = require('../joinFunctions');\n\nvar _joinFunctions2 = _interopRequireDefault(_joinFunctions);\n\nvar _assignDefined = require('../assignDefined');\n\nvar _assignDefined2 = _interopRequireDefault(_assignDefined);\n\nvar _join = require('../join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DateFormatSpinnerInput = function (_Component) {\n  _inherits(DateFormatSpinnerInput, _Component);\n\n  function DateFormatSpinnerInput(props) {\n    _classCallCheck(this, DateFormatSpinnerInput);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DateFormatSpinnerInput).call(this, props));\n\n    _this.state = {\n      focused: false\n    };\n    return _this;\n  }\n\n  _createClass(DateFormatSpinnerInput, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.started = false;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props;\n      var children = _react2.default.Children.toArray(props.children);\n\n      var input = this.inputChild = children.filter(function (c) {\n        return c && c.type == 'input';\n      })[0];\n      var inputProps = input ? (0, _objectAssign2.default)({}, input.props) : {};\n\n      var onKeyDown = (0, _joinFunctions2.default)(props.onKeyDown, inputProps.onKeyDown);\n      var onChange = (0, _joinFunctions2.default)(props.onChange, inputProps.onChange);\n      var disabled = props.disabled || inputProps.disabled;\n\n      (0, _assignDefined2.default)(inputProps, {\n        size: props.size || inputProps.size,\n        minDate: props.minDate || inputProps.minDate,\n        maxDate: props.maxDate || inputProps.maxDate,\n\n        changeDelay: props.changeDelay === undefined ? inputProps.changeDelay : props.changeDelay,\n\n        tabIndex: props.tabIndex,\n\n        onKeyDown: onKeyDown,\n        onChange: onChange,\n        disabled: disabled,\n\n        dateFormat: props.dateFormat === undefined ? inputProps.dateFormat : props.dateFormat,\n        stopPropagation: props.stopPropagation,\n        updateOnWheel: props.updateOnWheel,\n\n        onBlur: this.onBlur,\n        onFocus: this.onFocus\n      });\n\n      this.inputProps = inputProps;\n\n      var arrowSize = this.props.arrowSize;\n\n      this.arrows = {\n        1: _react2.default.createElement(\n          'svg',\n          { height: arrowSize, viewBox: '0 0 24 24', width: arrowSize },\n          _react2.default.createElement('path', { d: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z' })\n        ),\n\n        '-1': _react2.default.createElement(\n          'svg',\n          { height: arrowSize, viewBox: '0 0 24 24', width: arrowSize },\n          _react2.default.createElement('path', { d: 'M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z' })\n        )\n      };\n\n      var className = (0, _join2.default)(props.className, 'react-date-picker__date-format-spinner', disabled && 'react-date-picker__date-format-spinner--disabled', this.isFocused() && 'react-date-picker__date-format-spinner--focused', 'react-date-picker__date-format-spinner--theme-' + props.theme);\n\n      return _react2.default.createElement(\n        _reactFlex.Flex,\n        {\n          inline: true,\n          row: true,\n          className: className,\n          disabled: props.disabled\n        },\n        _react2.default.createElement(_DateFormatInput2.default, _extends({\n          ref: function ref(inputDOM) {\n            _this2.input = inputDOM;\n          },\n          value: props.value\n        }, inputProps)),\n        this.renderArrows()\n      );\n    }\n  }, {\n    key: 'renderArrows',\n    value: function renderArrows() {\n      if (this.props.renderArrows) {\n        return this.props.renderArrows(this.props);\n      }\n\n      return _react2.default.createElement(\n        _reactFlex.Flex,\n        {\n          column: true,\n          inline: true\n        },\n        this.renderArrow(1),\n        this.renderArrow(-1)\n      );\n    }\n  }, {\n    key: 'renderArrow',\n    value: function renderArrow(dir) {\n      return _react2.default.createElement(\n        _reactFlex.Item,\n        {\n          flexShrink: 1,\n          className: 'react-date-picker__date-format-spinner-arrow',\n          style: { overflow: 'hidden', height: this.props.arrowSize },\n          onMouseDown: this.onMouseDown.bind(this, dir),\n          onMouseUp: this.stop,\n          onMouseLeave: this.stop\n        },\n        this.arrows[dir]\n      );\n    }\n  }, {\n    key: 'onMouseDown',\n    value: function onMouseDown(dir, event) {\n      var _this3 = this;\n\n      if (this.props.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      event.preventDefault();\n      if (this.isFocused()) {\n        this.start(dir);\n      } else {\n        this.focus();\n\n        setTimeout(function () {\n          _this3.increment(dir);\n        }, 1);\n      }\n    }\n  }, {\n    key: 'start',\n    value: function start(dir) {\n      var _this4 = this;\n\n      this.started = true;\n      this.startTime = Date.now();\n\n      this.step(dir);\n\n      this.timeoutId = setTimeout(function () {\n        _this4.step(dir);\n\n        _this4.timeoutId = setTimeout(function () {\n          var lazyStep = function lazyStep() {\n            var delay = _this4.props.stepDelay - (Date.now() - _this4.startTime) / 500;\n            _this4.step(dir, lazyStep, delay);\n          };\n\n          lazyStep();\n        }, _this4.props.secondStepDelay);\n      }, this.props.firstStepDelay);\n    }\n  }, {\n    key: 'isStarted',\n    value: function isStarted() {\n      return !!(this.started && this.input);\n    }\n  }, {\n    key: 'increment',\n    value: function increment(dir) {\n      this.input.onDirection(dir);\n    }\n  }, {\n    key: 'step',\n    value: function step(dir, callback, delay) {\n      var _this5 = this;\n\n      if (this.isStarted()) {\n        this.increment(dir);\n\n        if (typeof callback == 'function') {\n          this.timeoutId = setTimeout(function () {\n            if (_this5.isStarted()) {\n              callback();\n            }\n          }, delay === undefined ? this.props.stepDelay : delay);\n        }\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.started = false;\n      if (this.timeoutId) {\n        global.clearTimeout(this.timeoutId);\n      }\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      if (this.input) {\n        this.input.focus();\n      }\n    }\n  }, {\n    key: 'isFocused',\n    value: function isFocused() {\n      return this.state.focused;\n    }\n  }, {\n    key: 'onBlur',\n    value: function onBlur(event) {\n      var props = this.props;\n\n      var onBlur = (0, _joinFunctions2.default)(props.onBlur, this.inputChild && this.inputChild.props && this.inputChild.props.onBlur);\n\n      if (onBlur) {\n        onBlur(event);\n      }\n\n      this.setState({\n        focused: false\n      });\n    }\n  }, {\n    key: 'onFocus',\n    value: function onFocus(event) {\n      var props = this.props;\n\n      var onFocus = (0, _joinFunctions2.default)(props.onFocus, this.inputChild && this.inputChild.props && this.inputChild.props.onFocus);\n\n      if (onFocus) {\n        onFocus(event);\n      }\n\n      this.setState({\n        focused: true\n      });\n    }\n  }]);\n\n  return DateFormatSpinnerInput;\n}(_reactClass2.default);\n\nexports.default = DateFormatSpinnerInput;\n\n\nDateFormatSpinnerInput.defaultProps = {\n  firstStepDelay: 150,\n  secondStepDelay: 100,\n  stepDelay: 50,\n\n  changeDelay: undefined,\n\n  theme: 'default',\n\n  disabled: false,\n  arrowSize: 15,\n  isDateInput: true,\n  stopPropagation: true,\n  updateOnWheel: true\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/DateFormatInput/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _lodash = require('lodash.throttle');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _TimeInput = require('../TimeInput');\n\nvar _toMoment2 = require('../toMoment');\n\nvar _toMoment3 = _interopRequireDefault(_toMoment2);\n\nvar _parseFormat2 = require('./parseFormat');\n\nvar _parseFormat3 = _interopRequireDefault(_parseFormat2);\n\nvar _forwardTime = require('../utils/forwardTime');\n\nvar _forwardTime2 = _interopRequireDefault(_forwardTime);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar emptyFn = function emptyFn() {};\n\nvar BACKWARDS = {\n  Backspace: 1,\n  ArrowUp: 1,\n  ArrowDown: 1,\n  PageUp: 1,\n  PageDown: 1\n};\n\nvar DateFormatInput = function (_Component) {\n  _inherits(DateFormatInput, _Component);\n\n  function DateFormatInput(props) {\n    _classCallCheck(this, DateFormatInput);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DateFormatInput).call(this, props));\n\n    var _parseFormat = (0, _parseFormat3.default)(props.dateFormat);\n\n    var positions = _parseFormat.positions;\n    var matches = _parseFormat.matches;\n\n    var defaultValue = props.defaultValue || Date.now();\n\n    var delay = props.changeDelay;\n    _this.throttleSetValue = delay == -1 ? _this.setValue : (0, _lodash2.default)(_this.setValue, delay);\n\n    var _this$getMinMax = _this.getMinMax(props);\n\n    var minDate = _this$getMinMax.minDate;\n    var maxDate = _this$getMinMax.maxDate;\n\n\n    _this.state = {\n      positions: positions,\n      matches: matches,\n      propsValue: props.value !== undefined,\n      value: defaultValue,\n      minDate: minDate,\n      maxDate: maxDate\n    };\n    return _this;\n  }\n\n  _createClass(DateFormatInput, [{\n    key: 'getMinMax',\n    value: function getMinMax(props) {\n      props = props || this.props;\n\n      var minDate = null;\n\n      if (props.minDate) {\n        minDate = this.toMoment(props.minDate, props);\n      }\n\n      var maxDate = null;\n\n      if (props.maxDate) {\n        maxDate = this.toMoment(props.maxDate, props);\n      }\n\n      return {\n        minDate: minDate, maxDate: maxDate\n      };\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _getMinMax = this.getMinMax(nextProps);\n\n      var minDate = _getMinMax.minDate;\n      var maxDate = _getMinMax.maxDate;\n\n\n      this.setState({\n        minDate: minDate, maxDate: maxDate\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (this.props.value !== undefined && this.caretPos && this.isFocused()) {\n        this.setCaretPosition(this.caretPos);\n      }\n    }\n  }, {\n    key: 'toMoment',\n    value: function toMoment(value, props) {\n      props = props || this.props;\n\n      return (0, _toMoment3.default)(value, {\n        locale: props.locale,\n        dateFormat: props.dateFormat || this.props.dateFormat\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.props;\n\n\n      var value = this.state.propsValue ? props.value : this.state.value;\n\n      var displayValue = this.displayValue = this.toMoment(value).format(props.dateFormat);\n\n      var inputProps = (0, _objectAssign2.default)({}, props);\n\n      delete inputProps.changeDelay;\n      delete inputProps.date;\n      delete inputProps.dateFormat;\n      delete inputProps.isDateInput;\n      delete inputProps.maxDate;\n      delete inputProps.minDate;\n      delete inputProps.stopPropagation;\n      delete inputProps.updateOnWheel;\n\n      if (typeof props.cleanup == 'function') {\n        props.cleanup(inputProps);\n      }\n\n      return _react2.default.createElement('input', _extends({}, inputProps, {\n        defaultValue: undefined,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        value: displayValue,\n        onKeyDown: this.onKeyDown,\n        onWheel: this.onWheel,\n        onChange: this.onChange\n      }));\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      (0, _reactDom.findDOMNode)(this).focus();\n    }\n  }, {\n    key: 'onFocus',\n    value: function onFocus(event) {\n      if (this.props.onFocus) {\n        this.props.onFocus(event);\n      }\n\n      this.setState({\n        focused: true\n      });\n    }\n  }, {\n    key: 'onBlur',\n    value: function onBlur(event) {\n      if (this.props.onBlur) {\n        this.props.onBlur(event);\n      }\n\n      this.setState({\n        focused: false\n      });\n    }\n  }, {\n    key: 'isFocused',\n    value: function isFocused() {\n      return this.state.focused;\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(event) {\n      event.stopPropagation();\n    }\n  }, {\n    key: 'onDirection',\n    value: function onDirection(dir) {\n      var event = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      this.onKeyDown({\n        key: dir > 0 ? 'ArrowUp' : 'ArrowDown',\n        type: event.type || 'unknown',\n        stopPropagation: typeof event.stopPropagation == 'function' ? function () {\n          return event.stopPropagation();\n        } : emptyFn,\n        preventDefault: typeof event.preventDefault == 'function' ? function () {\n          return event.preventDefault();\n        } : emptyFn\n      });\n    }\n  }, {\n    key: 'onWheel',\n    value: function onWheel(event) {\n      if (this.props.updateOnWheel && this.isFocused()) {\n        this.onDirection(-event.deltaY, event);\n        // this.onKeyDown({\n        //   key: event.deltaY < 0 ? 'ArrowUp' : 'ArrowDown',\n        //   type: event.type,\n        //   stopPropagation: () => event.stopPropagation(),\n        //   preventDefault: () => event.preventDefault()\n        // })\n      }\n\n      if (this.props.onWheel) {\n        this.props.onWheel(event);\n      }\n    }\n  }, {\n    key: 'onKeyDown',\n    value: function onKeyDown(event) {\n      var _this2 = this;\n\n      var props = this.props;\n      var key = event.key;\n      var type = event.type;\n      var which = event.which;\n\n\n      if (key !== 'Unidentified' && which && which >= 65 && which <= 90) {\n        key = ' ';\n      }\n\n      if (key != ' ' && key * 1 == key) {\n        key = 'Unidentified';\n      }\n\n      if (props.stopPropagation) {\n        event.stopPropagation();\n      }\n\n      var range = this.getSelectedRange();\n      var selectedValue = this.getSelectedValue(range);\n      var value = this.displayValue;\n\n      var _state = this.state;\n      var positions = _state.positions;\n      var matches = _state.matches;\n\n      var valueStr = '' + value;\n\n      var currentPosition = positions[range.start];\n\n      if (typeof currentPosition == 'string') {\n        currentPosition = positions[range.start + (key in BACKWARDS ? -1 : 1)];\n      }\n\n      if (!currentPosition) {\n        currentPosition = positions[range.start - 1];\n      }\n\n      if (props.onKeyDown && type == 'keydown') {\n        if (props.onKeyDown(event, currentPosition) === false) {\n          this.caretPos = range;\n          return;\n        }\n      }\n\n      var keyName = key;\n\n      if (key == 'ArrowUp' || key == 'ArrowDown') {\n        keyName = 'Arrow';\n      }\n\n      var handlerName = 'handle' + keyName;\n\n      var preventDefault = void 0;\n      var newValue = void 0;\n      var newCaretPos = void 0;\n\n      if (currentPosition && currentPosition[handlerName]) {\n        var returnValue = currentPosition[handlerName](currentPosition, {\n          range: range,\n          selectedValue: selectedValue,\n          value: value,\n          positions: positions,\n          currentValue: valueStr.substring(currentPosition.start, currentPosition.end + 1),\n          matches: matches,\n          event: event,\n          key: key,\n          input: this.getInput(),\n          setCaretPosition: function setCaretPosition() {\n            return _this2.setCaretPosition.apply(_this2, arguments);\n          }\n        });\n\n        this.caretPos = range;\n\n        if (returnValue && returnValue.value !== undefined) {\n          newValue = valueStr.substring(0, currentPosition.start) + returnValue.value + valueStr.substring(currentPosition.end + 1);\n\n          newCaretPos = returnValue.caretPos || range;\n          if (newCaretPos === true) {\n            newCaretPos = { start: currentPosition.start, end: currentPosition.end + 1 };\n          }\n          preventDefault = returnValue.preventDefault !== false;\n        }\n      }\n\n      if (preventDefault || key == 'Backspace' || key == 'Delete' || key == ' ') {\n        if (!preventDefault) {\n          this.setCaretPosition(this.caretPos = {\n            start: range.start + (key == 'Backspace' ? -1 : 1)\n          });\n        }\n        preventDefault = true;\n      }\n\n      var config = {\n        currentPosition: currentPosition,\n        preventDefault: preventDefault,\n        event: event,\n        value: newValue,\n        stop: false\n      };\n\n      if (this.props.afterKeyDown && type == 'keydown') {\n        this.props.afterKeyDown(config);\n      }\n\n      if (!config.stop && newCaretPos !== undefined) {\n        var updateCaretPos = function updateCaretPos() {\n          return _this2.setCaretPosition(newCaretPos);\n        };\n        this.caretPos = newCaretPos;\n        this.setStateValue(newValue, updateCaretPos, { key: key, oldValue: valueStr, currentPosition: currentPosition });\n      }\n\n      if (config.preventDefault) {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: 'getInput',\n    value: function getInput() {\n      return (0, _reactDom.findDOMNode)(this);\n    }\n  }, {\n    key: 'setCaretPosition',\n    value: function setCaretPosition(pos) {\n      var dom = this.getInput();\n      if (dom) {\n        (0, _TimeInput.setCaretPosition)(dom, pos);\n      }\n    }\n  }, {\n    key: 'format',\n    value: function format(mom, _format) {\n      return mom.format(_format || this.props.dateFormat);\n    }\n  }, {\n    key: 'setStateValue',\n    value: function setStateValue(value, callback, _ref) {\n      var key = _ref.key;\n      var oldValue = _ref.oldValue;\n      var currentPosition = _ref.currentPosition;\n\n      var dateMoment = this.toMoment(value);\n\n      if (!dateMoment.isValid()) {\n        var dir = key == 'ArrowUp' || key == 'PageUp' ? 1 : -1;\n\n        if (currentPosition.format == 'MM') {\n          // updating the month\n          dateMoment = this.toMoment(oldValue).add(dir, 'month');\n        } else {\n          // updating the day\n          dateMoment = dir > 0 ?\n          // we've gone with +1 beyond max, so reset to 1\n          this.toMoment(oldValue).date(1) :\n\n          // we've gone with -1 beyond max, so reset to max of month\n          this.toMoment(oldValue).endOf('month');\n        }\n\n        if (!dateMoment.isValid()) {\n          return;\n        }\n\n        value = this.format(dateMoment);\n      }\n\n      var _state2 = this.state;\n      var minDate = _state2.minDate;\n      var maxDate = _state2.maxDate;\n\n\n      if (minDate && dateMoment.isBefore(minDate)) {\n        var clone = this.toMoment(dateMoment);\n\n        // try with time\n        dateMoment = (0, _forwardTime2.default)(clone, this.toMoment(minDate));\n\n        if (dateMoment.isBefore(minDate)) {\n          // try without time\n          dateMoment = this.toMoment(minDate);\n        }\n\n        value = this.format(dateMoment);\n      }\n\n      if (maxDate && dateMoment.isAfter(maxDate)) {\n        var _clone = this.toMoment(dateMoment);\n        dateMoment = (0, _forwardTime2.default)(_clone, this.toMoment(maxDate));\n\n        if (dateMoment.isAfter(maxDate)) {\n          dateMoment = this.toMoment(maxDate);\n        }\n\n        value = this.format(dateMoment);\n      }\n\n      this.setState({\n        value: value,\n        propsValue: false\n      }, typeof callback == 'function' && callback);\n\n      // if (this.props.value !== undefined) {\n      if (this.props.onChange) {\n        this.throttleSetValue(value, dateMoment);\n      }\n    }\n  }, {\n    key: 'setValue',\n    value: function setValue(value, dateMoment) {\n      if (this.props.value === undefined) {\n        this.setState({\n          value: value,\n          propsValue: false\n        });\n      } else {\n        this.setState({\n          propsValue: true,\n          value: undefined\n        });\n      }\n\n      if (this.props.onChange) {\n        this.props.onChange(value, { dateMoment: dateMoment || this.toMoment(value) });\n      }\n    }\n  }, {\n    key: 'getSelectedRange',\n    value: function getSelectedRange() {\n      var dom = this.getInput();\n\n      return {\n        start: (0, _TimeInput.getSelectionStart)(dom),\n        end: (0, _TimeInput.getSelectionEnd)(dom)\n      };\n    }\n  }, {\n    key: 'getSelectedValue',\n    value: function getSelectedValue(range) {\n      range = range || this.getSelectedRange();\n      var value = this.displayValue;\n\n      return value.substring(range.start, range.end);\n    }\n  }]);\n\n  return DateFormatInput;\n}(_reactClass2.default);\n\nexports.default = DateFormatInput;\n\n\nDateFormatInput.defaultProps = {\n  isDateInput: true,\n  stopPropagation: true,\n  updateOnWheel: true,\n  changeDelay: 100\n};\n\nDateFormatInput.propTypes = {\n  dateFormat: _react.PropTypes.string.isRequired,\n  value: function value(props, propName) {\n    if (props[propName] !== undefined) {\n      // console.warn('Due to performance considerations, TimeInput will only be uncontrolled.')\n    }\n  }\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/DateFormatInput/parseFormat.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _formats = require('./formats');\n\nvar _formats2 = _interopRequireDefault(_formats);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SUGGESTIONS = {\n  Y: ['YYYY', 'YY'],\n  M: ['MM'],\n  D: ['DD'],\n  H: ['HH'],\n  h: ['hh'],\n  m: ['mm'],\n  s: ['ss']\n};\n\nexports.default = function (format) {\n  var index = 0;\n  var positionIndex = 0;\n\n  var suggestions = void 0;\n  var suggestionMatch = void 0;\n\n  var positions = [];\n  var matches = [];\n\n  while (index < format.length) {\n    var char = format[index];\n    var match = _formats2.default[char];\n    var matchObject = void 0;\n\n    suggestionMatch = null;\n    suggestions = SUGGESTIONS[char];\n\n    if (!match && !suggestions) {\n      positions[positionIndex] = char;\n      matches.push(char);\n    } else {\n      if (suggestions && suggestions.length) {\n        // it might be a longer match\n        suggestionMatch = suggestions.filter(function (s) {\n          return format.substr(index, s.length) == s;\n        })[0];\n      }\n\n      if (!suggestionMatch) {\n        if (!_formats2.default[char]) {\n          console.warn('Format ' + char + ' is not supported yet!');\n          if (suggestions) {\n            console.warn('Use one of [\"' + suggestions.join(',') + '\"]');\n          }\n          positions[positionIndex] = char;\n          matches.push(char);\n        } else {\n          // we found a match, with no other suggestion\n\n          var currentFormat = _formats2.default[char];\n          var start = positionIndex;\n          var end = positionIndex + (currentFormat.length || 1) - 1;\n\n          matchObject = (0, _objectAssign2.default)({}, currentFormat, { format: char, start: start, end: end });\n\n          for (; start <= end; start++) {\n            positions[positionIndex] = matchObject;\n            positionIndex++;\n          }\n          index++;\n          matches.push(matchObject);\n          continue; // to skip incrementing twice\n        }\n      } else {\n          matchObject = (0, _objectAssign2.default)({}, _formats2.default[suggestionMatch], {\n            format: suggestionMatch, start: positionIndex\n          });\n          matches.push(matchObject);\n\n          var endIndex = positionIndex + suggestionMatch.length;\n\n          matchObject.end = endIndex - 1;\n          while (positionIndex < endIndex) {\n            positions[positionIndex] = matchObject;\n            positionIndex++;\n            index++;\n          }\n          continue; // to skip incrementing index once more\n        }\n    }\n\n    positionIndex++;\n    index++;\n  }\n\n  return { positions: positions, matches: matches };\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/DateFormatInput/formats.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFormats = undefined;\n\nvar _leftPad = require('../utils/leftPad');\n\nvar _leftPad2 = _interopRequireDefault(_leftPad);\n\nvar _clamp = require('../utils/clamp');\n\nvar _clamp2 = _interopRequireDefault(_clamp);\n\nvar _times = require('../utils/times');\n\nvar _times2 = _interopRequireDefault(_times);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isValid = function isValid(value, format) {\n  value *= 1;\n  return value >= format.min && value <= format.max;\n};\n\nvar replaceAt = function replaceAt(_ref) {\n  var value = _ref.value;\n  var index = _ref.index;\n  var _ref$len = _ref.len;\n  var len = _ref$len === undefined ? 1 : _ref$len;\n  var str = _ref.str;\n\n  return value.substring(0, index) + str + value.substring(index + len);\n};\n\nvar handleArrow = function handleArrow(format, _ref2) {\n  var currentValue = _ref2.currentValue;\n  var key = _ref2.key;\n  var dir = _ref2.dir;\n\n  dir = dir || (key == 'ArrowUp' ? 1 : -1);\n\n  return {\n    value: (0, _clamp2.default)(currentValue * 1 + dir, {\n      min: format.min,\n      max: format.max,\n      circular: true\n    }),\n    caretPos: true\n  };\n};\n\nvar handleArrowLeftPad = function handleArrowLeftPad(format, config) {\n  var _handleArrow = handleArrow(format, config);\n\n  var value = _handleArrow.value;\n  var caretPos = _handleArrow.caretPos;\n\n\n  return {\n    value: (0, _leftPad2.default)(value),\n    caretPos: caretPos\n  };\n};\n\nvar handlePage = function handlePage(format, config) {\n  config.dir = config.dir || (config.key == 'PageUp' ? 10 : -10);\n\n  return handleArrow(format, config);\n};\n\nvar handlePageLeftPad = function handlePageLeftPad(format, config) {\n  config.dir = config.dir || (config.key == 'PageUp' ? 10 : -10);\n\n  return handleArrowLeftPad(format, config);\n};\n\nvar handleUpdate = function handleUpdate(value, format, _ref3) {\n  var range = _ref3.range;\n\n  value *= 1;\n\n  var len = range.end - range.start + 1;\n  var pow10 = ('1' + (0, _times2.default)(3 - len).map(function () {\n    return '0';\n  }).join('')) * 1;\n  var modLen = value % pow10;\n\n  var newValue = (0, _clamp2.default)(value, { min: format.min, max: format.max, circular: false });\n\n  if (pow10 > 1 && value % pow10 == 0) {\n    // the user is modifying the millenium or century\n    newValue += modLen;\n    // so we try to keep the century\n    newValue = (0, _clamp2.default)(newValue, { min: format.min, max: format.max, circular: false });\n  }\n\n  return newValue;\n};\n\nvar handleUnidentified = function handleUnidentified(format, _ref4) {\n  var event = _ref4.event;\n  var currentValue = _ref4.currentValue;\n  var range = _ref4.range;\n\n  var newChar = String.fromCharCode(event.which);\n  var index = range.start - format.start;\n\n  var caretPos = { start: range.start + 1 };\n\n  if (newChar * 1 != newChar) {\n    return {\n      preventDefault: false,\n      value: currentValue\n    };\n  }\n\n  // caretPos\n  var value = void 0;\n  var valid = void 0;\n\n  value = replaceAt({ value: currentValue, index: index, str: newChar });\n  valid = isValid(value, format);\n\n  if (!valid && index == 0 && newChar == ('' + format.max)[0]) {\n    valid = true;\n    value = format.max;\n    caretPos.start++;\n  }\n\n  if (!valid) {\n    do {\n      value = (0, _times2.default)(index).map(function () {\n        return '0';\n      }).join('') + replaceAt({ value: currentValue, index: index, str: newChar }).substring(index);\n\n      valid = isValid(value, format);\n      index++;\n\n      if (!valid) {\n        caretPos.start++;\n      }\n    } while (!valid && index <= format.end);\n  }\n\n  if (valid) {\n    value = handleUpdate(value, format, { range: range });\n  } else {\n    var defaultValue = format.default;\n    value = 1 * replaceAt({ value: defaultValue, index: defaultValue.length - 1, str: newChar });\n\n    if (isValid(value, format)) {\n      caretPos.start = format.start + defaultValue.length;\n    } else {\n      caretPos.start = range.start + 1;\n      value = currentValue;\n    }\n  }\n\n  return {\n    value: value,\n    caretPos: caretPos\n  };\n};\n\nvar handleUnidentifiedLeftPad = function handleUnidentifiedLeftPad(format, config) {\n  var _handleUnidentified = handleUnidentified(format, config);\n\n  var value = _handleUnidentified.value;\n  var caretPos = _handleUnidentified.caretPos;\n  var preventDefault = _handleUnidentified.preventDefault;\n\n\n  return {\n    value: (0, _leftPad2.default)(value),\n    caretPos: caretPos,\n    preventDefault: preventDefault\n  };\n};\n\nvar handleYearUnidentified = handleUnidentified;\n\nvar handleDelete = function handleDelete(format, _ref5) {\n  var range = _ref5.range;\n  var currentValue = _ref5.currentValue;\n  var dir = _ref5.dir;\n\n  dir = dir || 0;\n\n  if (range.start <= format.start && range.end >= format.end) {\n    return {\n      value: format.default,\n      caretPos: true\n    };\n  }\n\n  var len = range.end - range.start + 1;\n  var str = (0, _times2.default)(len).map(function () {\n    return '0';\n  }).join('');\n  var index = range.start - format.start + dir;\n\n  var value = replaceAt({ value: currentValue, index: index, str: str, len: len }) * 1;\n\n  value = (0, _leftPad2.default)(handleUpdate(value, format, { range: range }));\n\n  return {\n    value: value,\n    caretPos: { start: range.start + (dir < 0 ? -1 : 1) }\n  };\n};\n\nvar handleBackspace = function handleBackspace(format, config) {\n  config.dir = -1;\n  return handleDelete(format, config);\n};\n\nvar toggleMeridiem = function toggleMeridiem(_ref6) {\n  var upper = _ref6.upper;\n  var value = _ref6.value;\n\n  if (upper) {\n    return value == 'AM' ? 'PM' : 'AM';\n  }\n\n  return value == 'am' ? 'pm' : 'am';\n};\n\nvar handleMeridiemArrow = function handleMeridiemArrow(format, _ref7) {\n  var currentValue = _ref7.currentValue;\n\n  return {\n    value: toggleMeridiem({ upper: format.upper, value: currentValue }),\n    caretPos: true\n  };\n};\n\nvar handleMeridiemDelete = function handleMeridiemDelete(format, _ref8) {\n  var dir = _ref8.dir;\n  var range = _ref8.range;\n\n  dir = dir || 0;\n\n  if (range.start <= format.start && range.end >= format.end) {\n    return {\n      value: format.default,\n      caretPos: true\n    };\n  }\n\n  return {\n    value: format.upper ? 'AM' : 'am',\n    caretPos: { start: range.start + (dir < 0 ? -1 : 1) }\n  };\n};\n\nvar handleMeridiemBackspace = function handleMeridiemBackspace(format, config) {\n  config.dir = -1;\n  return handleMeridiemDelete(format, config);\n};\n\nvar getFormats = function getFormats() {\n  return {\n    YYYY: {\n      min: 100,\n      max: 9999,\n      default: '0100',\n      handleDelete: handleDelete,\n      handleBackspace: handleBackspace,\n      handleArrow: handleArrow,\n      handlePageUp: handlePage,\n      handlePageDown: handlePage,\n      handleUnidentified: handleYearUnidentified\n    },\n\n    // YY: {\n    //   default: '00'\n    // },\n\n    // M: { min: 1, max: 12, default: '1', maxLen: 2 },\n    MM: {\n      min: 1,\n      max: 12,\n      default: '01',\n      handleDelete: handleDelete,\n      handleBackspace: handleBackspace,\n      handlePageUp: handlePageLeftPad,\n      handlePageDown: handlePageLeftPad,\n      handleUnidentified: handleUnidentifiedLeftPad,\n      handleArrow: handleArrowLeftPad\n    },\n\n    // D: { min: 1, max: 31, default: '1', maxLen: 2 },\n    DD: {\n      min: 1,\n      max: 31,\n      default: '01',\n      handlePageUp: handlePageLeftPad,\n      handlePageDown: handlePageLeftPad,\n      handleDelete: handleDelete,\n      handleBackspace: handleBackspace,\n      handleUnidentified: handleUnidentifiedLeftPad,\n      handleArrow: handleArrowLeftPad\n    },\n\n    // H: {\n    //   min: 0, max: 23, default: '0', maxLen: 2,\n    //   handleDelete,\n    //   handleBackspace,\n    //   handleArrow: handleArrowLeftPad,\n    //   handlePageUp: handlePageLeftPad,\n    //   handlePageDown: handlePageLeftPad\n    // },\n    HH: {\n      time: true,\n      min: 0, max: 23, default: '00',\n      handleDelete: handleDelete,\n      handleBackspace: handleBackspace,\n      handleUnidentified: handleUnidentifiedLeftPad,\n      handleArrow: handleArrowLeftPad,\n      handlePageUp: handlePageLeftPad,\n      handlePageDown: handlePageLeftPad\n    },\n\n    // h: { min: 1, max: 12, default: '1', maxLen: 2,\n    //   handleArrow: handleArrowLeftPad,\n    //   handlePageUp: handlePageLeftPad,\n    //   handlePageDown: handlePageLeftPad\n    // },\n    hh: { min: 1, max: 12, default: '01',\n      time: true,\n      handleDelete: handleDelete,\n      handleBackspace: handleBackspace,\n      handleUnidentified: handleUnidentifiedLeftPad,\n      handleArrow: handleArrowLeftPad,\n      handlePageUp: handlePageLeftPad,\n      handlePageDown: handlePageLeftPad\n    },\n\n    a: {\n      time: true,\n      length: 2,\n      default: 'am',\n      handleArrow: handleMeridiemArrow,\n      handlePageUp: handleMeridiemArrow,\n      handlePageDown: handleMeridiemArrow,\n      handleDelete: handleMeridiemDelete,\n      handleBackspace: handleMeridiemBackspace\n    },\n    A: {\n      length: 2,\n      time: true,\n      default: 'AM', upper: true,\n      handleArrow: handleMeridiemArrow,\n      handlePageUp: handleMeridiemArrow,\n      handlePageDown: handleMeridiemArrow,\n      handleDelete: handleMeridiemDelete,\n      handleBackspace: handleMeridiemBackspace\n    },\n\n    // m: { min: 0, max: 59, default: '0', maxLen: 2 },\n    mm: { min: 0, max: 59, default: '00',\n      time: true,\n      handleDelete: handleDelete,\n      handleBackspace: handleBackspace,\n      handleUnidentified: handleUnidentifiedLeftPad,\n      handleArrow: handleArrowLeftPad,\n      handlePageUp: handlePageLeftPad,\n      handlePageDown: handlePageLeftPad\n    },\n\n    // s: { min: 0, max: 59, default: '0' },\n    ss: {\n      time: true,\n      min: 0, max: 59, default: '00',\n      handleDelete: handleDelete,\n      handleBackspace: handleBackspace,\n      handleUnidentified: handleUnidentifiedLeftPad,\n      handleArrow: handleArrowLeftPad,\n      handlePageUp: handlePageLeftPad,\n      handlePageDown: handlePageLeftPad\n    }\n  };\n};\n\nexports.getFormats = getFormats;\nexports.default = getFormats();","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/DateField/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _reactFlex = require('react-flex');\n\nvar _reactField = require('react-field');\n\nvar _reactField2 = _interopRequireDefault(_reactField);\n\nvar _DateFormatInput = require('../DateFormatInput');\n\nvar _DateFormatInput2 = _interopRequireDefault(_DateFormatInput);\n\nvar _reactInlineBlock = require('react-inline-block');\n\nvar _reactInlineBlock2 = _interopRequireDefault(_reactInlineBlock);\n\nvar _icons = require('./icons');\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _join = require('../join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _toMoment2 = require('../toMoment');\n\nvar _toMoment3 = _interopRequireDefault(_toMoment2);\n\nvar _Calendar = require('../Calendar');\n\nvar _Calendar2 = _interopRequireDefault(_Calendar);\n\nvar _joinFunctions = require('../joinFunctions');\n\nvar _joinFunctions2 = _interopRequireDefault(_joinFunctions);\n\nvar _assignDefined = require('../assignDefined');\n\nvar _assignDefined2 = _interopRequireDefault(_assignDefined);\n\nvar _forwardTime = require('../utils/forwardTime');\n\nvar _forwardTime2 = _interopRequireDefault(_forwardTime);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar POSITIONS = { top: 'top', bottom: 'bottom' };\n\nvar getPicker = function getPicker(props) {\n  return _react2.default.Children.toArray(props.children).filter(function (c) {\n    return c && c.props && c.props.isDatePicker;\n  })[0] || _react2.default.createElement(_Calendar2.default, null);\n};\n\nvar FIND_INPUT = function FIND_INPUT(c) {\n  return c && (c.type === 'input' || c.props && c.isDateInput);\n};\n\nvar preventDefault = function preventDefault(event) {\n  event.preventDefault();\n};\n\nvar DateField = function (_Component) {\n  _inherits(DateField, _Component);\n\n  function DateField(props) {\n    _classCallCheck(this, DateField);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DateField).call(this, props));\n\n    _this.state = {\n      value: props.defaultValue === undefined ? '' : props.defaultValue,\n      expanded: props.defaultExpanded || false,\n      focused: false\n    };\n    return _this;\n  }\n\n  _createClass(DateField, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.prepareProps(this.props);\n\n      var flexProps = (0, _objectAssign2.default)({}, props);\n\n      delete flexProps.activeDate;\n      delete flexProps.cleanup;\n      delete flexProps.clearIcon;\n      delete flexProps.collapseOnDateClick;\n      delete flexProps.date;\n      delete flexProps.dateFormat;\n      delete flexProps.expanded;\n      delete flexProps.expandOnFocus;\n      delete flexProps.footer;\n      delete flexProps.forceValidDate;\n      delete flexProps.locale;\n      delete flexProps.onExpand;\n      delete flexProps.onExpandChange;\n      delete flexProps.onCollapse;\n      delete flexProps.minDate;\n      delete flexProps.maxDate;\n      delete flexProps.pickerProps;\n      delete flexProps.position;\n      delete flexProps.showClock;\n      delete flexProps.skipTodayTime;\n      delete flexProps.strict;\n      delete flexProps.valid;\n      delete flexProps.validateOnBlur;\n      delete flexProps.viewDate;\n      delete flexProps.value;\n      delete flexProps.text;\n      delete flexProps.theme;\n      delete flexProps.updateOnDateClick;\n\n      if (typeof props.cleanup == 'function') {\n        props.cleanup(flexProps);\n      }\n\n      return _react2.default.createElement(\n        _reactFlex.Flex,\n        _extends({\n          inline: true,\n          row: true,\n          wrap: false\n        }, flexProps),\n        this.renderInput(),\n        this.renderClearIcon(),\n        this.renderCalendarIcon(),\n        this.renderPicker()\n      );\n    }\n  }, {\n    key: 'renderInput',\n    value: function renderInput() {\n      var props = this.p;\n      var inputProps = this.prepareInputProps(props);\n\n      var input = void 0;\n\n      if (props.renderInput) {\n        input = props.renderInput(inputProps);\n      }\n\n      if (input === undefined) {\n        input = props.children.filter(FIND_INPUT)[0];\n\n        var FieldInput = props.forceValidDate ? _DateFormatInput2.default : _reactField2.default;\n\n        var propsForInput = (0, _objectAssign2.default)({}, inputProps);\n\n        if (!props.forceValidDate) {\n          delete propsForInput.date;\n          delete propsForInput.maxDate;\n          delete propsForInput.minDate;\n          delete propsForInput.dateFormat;\n        }\n\n        input = input ? _react2.default.cloneElement(input, propsForInput) : _react2.default.createElement(FieldInput, propsForInput);\n      }\n\n      return input;\n    }\n  }, {\n    key: 'renderClearIcon',\n    value: function renderClearIcon() {\n      var props = this.p;\n\n      if (!props.clearIcon || props.forceValidDate || props.disabled) {\n        return undefined;\n      }\n\n      var clearIcon = props.clearIcon === true ? _icons.CLEAR_ICON : props.clearIcon;\n\n      var clearIconProps = {\n        style: {\n          visibility: props.text ? 'visible' : 'hidden'\n        },\n        className: 'react-date-field__clear-icon',\n        onMouseDown: this.onClearMouseDown,\n        children: clearIcon\n      };\n\n      var result = void 0;\n\n      if (props.renderClearIcon) {\n        result = props.renderClearIcon(clearIconProps);\n      }\n\n      if (result === undefined) {\n        result = _react2.default.createElement(_reactInlineBlock2.default, clearIconProps);\n      }\n\n      return result;\n    }\n  }, {\n    key: 'onClearMouseDown',\n    value: function onClearMouseDown(event) {\n      event.preventDefault();\n      this.onFieldChange('');\n\n      if (!this.isFocused()) {\n        this.focus();\n      }\n    }\n  }, {\n    key: 'renderCalendarIcon',\n    value: function renderCalendarIcon() {\n      var result = void 0;\n      var renderIcon = this.props.renderCalendarIcon;\n\n      var calendarIconProps = {\n        className: 'react-date-field__calendar-icon',\n        onMouseDown: this.onCalendarIconMouseDown,\n        children: _react2.default.createElement('div', { className: 'react-date-field__calendar-icon-inner' })\n      };\n\n      if (renderIcon) {\n        result = renderIcon(calendarIconProps);\n      }\n\n      if (result === undefined) {\n        result = _react2.default.createElement('div', calendarIconProps);\n      }\n\n      return result;\n    }\n  }, {\n    key: 'onCalendarIconMouseDown',\n    value: function onCalendarIconMouseDown(event) {\n      if (this.props.disabled) {\n        return;\n      }\n      event.preventDefault();\n\n      if (!this.isFocused()) {\n        this.focus();\n      }\n\n      this.toggleExpand();\n    }\n  }, {\n    key: 'prepareExpanded',\n    value: function prepareExpanded(props) {\n      return props.expanded === undefined ? this.state.expanded : props.expanded;\n    }\n  }, {\n    key: 'prepareDate',\n    value: function prepareDate(props, pickerProps) {\n      props = props || this.p;\n      pickerProps = pickerProps || props.pickerProps;\n\n      var locale = props.locale || pickerProps.locale;\n      var dateFormat = props.dateFormat || pickerProps.dateFormat;\n\n      var value = props.value === undefined ? this.state.value : props.value;\n\n      var date = this.toMoment(value);\n      var valid = date.isValid();\n\n      if (value && typeof value != 'string' && valid) {\n        value = this.format(date);\n      }\n\n      if (date && valid) {\n        this.lastValidDate = date;\n      } else {\n        value = this.state.value;\n      }\n\n      var viewDate = this.state.viewDate || this.lastValidDate || new Date();\n      var activeDate = this.state.activeDate || this.lastValidDate || new Date();\n\n      return {\n        viewDate: viewDate,\n        activeDate: activeDate,\n        dateFormat: dateFormat,\n        locale: locale,\n        valid: valid,\n        date: date,\n        value: value\n      };\n    }\n  }, {\n    key: 'preparePickerProps',\n    value: function preparePickerProps(props) {\n      var picker = getPicker(props, this);\n\n      if (!picker) {\n        return null;\n      }\n\n      return picker.props || {};\n    }\n  }, {\n    key: 'prepareProps',\n    value: function prepareProps(thisProps) {\n      var props = this.p = (0, _objectAssign2.default)({}, thisProps);\n\n      props.children = _react2.default.Children.toArray(props.children);\n\n      props.expanded = this.prepareExpanded(props);\n      props.pickerProps = this.preparePickerProps(props);\n\n      var input = props.children.filter(FIND_INPUT)[0];\n\n      if (input && input.type == 'input') {\n        props.rawInput = true;\n        props.forceValidDate = false;\n      }\n\n      var dateInfo = this.prepareDate(props, props.pickerProps);\n\n      (0, _objectAssign2.default)(props, dateInfo);\n\n      if (props.text === undefined) {\n        props.text = this.state.text;\n\n        if (props.text == null) {\n          props.text = props.valid && props.date ? props.value : this.props.value;\n        }\n      }\n\n      if (props.text === undefined) {\n        props.text = '';\n      }\n\n      props.className = this.prepareClassName(props);\n\n      return props;\n    }\n  }, {\n    key: 'prepareClassName',\n    value: function prepareClassName(props) {\n      var position = POSITIONS[props.pickerProps.position || props.pickerPosition] || 'bottom';\n\n      return (0, _join2.default)(['react-date-field', props.className, props.disabled && 'react-date-field--disabled', props.theme && 'react-date-field--theme-' + props.theme, 'react-date-field--picker-position-' + position, this.isLazyFocused() && (0, _join2.default)('react-date-field--focused', props.focusedClassName), this.isExpanded() && (0, _join2.default)('react-date-field--expanded', props.expandedClassName), !props.valid && (0, _join2.default)(props.invalidClassName, 'react-date-field--invalid')]);\n    }\n  }, {\n    key: 'prepareInputProps',\n    value: function prepareInputProps(props) {\n      var _this2 = this;\n\n      var input = props.children.filter(FIND_INPUT)[0];\n      var inputProps = input && input.props || {};\n\n      var onBlur = (0, _joinFunctions2.default)(inputProps.onBlur, this.onFieldBlur);\n      var onFocus = (0, _joinFunctions2.default)(inputProps.onFocus, this.onFieldFocus);\n      var onChange = (0, _joinFunctions2.default)(inputProps.onChange, this.onFieldChange);\n      var onKeyDown = (0, _joinFunctions2.default)(inputProps.onKeyDown, this.onFieldKeyDown);\n\n      var newInputProps = (0, _objectAssign2.default)({}, inputProps, {\n\n        ref: function ref(f) {\n          _this2.field = f;\n        },\n        date: props.date,\n\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onChange: onChange,\n\n        dateFormat: props.dateFormat,\n        value: props.text || '',\n\n        onKeyDown: onKeyDown,\n\n        className: (0, _join2.default)('react-date-field__input', inputProps.className)\n      });\n\n      (0, _assignDefined2.default)(newInputProps, {\n        placeholder: props.placeholder,\n        disabled: props.disabled,\n        minDate: props.minDate,\n        maxDate: props.maxDate\n      });\n\n      return newInputProps;\n    }\n  }, {\n    key: 'renderPicker',\n    value: function renderPicker() {\n      var _this3 = this;\n\n      var props = this.p;\n\n      if (this.isExpanded()) {\n        var newExpand = !this.picker;\n        var picker = getPicker(props, this);\n\n        var pickerProps = props.pickerProps;\n\n        var onMouseDown = (0, _joinFunctions2.default)(pickerProps.onMouseDown, this.onPickerMouseDown);\n        var onChange = (0, _joinFunctions2.default)(pickerProps.onChange, this.onPickerChange);\n\n        var date = props.valid && props.date;\n        var footer = pickerProps.footer !== undefined ? pickerProps.footer : props.footer;\n\n        var viewDate = newExpand && date ? date : props.viewDate;\n        var activeDate = newExpand && date ? date : props.activeDate;\n\n        return _react2.default.cloneElement(picker, (0, _assignDefined2.default)({\n          ref: function ref(p) {\n            _this3.picker = _this3.pickerView = p;\n\n            if (p && p.getView) {\n              _this3.pickerView = p.getView();\n            }\n\n            if (!_this3.state.viewDate) {\n              _this3.onViewDateChange(props.viewDate);\n            }\n          },\n\n          footer: footer,\n\n          focusOnNavMouseDown: false,\n          focusOnFooterMouseDown: false,\n\n          insideField: true,\n          showClock: props.showClock,\n\n          getTransitionTime: this.getTime,\n\n          updateOnWheel: props.updateOnWheel,\n\n          onClockInputBlur: this.onClockInputBlur,\n          onClockEnterKey: this.onClockEnterKey,\n          onClockEscapeKey: this.onClockEscapeKey,\n\n          footerClearDate: props.clearDate || props.minDate,\n\n          onFooterCancelClick: this.onFooterCancelClick,\n          onFooterTodayClick: this.onFooterTodayClick,\n          onFooterOkClick: this.onFooterOkClick,\n          onFooterClearClick: this.onFooterClearClick,\n\n          dateFormat: props.dateFormat,\n          theme: props.theme || pickerProps.theme,\n          arrows: props.navBarArrows,\n\n          className: (0, _join2.default)(pickerProps.className, 'react-date-field__picker'),\n\n          date: date || null,\n\n          tabIndex: -1,\n\n          viewDate: viewDate,\n          activeDate: activeDate,\n          locale: props.locale,\n\n          onViewDateChange: this.onViewDateChange,\n          onActiveDateChange: this.onActiveDateChange,\n          onTimeChange: this.onTimeChange,\n\n          onTransitionStart: this.onTransitionStart,\n\n          onMouseDown: onMouseDown,\n          onChange: onChange\n        }, {\n          minDate: props.minDate,\n          maxDate: props.maxDate\n        }));\n      }\n\n      this.time = null;\n\n      return null;\n    }\n  }, {\n    key: 'onTimeChange',\n    value: function onTimeChange(value, timeFormat) {\n      var timeMoment = this.toMoment(value, { dateFormat: timeFormat });\n\n      var time = ['hour', 'minute', 'second', 'millisecond'].reduce(function (acc, part) {\n        acc[part] = timeMoment.get(part);\n        return acc;\n      }, {});\n\n      this.time = time;\n    }\n  }, {\n    key: 'getTime',\n    value: function getTime() {\n      return this.time;\n    }\n  }, {\n    key: 'setValue',\n    value: function setValue(value) {\n      var config = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var dateMoment = this.toMoment(value);\n      var dateString = this.format(dateMoment);\n\n      this.setDate(dateString, (0, _objectAssign2.default)(config, { dateMoment: dateMoment }));\n    }\n  }, {\n    key: 'onFooterOkClick',\n    value: function onFooterOkClick() {\n      var activeDate = this.p.activeDate;\n\n      if (activeDate) {\n        var date = this.toMoment(activeDate);\n\n        (0, _forwardTime2.default)(this.time, date);\n\n        this.setValue(date, { skipTime: !!this.time });\n      }\n\n      this.setExpanded(false);\n    }\n  }, {\n    key: 'onFooterCancelClick',\n    value: function onFooterCancelClick() {\n      this.setExpanded(false);\n    }\n  }, {\n    key: 'onFooterTodayClick',\n    value: function onFooterTodayClick() {\n      var today = this.toMoment(new Date()).startOf('day');\n\n      this.onPickerChange(this.format(today), { dateMoment: today });\n      this.onViewDateChange(today);\n      this.onActiveDateChange(today);\n\n      return false;\n    }\n  }, {\n    key: 'onFooterClearClick',\n    value: function onFooterClearClick() {\n      var clearDate = this.props.clearDate === undefined ? this.props.minDate : this.props.clearDate;\n\n      if (clearDate !== undefined) {\n        this.setValue(clearDate, {\n          skipTime: true\n        });\n      }\n\n      this.setExpanded(false);\n\n      return false;\n    }\n  }, {\n    key: 'toMoment',\n    value: function toMoment(value, props) {\n      if (_moment2.default.isMoment(value)) {\n        return value;\n      }\n\n      props = props || this.p;\n\n      var date = (0, _toMoment3.default)(value, {\n        strict: props.strict,\n        locale: props.locale,\n        dateFormat: props.displayFormat || props.dateFormat || this.p.dateFormat\n      });\n\n      if (!date.isValid() && props.displayFormat) {\n        date = (0, _toMoment3.default)(value, {\n          strict: props.strict,\n          locale: props.locale,\n          dateFormat: props.dateFormat || this.p.dateFormat\n        });\n      }\n\n      return date;\n    }\n  }, {\n    key: 'isValid',\n    value: function isValid(text) {\n      if (text === undefined) {\n        text = this.p.text;\n      }\n\n      return this.toMoment(text).isValid();\n    }\n  }, {\n    key: 'onViewDateChange',\n    value: function onViewDateChange(viewDate) {\n      this.setState({\n        viewDate: viewDate\n      });\n    }\n  }, {\n    key: 'onActiveDateChange',\n    value: function onActiveDateChange(activeDate) {\n      this.setState({\n        activeDate: activeDate\n      });\n    }\n  }, {\n    key: 'onViewKeyDown',\n    value: function onViewKeyDown(event) {\n      var key = event.key;\n\n      if (this.pickerView) {\n        // } && (key == 'Escape' || key == 'Enter' || (key in NAV_KEYS))) {\n        this.pickerView.onViewKeyDown(event);\n      }\n    }\n  }, {\n    key: 'onPickerMouseDown',\n    value: function onPickerMouseDown(event) {\n      preventDefault(event);\n\n      if (!this.isFocused()) {\n        this.focus();\n      }\n    }\n  }, {\n    key: 'isHistoryViewVisible',\n    value: function isHistoryViewVisible() {\n      if (this.picker && this.picker.isHistoryViewVisible) {\n        return this.picker.isHistoryViewVisible();\n      }\n\n      return false;\n    }\n  }, {\n    key: 'onFieldKeyDown',\n    value: function onFieldKeyDown(event) {\n      var key = event.key;\n      var expanded = this.isExpanded();\n      var historyVisible = this.isHistoryViewVisible();\n\n      if (key == 'Enter' && !historyVisible) {\n        this.onViewKeyDown(event);\n        this.toggleExpand();\n        return false;\n      }\n\n      if (historyVisible && (key == 'Escape' || key == 'Enter')) {\n        this.onViewKeyDown(event);\n        return false;\n      }\n\n      if (key == 'Escape') {\n        if (expanded) {\n          this.setExpanded(false);\n          return false;\n        }\n      }\n\n      if (expanded) {\n        if (key in _Calendar.NAV_KEYS) {\n          this.onViewKeyDown(event);\n          return false;\n        }\n        // if (!currentPosition || !currentPosition.time) {\n        //   // the time has not changed, so it's safe to forward the event\n        //   this.onViewKeyDown(event)\n        //   return false\n        // }\n      }\n\n      return true;\n    }\n  }, {\n    key: 'getInput',\n    value: function getInput() {\n      return (0, _reactDom.findDOMNode)(this.field);\n    }\n  }, {\n    key: 'isFocused',\n    value: function isFocused() {\n      return this.state.focused;\n    }\n  }, {\n    key: 'isLazyFocused',\n    value: function isLazyFocused() {\n      return this.isFocused() || this.isTimeInputFocused();\n    }\n  }, {\n    key: 'isTimeInputFocused',\n    value: function isTimeInputFocused() {\n      if (this.pickerView && this.pickerView.isTimeInputFocused) {\n        return this.pickerView.isTimeInputFocused();\n      }\n\n      return false;\n    }\n  }, {\n    key: 'onFieldFocus',\n    value: function onFieldFocus(event) {\n      if (this.state.focused) {\n        return;\n      }\n\n      this.setState({\n        focused: true\n      });\n\n      if (this.props.expandOnFocus) {\n        this.setExpanded(true);\n      }\n\n      this.props.onFocus(event);\n    }\n  }, {\n    key: 'onFieldBlur',\n    value: function onFieldBlur(event) {\n      var _this4 = this;\n\n      if (!this.isFocused()) {\n        return;\n      }\n\n      this.setState({\n        focused: false\n      });\n\n      this.props.onBlur(event);\n\n      if (!this.pickerView || !this.pickerView.isTimeInputFocused) {\n        this.onLazyBlur();\n        return;\n      }\n\n      setTimeout(function () {\n        return _this4.onLazyBlur();\n      }, 0);\n    }\n  }, {\n    key: 'onClockEnterKey',\n    value: function onClockEnterKey() {\n      if (!this.isFocused()) {\n        this.focus();\n      }\n\n      this.onFooterOkClick();\n    }\n  }, {\n    key: 'onClockEscapeKey',\n    value: function onClockEscapeKey() {\n      if (!this.isFocused()) {\n        this.focus();\n      }\n\n      this.onFooterCancelClick();\n    }\n  }, {\n    key: 'onClockInputBlur',\n    value: function onClockInputBlur() {\n      var _this5 = this;\n\n      setTimeout(function () {\n        if (!_this5.isFocused()) {\n          _this5.onLazyBlur();\n        }\n      }, 0);\n    }\n  }, {\n    key: 'onLazyBlur',\n    value: function onLazyBlur() {\n      var _this6 = this;\n\n      if (this.unmounted) {\n        return;\n      }\n\n      if (this.isTimeInputFocused()) {\n        return;\n      }\n\n      this.setExpanded(false);\n\n      if (!this.isValid() && this.props.validateOnBlur) {\n        (function () {\n          var value = _this6.lastValidDate && _this6.p.text != '' ? _this6.format(_this6.lastValidDate) : '';\n\n          setTimeout(function () {\n            _this6.onFieldChange(value);\n          }, 0);\n        })();\n      }\n    }\n  }, {\n    key: 'onInputChange',\n    value: function onInputChange() {}\n  }, {\n    key: 'isExpanded',\n    value: function isExpanded() {\n      return this.p.expanded;\n    }\n  }, {\n    key: 'toggleExpand',\n    value: function toggleExpand() {\n      this.setExpanded(!this.p.expanded);\n    }\n  }, {\n    key: 'setExpanded',\n    value: function setExpanded(bool) {\n      var _this7 = this;\n\n      var props = this.p;\n\n      if (bool === props.expanded) {\n        return;\n      }\n\n      if (!bool) {\n        this.onCollapse();\n      } else {\n        this.setState({}, function () {\n          _this7.onExpand();\n        });\n      }\n\n      if (bool && props.valid) {\n        this.setState({\n          // viewDate: props.date,\n          activeDate: props.date\n        });\n      }\n\n      if (this.props.expanded === undefined) {\n        this.setState({\n          expanded: bool\n        });\n      }\n\n      this.props.onExpandChange(bool);\n    }\n  }, {\n    key: 'onCollapse',\n    value: function onCollapse() {\n      this.props.onCollapse();\n    }\n  }, {\n    key: 'onExpand',\n    value: function onExpand() {\n      this.props.onExpand();\n    }\n  }, {\n    key: 'onFieldChange',\n    value: function onFieldChange(value) {\n      if (this.p.rawInput && typeof value != 'string') {\n        var event = value;\n        value = event.target.value;\n      }\n\n      var dateMoment = value == '' ? null : this.toMoment(value);\n\n      if (dateMoment === null || dateMoment.isValid()) {\n        this.onChange(dateMoment);\n      }\n\n      this.onTextChange(value);\n    }\n  }, {\n    key: 'onTextChange',\n    value: function onTextChange(text) {\n      if (this.props.text === undefined && this.props.value === undefined) {\n        this.setState({\n          text: text\n        });\n      }\n\n      if (this.props.onTextChange) {\n        this.props.onTextChange(text);\n      }\n    }\n  }, {\n    key: 'onPickerChange',\n    value: function onPickerChange(dateString, _ref, event) {\n      var dateMoment = _ref.dateMoment;\n      var forceUpdate = _ref.forceUpdate;\n\n      var isEnter = event && event.key == 'Enter';\n      var updateOnDateClick = forceUpdate ? true : this.props.updateOnDateClick || isEnter;\n\n      if (updateOnDateClick) {\n        (0, _forwardTime2.default)(this.time, dateMoment);\n\n        this.setDate(dateString, { dateMoment: dateMoment });\n\n        if (this.props.collapseOnDateClick || isEnter) {\n          this.setExpanded(false);\n        }\n      }\n    }\n  }, {\n    key: 'setDate',\n    value: function setDate(dateString, _ref2) {\n      var dateMoment = _ref2.dateMoment;\n      var _ref2$skipTime = _ref2.skipTime;\n      var skipTime = _ref2$skipTime === undefined ? false : _ref2$skipTime;\n\n      var props = this.p;\n\n      var currentDate = props.date;\n\n      if (props.valid && currentDate) {\n        var dateFormat = props.dateFormat.toLowerCase();\n\n        var hasTime = dateFormat.indexOf('k') != -1 || dateFormat.indexOf('h') != -1;\n\n        if (hasTime && !skipTime) {\n          ['hour', 'minute', 'second', 'millisecond'].forEach(function (part) {\n            dateMoment.set(part, currentDate.get(part));\n          });\n        }\n      }\n\n      this.onTextChange(this.format(dateMoment));\n      this.onChange(dateMoment);\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(dateMoment) {\n      if (dateMoment != null && !_moment2.default.isMoment(dateMoment)) {\n        dateMoment = this.toMoment(dateMoment);\n      }\n\n      (0, _forwardTime2.default)(this.time, dateMoment);\n\n      var newState = {};\n\n      if (this.props.value === undefined) {\n        (0, _objectAssign2.default)(newState, {\n          text: null,\n          value: dateMoment\n        });\n      }\n\n      newState.activeDate = dateMoment;\n\n      if (!this.pickerView || !this.pickerView.isInView || !this.pickerView.isInView(dateMoment)) {\n        newState.viewDate = dateMoment;\n      }\n\n      if (this.props.onChange) {\n        this.props.onChange(this.format(dateMoment), { dateMoment: dateMoment });\n      }\n\n      this.setState(newState);\n    }\n  }, {\n    key: 'format',\n    value: function format(mom, _format) {\n      return mom == null ? '' : mom.format(_format || this.p.displayFormat || this.p.dateFormat);\n    }\n  }, {\n    key: 'focusField',\n    value: function focusField() {\n      var input = (0, _reactDom.findDOMNode)(this.field);\n\n      if (input) {\n        input.focus();\n      }\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      this.focusField();\n    }\n  }]);\n\n  return DateField;\n}(_reactClass2.default);\n\nexports.default = DateField;\n\n\nDateField.defaultProps = {\n  showClock: undefined,\n\n  forceValidDate: false,\n  strict: true,\n\n  expandOnFocus: true,\n\n  updateOnDateClick: false,\n  collapseOnDateClick: false,\n\n  theme: 'default',\n\n  footer: true,\n\n  onBlur: function onBlur() {},\n  onFocus: function onFocus() {},\n\n  clearIcon: true,\n  validateOnBlur: true,\n\n  onExpandChange: function onExpandChange() {},\n  onCollapse: function onCollapse() {},\n  onExpand: function onExpand() {},\n\n  minDate: (0, _moment2.default)('1000-01-01', 'YYYY-MM-DD'),\n  maxDate: (0, _moment2.default)('9999-12-31 HH:mm:ss', 'YYYY-MM-DD 23:59:59'),\n\n  skipTodayTime: false\n};\n\nDateField.propTypes = {\n  dateFormat: _react.PropTypes.string.isRequired\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/DateField/icons.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CLEAR_ICON = undefined;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CLEAR_ICON = exports.CLEAR_ICON = _react2.default.createElement(\n  \"svg\",\n  { height: \"20\", width: \"20\", viewBox: \"0 0 24 24\" },\n  _react2.default.createElement(\"path\", { d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" }),\n  _react2.default.createElement(\"path\", { d: \"M0 0h24v24H0z\", fill: \"none\" })\n);","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/Calendar.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NAV_KEYS = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _assignDefined = require('./assignDefined');\n\nvar _assignDefined2 = _interopRequireDefault(_assignDefined);\n\nvar _MonthView = require('./MonthView');\n\nvar _MonthView2 = _interopRequireDefault(_MonthView);\n\nvar _toMoment = require('./toMoment');\n\nvar _toMoment2 = _interopRequireDefault(_toMoment);\n\nvar _join = require('./join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _ClockInput = require('./ClockInput');\n\nvar _ClockInput2 = _interopRequireDefault(_ClockInput);\n\nvar _forwardTime = require('./utils/forwardTime');\n\nvar _forwardTime2 = _interopRequireDefault(_forwardTime);\n\nvar _reactFlex = require('react-flex');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Calendar = function (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar(props) {\n    _classCallCheck(this, Calendar);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Calendar).call(this, props));\n\n    _this.state = {\n      timeFocused: false\n    };\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: 'prepareDate',\n    value: function prepareDate(props) {\n      return (0, _toMoment2.default)(props.date, props);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.p = (0, _objectAssign2.default)({}, this.props);\n      var dateFormat = props.dateFormat.toLowerCase();\n\n      props.date = this.prepareDate(props);\n      if (props.showClock === undefined) {\n        props.showClock = dateFormat.indexOf('k') != -1 || dateFormat.indexOf('h') != -1;\n      }\n\n      var timeFormat = dateFormat.substring(dateFormat.toLowerCase().indexOf('hh'));\n\n      props.timeFormat = timeFormat;\n\n      var className = (0, _join2.default)(props.className, 'react-date-picker__calendar', props.theme && 'react-date-picker__calendar--theme-' + props.theme);\n\n      var monthViewProps = (0, _objectAssign2.default)({}, this.props);\n\n      delete monthViewProps.onTimeChange;\n      delete monthViewProps.showClock;\n      delete monthViewProps.updateOnWheel;\n      delete monthViewProps.wrapTime;\n\n      if (typeof this.props.cleanup == 'function') {\n        this.props.cleanup(monthViewProps);\n      }\n\n      var monthView = _react2.default.createElement(_MonthView2.default, _extends({}, monthViewProps, {\n        onChange: this.onChange,\n        className: null,\n        style: null,\n        ref: function ref(view) {\n          _this2.view = view;\n        },\n        renderChildren: this.renderChildren\n      }));\n\n      return _react2.default.createElement(\n        _reactFlex.Flex,\n        { inline: true, row: true, wrap: false, className: className, style: props.style },\n        monthView\n      );\n    }\n  }, {\n    key: 'isHistoryViewVisible',\n    value: function isHistoryViewVisible() {\n      if (this.view && this.view.isHistoryViewVisible) {\n        return this.view.isHistoryViewVisible();\n      }\n\n      return false;\n    }\n  }, {\n    key: 'renderChildren',\n    value: function renderChildren(_ref) {\n      var _ref2 = _slicedToArray(_ref, 3);\n\n      var navBar = _ref2[0];\n      var inner = _ref2[1];\n      var footer = _ref2[2];\n\n      var props = this.p;\n      var clockInput = props.showClock && this.renderClockInput();\n\n      var children = [navBar, _react2.default.createElement(\n        _reactFlex.Flex,\n        { justifyContent: 'center', wrap: this.props.wrap || this.props.wrapTime },\n        _react2.default.createElement(_reactFlex.Flex, {\n          flexGrow: '1',\n          flexShrink: '0',\n          flexBasis: 'auto',\n          column: true,\n          wrap: false,\n          alignItems: 'stretch',\n          children: inner\n        }),\n        clockInput\n      ), footer];\n\n      return _react2.default.createElement(_reactFlex.Flex, {\n        column: true,\n        wrap: false,\n        alignItems: 'stretch',\n        children: children\n      });\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      if (this.view) {\n        this.view.focus();\n      }\n    }\n  }, {\n    key: 'isFocused',\n    value: function isFocused() {\n      if (this.view) {\n        return this.view.isFocused();\n      }\n\n      return false;\n    }\n  }, {\n    key: 'onViewKeyDown',\n    value: function onViewKeyDown() {\n      if (this.view) {\n        var _view;\n\n        (_view = this.view).onViewKeyDown.apply(_view, arguments);\n      }\n    }\n  }, {\n    key: 'isTimeInputFocused',\n    value: function isTimeInputFocused() {\n      return this.state.timeFocused;\n    }\n  }, {\n    key: 'renderClockInput',\n    value: function renderClockInput() {\n      var _this3 = this,\n          _clockInputProps;\n\n      var clockInput = null;\n\n      var readOnly = this.props.readOnly;\n\n      var clockInputProps = (_clockInputProps = {\n        ref: function ref(clkInput) {\n          _this3.clockInput = clkInput;\n        },\n        viewIndex: this.props.viewIndex,\n        dateFormat: this.p.dateFormat\n      }, _defineProperty(_clockInputProps, readOnly ? 'value' : 'defaultValue', this.p.date), _defineProperty(_clockInputProps, 'onFocus', this.onClockInputFocus), _defineProperty(_clockInputProps, 'onBlur', this.onClockInputBlur), _defineProperty(_clockInputProps, 'onChange', this.onTimeChange), _defineProperty(_clockInputProps, 'onMouseDown', this.onClockInputMouseDown), _clockInputProps);\n\n      (0, _assignDefined2.default)(clockInputProps, {\n        onEnterKey: this.props.onClockEnterKey,\n        onEscapeKey: this.props.onClockEscapeKey,\n        readOnly: readOnly,\n        tabIndex: readOnly ? null : this.props.clockTabIndex,\n        theme: this.props.theme,\n        updateOnWheel: this.props.updateOnWheel\n      });\n\n      if (clockInput) {\n        return _react2.default.cloneElement(clockInput, clockInputProps);\n      }\n\n      return _react2.default.createElement(_ClockInput2.default, clockInputProps);\n    }\n  }, {\n    key: 'onClockInputFocus',\n    value: function onClockInputFocus() {\n      this.setState({\n        timeFocused: true\n      });\n\n      this.props.onClockInputFocus();\n    }\n  }, {\n    key: 'onClockInputBlur',\n    value: function onClockInputBlur() {\n      this.setState({\n        timeFocused: false\n      });\n\n      this.props.onClockInputBlur();\n    }\n  }, {\n    key: 'onClockInputMouseDown',\n    value: function onClockInputMouseDown(event) {\n      event.stopPropagation();\n      if (event.target && event.target.type != 'text') {\n        // in order not to blur - in case we're in a date field\n        event.preventDefault();\n      }\n\n      this.clockInput.focus();\n    }\n  }, {\n    key: 'onTimeChange',\n    value: function onTimeChange(value, timeFormat) {\n      this.time = value;\n      this.props.onTimeChange(value, timeFormat);\n\n      var view = this.view;\n      var moment = view.p.moment;\n\n      if (moment == null) {\n        return;\n      }\n\n      view.onChange({\n        dateMoment: moment,\n        timestamp: +moment\n      });\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(dateString, _ref3, event) {\n      var dateMoment = _ref3.dateMoment;\n      var timestamp = _ref3.timestamp;\n\n      var props = this.p;\n\n      if (props.showClock) {\n        var time = (0, _toMoment2.default)(this.time || this.clockInput.getValue(), {\n          dateFormat: props.timeFormat,\n          locale: props.locale\n        });\n\n        (0, _forwardTime2.default)(time, dateMoment);\n        timestamp = +dateMoment;\n        dateString = this.view.format(dateMoment);\n      }\n\n      if (this.props.onChange) {\n        this.props.onChange(dateString, { dateMoment: dateMoment, timestamp: timestamp, dateString: dateString }, event);\n      }\n    }\n  }]);\n\n  return Calendar;\n}(_reactClass2.default);\n\nexports.default = Calendar;\n\n\nCalendar.defaultProps = {\n  dateFormat: 'YYYY-MM-DD',\n\n  theme: 'default',\n\n  isDatePicker: true,\n  wrapTime: false,\n\n  onTimeChange: function onTimeChange() {},\n\n  onClockEnterKey: function onClockEnterKey() {},\n  onClockInputBlur: function onClockInputBlur() {},\n  onClockInputFocus: function onClockInputFocus() {},\n\n  onFooterTodayClick: function onFooterTodayClick() {},\n  onFooterCancelClick: function onFooterCancelClick() {},\n  onFooterClearClick: function onFooterClearClick() {},\n  onFooterOkClick: function onFooterOkClick() {}\n};\n\nCalendar.propTypes = {};\n\nexports.NAV_KEYS = _MonthView.NAV_KEYS;","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/MonthView.old.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactClass = require('react-class');\n\nvar _reactClass2 = _interopRequireDefault(_reactClass);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _format = require('./utils/format');\n\nvar _format2 = _interopRequireDefault(_format);\n\nvar _asConfig = require('./utils/asConfig');\n\nvar _asConfig2 = _interopRequireDefault(_asConfig);\n\nvar _onEnter = require('./onEnter');\n\nvar _onEnter2 = _interopRequireDefault(_onEnter);\n\nvar _toMoment = require('./toMoment');\n\nvar _toMoment2 = _interopRequireDefault(_toMoment);\n\nvar _isInRange = require('./utils/isInRange');\n\nvar _isInRange2 = _interopRequireDefault(_isInRange);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TODAY = void 0;\n\nvar emptyFn = function emptyFn() {};\n\nvar MonthView = function (_Component) {\n  _inherits(MonthView, _Component);\n\n  function MonthView(props) {\n    _classCallCheck(this, MonthView);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MonthView).call(this, props));\n\n    _this.state = {\n      range: null\n    };\n    return _this;\n  }\n\n  /**\n   * Formats the given date in the specified format.\n   * @method format\n   *\n   * @param  {Date/String/Moment} value\n   * @param  {String} [format] If none specified, #dateFormat will be used\n   *\n   * @return {String}\n   */\n\n  _createClass(MonthView, [{\n    key: 'formatAsDay',\n    value: function formatAsDay(moment, dayDisplayFormat) {\n      return moment.format(dayDisplayFormat || 'D');\n    }\n  }, {\n    key: 'getWeekStartMoment',\n    value: function getWeekStartMoment(value) {\n      var weekStartDay = this.weekStartDay;\n      var clone = this.toMoment(value).day(weekStartDay);\n\n      return clone;\n    }\n\n    /**\n     * Returns all the days in the specified month.\n     *\n     * @param  {Moment/Date/Number} value\n     * @return {Moment[]}\n     */\n\n  }, {\n    key: 'getDaysInMonth',\n    value: function getDaysInMonth(value) {\n      var first = this.toMoment(value).startOf('month');\n      var beforeFirst = this.toMoment(value).startOf('month').add(-1, 'days');\n\n      var start = this.getWeekStartMoment(first);\n\n      var result = [];\n\n      var i = 0;\n\n      if (beforeFirst.isBefore(start)\n      // and it doesn't start with a full week before and the week has at least 1 day from current month (default)\n       && (this.props.alwaysShowPrevWeek || !start.isSame(first))) {\n        start.add(-1, 'weeks');\n      }\n\n      for (; i < 42; i++) {\n        result.push(this.toMoment(start));\n        start.add(1, 'days');\n      }\n\n      return result;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n\n      var props = (0, _objectAssign2.default)({}, this.props);\n\n      this.toMoment = function (value, dateFormat) {\n        return (0, _toMoment2.default)(value, dateFormat || props.dateFormat, { locale: props.locale });\n      };\n\n      TODAY = +this.toMoment().startOf('day');\n\n      var dateFormat = props.dateFormat;\n      var viewMoment = props.viewMoment = this.toMoment(props.viewDate, dateFormat);\n\n      var weekStartDay = props.weekStartDay;\n\n      if (weekStartDay == null) {\n        weekStartDay = props.localeData._week ? props.localeData._week.dow : null;\n      }\n\n      this.weekStartDay = props.weekStartDay = weekStartDay;\n\n      if (props.minDate && _moment2.default.isMoment(props.minDate)) {\n        props.minDate.startOf('day');\n      }\n\n      props.minDate && (props.minDate = +this.toMoment(props.minDate, dateFormat));\n      props.maxDate && (props.maxDate = +this.toMoment(props.maxDate, dateFormat));\n\n      this.monthFirst = this.toMoment(viewMoment).startOf('month');\n      this.monthLast = this.toMoment(viewMoment).endOf('month');\n\n      if (props.date) {\n        props.moment = this.props.range ? null : this.toMoment(props.date).startOf('day');\n      }\n\n      var daysInView = this.getDaysInMonth(viewMoment);\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'dp-table dp-month-view', onMouseLeave: props.highlightRangeOnMouseMove && this.handleViewMouseLeave },\n        this.renderWeekDayNames(),\n        this.renderDays(props, daysInView)\n      );\n    }\n  }, {\n    key: 'handleViewMouseLeave',\n    value: function handleViewMouseLeave() {\n      this.state.range && this.setState({ range: null });\n    }\n\n    /**\n     * Render the week number cell\n     * @param  {Moment[]} days The days in a week\n     * @return {React.DOM}\n     */\n\n  }, {\n    key: 'renderWeekNumber',\n    value: function renderWeekNumber(props, days) {\n\n      var firstDayOfWeek = days[0];\n      var week = firstDayOfWeek.weeks();\n      var dateTimestamp = +firstDayOfWeek;\n\n      var weekNumberProps = {\n        key: 'week',\n        className: 'dp-cell dp-weeknumber',\n\n        //week number\n        week: week,\n\n        //the days in this week\n        days: days,\n\n        date: firstDayOfWeek,\n        children: week\n      };\n\n      var renderWeekNumber = props.renderWeekNumber;\n\n      var result = void 0;\n\n      if (renderWeekNumber) {\n        result = renderWeekNumber(weekNumberProps);\n      }\n\n      if (result === undefined) {\n        result = _react2.default.createElement('div', weekNumberProps);\n      }\n\n      return result;\n    }\n\n    /**\n     * Render the given array of days\n     * @param  {Moment[]} days\n     * @return {React.DOM}\n     */\n\n  }, {\n    key: 'renderDays',\n    value: function renderDays(props, days) {\n      var _this2 = this;\n\n      var nodes = days.map(function (date) {\n        return _this2.renderDay(props, date);\n      });\n\n      var len = days.length;\n      var buckets = [];\n      var bucketsLen = Math.ceil(len / 7);\n\n      var i = 0;\n      var weekStart = void 0;\n      var weekEnd = void 0;\n\n      for (; i < bucketsLen; i++) {\n\n        weekStart = i * 7;\n        weekEnd = (i + 1) * 7;\n\n        buckets.push([props.weekNumbers && this.renderWeekNumber(props, days.slice(weekStart, weekEnd))].concat(nodes.slice(weekStart, weekEnd)));\n      }\n\n      return buckets.map(function (bucket, i) {\n        return _react2.default.createElement(\n          'div',\n          { key: \"row\" + i, className: 'dp-week dp-row' },\n          bucket\n        );\n      });\n    }\n  }, {\n    key: 'renderDay',\n    value: function renderDay(props, date) {\n      var dayText = _format2.default.day(date, props.dayFormat);\n      var classes = [\"dp-cell dp-day\"];\n\n      var dateTimestamp = +date;\n      var mom = this.toMoment(date);\n      var onClick = this.handleClick.bind(this, props, date, dateTimestamp);\n\n      var range = this.state.range || this.props.range;\n\n      var beforeMinDate = void 0;\n\n      if (dateTimestamp == TODAY) {\n        classes.push('dp-current');\n      } else if (dateTimestamp < this.monthFirst) {\n        classes.push('dp-prev');\n      } else if (dateTimestamp > this.monthLast) {\n        classes.push('dp-next');\n      }\n\n      if (props.minDate && date < props.minDate) {\n        classes.push('dp-disabled dp-before-min');\n        beforeMinDate = true;\n      }\n\n      var afterMaxDate = void 0;\n      if (props.maxDate && date > props.maxDate) {\n        classes.push('dp-disabled dp-after-max');\n        afterMaxDate = true;\n      }\n\n      if (dateTimestamp == props.moment) {\n        classes.push('dp-value');\n      }\n\n      if (range) {\n        var start = mom;\n        var end = (0, _moment2.default)(start).endOf('day');\n\n        var _range = _slicedToArray(range, 2);\n\n        var rangeStart = _range[0];\n        var rangeEnd = _range[1];\n\n        if ((0, _isInRange2.default)(start, range) || (0, _isInRange2.default)(end, range) || rangeStart && (0, _isInRange2.default)(rangeStart, [start, end]) || rangeEnd && (0, _isInRange2.default)(rangeEnd, [start, end])) {\n          classes.push('dp-in-range');\n        }\n      }\n\n      var weekDay = mom.day();\n\n      if (weekDay === 0 /* Sunday */ || weekDay === 6 /* Saturday */) {\n          classes.push('dp-weekend');\n          props.highlightWeekends && classes.push('dp-weekend-highlight');\n        }\n\n      var renderDayProps = {\n        role: 'link',\n        tabIndex: 1,\n        key: dayText,\n        text: dayText,\n        date: mom,\n        moment: mom,\n        className: classes.join(' '),\n        style: {},\n        onClick: onClick,\n        onKeyUp: (0, _onEnter2.default)(onClick),\n        children: dayText\n      };\n\n      if (props.range && props.highlightRangeOnMouseMove) {\n        renderDayProps.onMouseEnter = this.handleDayMouseEnter.bind(this, renderDayProps);\n      }\n\n      if (beforeMinDate) {\n        renderDayProps.isDisabled = true;\n        renderDayProps.beforeMinDate = true;\n      }\n      if (afterMaxDate) {\n        renderDayProps.isDisabled = true;\n        renderDayProps.afterMaxDate = true;\n      }\n\n      if (typeof props.onRenderDay === 'function') {\n        renderDayProps = props.onRenderDay(renderDayProps);\n      }\n\n      var defaultRenderFunction = _react2.default.DOM.div;\n      var renderFunction = props.renderDay || defaultRenderFunction;\n\n      var result = renderFunction(renderDayProps);\n\n      if (result === undefined) {\n        result = defaultRenderFunction(renderDayProps);\n      }\n\n      return result;\n    }\n  }, {\n    key: 'handleDayMouseEnter',\n    value: function handleDayMouseEnter(dayProps) {\n      var range = this.props.range;\n\n      if (range && range.length == 1) {\n        var _range2 = _slicedToArray(range, 1);\n\n        var start = _range2[0];\n\n\n        this.setState({\n          range: [start, dayProps.date].sort(function (a, b) {\n            return a - b;\n          })\n        });\n      } else if (this.state.range) {\n        this.setState({\n          range: null\n        });\n      }\n    }\n  }, {\n    key: 'getWeekDayNames',\n    value: function getWeekDayNames(props) {\n      props = props || this.props;\n\n      var names = props.weekDayNames;\n      var weekStartDay = this.weekStartDay;\n\n      if (typeof names == 'function') {\n        names = names(weekStartDay, props.locale);\n      } else if (Array.isArray(names)) {\n\n        names = [].concat(names);\n\n        var index = weekStartDay;\n\n        while (index > 0) {\n          names.push(names.shift());\n          index--;\n        }\n      }\n\n      return names;\n    }\n  }, {\n    key: 'renderWeekDayNames',\n    value: function renderWeekDayNames() {\n      var weekNumber = this.props.weekNumbers ? [this.props.weekNumberName] : [];\n      var names = weekNumber.concat(this.getWeekDayNames());\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'dp-row dp-week-day-names' },\n        names.map(function (name, index) {\n          return _react2.default.createElement(\n            'div',\n            { key: index, className: 'dp-cell dp-week-day-name' },\n            name\n          );\n        })\n      );\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick(props, date, timestamp, event) {\n      if (props.minDate && timestamp < props.minDate) {\n        return;\n      }\n\n      if (props.maxDate && timestamp > props.maxDate) {\n        return;\n      }\n\n      event.target.value = date;(props.onChange || emptyFn)(date, event);\n    }\n  }]);\n\n  return MonthView;\n}(_reactClass2.default);\n\nexports.default = MonthView;\n\n\nMonthView.defaultProps = (0, _asConfig2.default)();\n\nMonthView.getHeaderText = function (moment, props) {\n  return (0, _toMoment2.default)(moment, null, { locale: props.locale }).format('MMMM YYYY');\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/onEnter.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (fn) {\n  return function (event) {\n    if (event.key == 'Enter') {\n      fn(event);\n    }\n  };\n};","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/src/index.js":"import MonthView from './MonthView'\n\nimport TimePicker from './TimePicker'\nimport TimeInput from './TimeInput'\n\nimport TransitionView from './TransitionView'\nimport MultiMonthView from './MultiMonthView'\n\nimport HistoryView from './HistoryView'\nimport YearView from './YearView'\nimport DecadeView from './DecadeView'\n\nimport NavBar from './NavBar'\nimport Footer from './Footer'\n\nimport Clock from './Clock'\nimport ClockInput from './ClockInput'\n\nimport DateField from './DateField'\nimport Calendar from './Calendar'\nimport DateFormatInput from './DateFormatInput'\nimport DateFormatSpinnerInput from './DateFormatSpinnerInput'\n\nexport default MonthView\n\n// allow people to import with other aliases as well\nexport const DatePicker = Calendar\nexport const DateEditor = DateField\n\nexport {\n  MonthView,\n  YearView,\n  DecadeView,\n  HistoryView,\n\n  DateFormatInput,\n  DateFormatSpinnerInput,\n\n  TransitionView,\n  MultiMonthView,\n  NavBar,\n  Footer,\n\n  Clock,\n  ClockInput,\n\n  DateField,\n  Calendar,\n  TimePicker,\n  TimeInput\n}\n","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/src/MonthView.old.js":"import React from 'react'\nimport Component from 'react-class'\n\nimport moment from 'moment'\nimport assign from 'object-assign'\n\nimport FORMAT from './utils/format'\nimport asConfig from './utils/asConfig'\nimport onEnter from './onEnter'\nimport toMoment from './toMoment'\n\nimport isInRange from './utils/isInRange'\n\nlet TODAY\n\nconst emptyFn = () => {}\n\nexport default class MonthView extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      range: null\n    }\n  }\n\n  /**\n   * Formats the given date in the specified format.\n   * @method format\n   *\n   * @param  {Date/String/Moment} value\n   * @param  {String} [format] If none specified, #dateFormat will be used\n   *\n   * @return {String}\n   */\n\n  formatAsDay(moment, dayDisplayFormat){\n    return moment.format(dayDisplayFormat || 'D')\n  }\n\n  getWeekStartMoment(value){\n    const weekStartDay = this.weekStartDay\n    const clone = this.toMoment(value).day(weekStartDay)\n\n    return clone\n  }\n\n  /**\n   * Returns all the days in the specified month.\n   *\n   * @param  {Moment/Date/Number} value\n   * @return {Moment[]}\n   */\n  getDaysInMonth(value){\n    const first  = this.toMoment(value).startOf('month')\n    const beforeFirst = this.toMoment(value).startOf('month').add(-1, 'days')\n\n    const start  = this.getWeekStartMoment(first)\n\n    const result = []\n\n    let i = 0\n\n    if (\n      beforeFirst.isBefore(start)\n      // and it doesn't start with a full week before and the week has at least 1 day from current month (default)\n      &&\n      (this.props.alwaysShowPrevWeek || !start.isSame(first))\n    ){\n      start.add(-1, 'weeks')\n    }\n\n    for (; i < 42; i++){\n      result.push(this.toMoment(start))\n      start.add(1, 'days')\n    }\n\n    return result\n  }\n\n  render() {\n\n    const props = assign({}, this.props)\n\n    this.toMoment = function(value, dateFormat){\n      return toMoment(value, dateFormat || props.dateFormat, { locale: props.locale })\n    }\n\n    TODAY = +this.toMoment().startOf('day')\n\n    const dateFormat = props.dateFormat\n    const viewMoment = props.viewMoment = this.toMoment(props.viewDate, dateFormat)\n\n    let weekStartDay = props.weekStartDay\n\n    if (weekStartDay == null){\n      weekStartDay = props.localeData._week? props.localeData._week.dow: null\n    }\n\n    this.weekStartDay = props.weekStartDay = weekStartDay\n\n    if (props.minDate && moment.isMoment(props.minDate)){\n      props.minDate.startOf('day');\n    }\n\n    props.minDate && (props.minDate = +this.toMoment(props.minDate, dateFormat))\n    props.maxDate && (props.maxDate = +this.toMoment(props.maxDate, dateFormat))\n\n    this.monthFirst = this.toMoment(viewMoment).startOf('month')\n    this.monthLast  = this.toMoment(viewMoment).endOf('month')\n\n    if (props.date){\n      props.moment = this.props.range? null : this.toMoment(props.date).startOf('day')\n    }\n\n    const daysInView = this.getDaysInMonth(viewMoment)\n\n    return <div className=\"dp-table dp-month-view\" onMouseLeave={props.highlightRangeOnMouseMove && this.handleViewMouseLeave}>\n      {this.renderWeekDayNames()}\n      {this.renderDays(props, daysInView)}\n    </div>\n  }\n\n  handleViewMouseLeave(){\n    this.state.range && this.setState({ range: null })\n  }\n\n  /**\n   * Render the week number cell\n   * @param  {Moment[]} days The days in a week\n   * @return {React.DOM}\n   */\n  renderWeekNumber (props, days) {\n\n    const firstDayOfWeek = days[0]\n    const week = firstDayOfWeek.weeks()\n    const dateTimestamp = +firstDayOfWeek\n\n    const weekNumberProps = {\n      key: 'week',\n      className: 'dp-cell dp-weeknumber',\n\n      //week number\n      week: week,\n\n      //the days in this week\n      days: days,\n\n      date: firstDayOfWeek,\n      children: week\n    }\n\n    const renderWeekNumber = props.renderWeekNumber\n\n    let result\n\n    if (renderWeekNumber){\n      result = renderWeekNumber(weekNumberProps)\n    }\n\n    if (result === undefined){\n      result = <div {...weekNumberProps} />\n    }\n\n    return result\n\n  }\n\n  /**\n   * Render the given array of days\n   * @param  {Moment[]} days\n   * @return {React.DOM}\n   */\n  renderDays(props, days) {\n    const nodes = days.map((date) => this.renderDay(props, date))\n\n    const len = days.length\n    const buckets = []\n    const bucketsLen = Math.ceil(len / 7)\n\n    let i = 0\n    let weekStart\n    let weekEnd\n\n    for ( ; i < bucketsLen; i++){\n\n      weekStart = i * 7\n      weekEnd = (i + 1) * 7\n\n      buckets.push(\n        [\n          props.weekNumbers && this.renderWeekNumber(props, days.slice(weekStart, weekEnd))\n        ].concat(\n          nodes.slice(weekStart, weekEnd)\n        )\n      )\n    }\n\n    return buckets.map((bucket, i) => <div key={\"row\" + i} className=\"dp-week dp-row\">{bucket}</div>)\n  }\n\n  renderDay(props, date) {\n    const dayText = FORMAT.day(date, props.dayFormat)\n    const classes = [\"dp-cell dp-day\"]\n\n    const dateTimestamp = +date\n    const mom = this.toMoment(date)\n    const onClick = this.handleClick.bind(this, props, date, dateTimestamp)\n\n    const range = this.state.range || this.props.range\n\n    let beforeMinDate\n\n    if (dateTimestamp == TODAY){\n      classes.push('dp-current')\n    } else if (dateTimestamp < this.monthFirst){\n      classes.push('dp-prev')\n    } else if (dateTimestamp > this.monthLast){\n      classes.push('dp-next')\n    }\n\n\n    if (props.minDate && date < props.minDate){\n      classes.push('dp-disabled dp-before-min')\n      beforeMinDate = true\n    }\n\n    let afterMaxDate\n    if (props.maxDate && date > props.maxDate){\n      classes.push('dp-disabled dp-after-max')\n      afterMaxDate = true\n    }\n\n    if (dateTimestamp == props.moment){\n      classes.push('dp-value')\n    }\n\n\n    if (range){\n      const start = mom\n      const end = moment(start).endOf('day')\n\n      const [rangeStart, rangeEnd] = range\n      if (\n        isInRange(start, range) ||\n        isInRange(end, range) ||\n        rangeStart && isInRange(rangeStart, [start, end]) ||\n        rangeEnd && isInRange(rangeEnd, [start, end])\n      ) {\n        classes.push('dp-in-range')\n      }\n    }\n\n    let weekDay = mom.day()\n\n    if (weekDay === 0 /* Sunday */ || weekDay === 6 /* Saturday */){\n      classes.push('dp-weekend')\n      props.highlightWeekends && classes.push('dp-weekend-highlight')\n    }\n\n    let renderDayProps = {\n      role: 'link',\n      tabIndex: 1,\n      key: dayText,\n      text: dayText,\n      date: mom,\n      moment: mom,\n      className: classes.join(' '),\n      style: {},\n      onClick: onClick,\n      onKeyUp: onEnter(onClick),\n      children: dayText\n    }\n\n    if (props.range && props.highlightRangeOnMouseMove){\n      renderDayProps.onMouseEnter = this.handleDayMouseEnter.bind(this, renderDayProps)\n    }\n\n    if (beforeMinDate){\n      renderDayProps.isDisabled = true\n      renderDayProps.beforeMinDate = true\n    }\n    if (afterMaxDate){\n      renderDayProps.isDisabled = true\n      renderDayProps.afterMaxDate = true\n    }\n\n    if (typeof props.onRenderDay === 'function'){\n      renderDayProps = props.onRenderDay(renderDayProps)\n    }\n\n    const defaultRenderFunction = React.DOM.div\n    const renderFunction = props.renderDay || defaultRenderFunction\n\n    let result = renderFunction(renderDayProps)\n\n    if (result === undefined){\n      result = defaultRenderFunction(renderDayProps)\n    }\n\n    return result\n  }\n\n  handleDayMouseEnter(dayProps){\n    const range = this.props.range\n\n    if (range && range.length == 1){\n      const [start] = range\n\n      this.setState({\n        range: [start, dayProps.date].sort((a, b) => a - b)\n      })\n    } else if (this.state.range){\n      this.setState({\n        range: null\n      })\n    }\n  }\n\n  getWeekDayNames(props) {\n    props = props || this.props\n\n    let names = props.weekDayNames\n    const weekStartDay = this.weekStartDay\n\n    if (typeof names == 'function'){\n      names = names(weekStartDay, props.locale)\n    } else if (Array.isArray(names)){\n\n      names = [].concat(names)\n\n      let index = weekStartDay\n\n      while (index > 0){\n        names.push(names.shift())\n        index--\n      }\n    }\n\n    return names\n  }\n\n  renderWeekDayNames(){\n    const weekNumber = this.props.weekNumbers ? [this.props.weekNumberName] : []\n    const names = weekNumber.concat(this.getWeekDayNames())\n\n    return <div className=\"dp-row dp-week-day-names\">\n      {names.map( (name, index) => <div key={index} className=\"dp-cell dp-week-day-name\">{name}</div>)}\n    </div>\n  }\n\n    handleClick(props, date, timestamp, event) {\n      if (props.minDate && timestamp < props.minDate){\n        return\n      }\n\n      if (props.maxDate && timestamp > props.maxDate){\n        return\n      }\n\n      event.target.value = date\n\n      ;(props.onChange || emptyFn)(date, event)\n    }\n}\n\nMonthView.defaultProps = asConfig()\n\nMonthView.getHeaderText = (moment, props) => {\n  return toMoment(moment, null, {locale: props.locale}).format('MMMM YYYY')\n}\n","/home/travis/build/npmtest/node-npmtest-react-date-picker/node_modules/react-date-picker/lib/DateFormatInput/toUpperFirst.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : '';\n};"}